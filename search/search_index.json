{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Hello! Welcome to my world! \u00b6","title":"Hello! Welcome to my world!"},{"location":"#hello-welcome-to-my-world","text":"","title":"Hello! Welcome to my world!"},{"location":"Database/2018-03-14-basic-database/","text":"Database basic knowledge \u00b6 Oracle Common Commands \u00b6 Install sqlplus instantclient to connect oracle. \u00b6 Download instantclient-basic-windows.x64-19.3.0.0.0dbru.zip Download instantclient-sqlplus-windows.x64-19.3.0.0.0dbru.zip Extract them to current folder. Set Env Path C:\\Users\\ \\Downloads\\oracle\\instantclient_19_3 win + r cmd sqlplus idaDbAdmin/idaDbAdmin@127.0.0.1:32778/ORCLCDB.localdomain Common scripts \u00b6 // login vm ssh <YOUR_IP> // open sqlplus client docker exec -it oracle12c bash -c \"source /home/oracle/.bashrc; sqlplus /nolog\" SQL> connect / as sysdba // search service names SQL> select value from v$parameter where name='service_names' SQL> grant create procedure to idaDbAdmin; SQL> grant execute on sys.dbms_crypto to idaDbAdmin; SQL> connect idaDbAdmin/idaDbAdmin SQL> set serveroutput on // md5 // https://docs.oracle.com/database/121/DBSEG/data_encryption.htm#DBSEG335 Create procedure with md5 \u00b6 create or replace procedure addUser (u_pass in varchar2, u_key in varchar2) is org_id number; raw_input RAW(128) := UTL_RAW.CAST_TO_RAW(u_pass); raw_key RAW(128) := UTL_RAW.CAST_TO_RAW(u_key); encrypted_raw RAW(2048); encrypted_pass varchar2(100); begin select id into org_id from organization where company_name = 'IDA'; dbms_output.put_line(org_id); encrypted_raw := dbms_crypto.Mac(src => raw_input, typ => DBMS_CRYPTO.HMAC_MD5, key => raw_key); dbms_output.put_line('> Result : ' || rawtohex(encrypted_raw)); end; / call addUser('idaAdmin', 'idaAdmin'); DB2 Common Commands \u00b6 db2start db2 force application all db2stop db2 create database YOUR_DB automatic storage yes using codeset UTF-8 territory US pagesize 32768 db2 connect to YOUR_DB db2 CREATE BUFFERPOOL BP32K IMMEDIATE ALL DBPARTITIONNUMS SIZE AUTOMATIC NUMBLOCKPAGES 0 PAGESIZE 32 K db2 drop database db2 list db directory db2 list active databases db2 list tables db2 -tvf scripts.sql db2 ? 22001 \u6570\u636e\u5e93\u5de6\u8fde\u63a5\u548c\u53f3\u8fde\u63a5\u7684\u533a\u522b\uff1f / \u5de6\u8fde\u63a5\u540e\u7684\u68c0\u7d22\u7ed3\u679c\u662f\u663e\u793a t1\u7684\u6240\u6709\u6570\u636e\u548ct2\u4e2d\u6ee1\u8db3where\u6761\u4ef6\u7684\u6570\u636e / select * from t1 left join t2 where t1 . id = t2 . sid ; \u6570\u636e\u5e93\u76844\u4e2a\u9694\u79bb\u7ea7\u522b ISOLATION_DEFAULT ISOLATION_READ_UNCOMMITTED \u53ef\u80fd\u4f1a\u53d1\u751f\u8bfb\u810f\uff0c\u4e0d\u53ef\u91cd\u590d\u8bfb\u548c\u5e7b\u8bfb ISOLATION_READ_COMMITTED \u963b\u6b62\u8bfb\u810f\uff0c\u53ef\u80fd\u4f1a\u53d1\u751f\u4e0d\u53ef\u91cd\u590d\u8bfb\u548c\u5e7b\u8bfb ISOLATION_REPEATABLE_READ \u963b\u6b62\u8bfb\u810f\u548c\u4e0d\u53ef\u91cd\u590d\u8bfb\uff0c\u53ef\u80fd\u4f1a\u53d1\u751f\u5e7b\u8bfb ISOLATION_SERIALIZABLE \u963b\u6b62\u53d1\u751f\u8bfb\u810f\uff0c\u4e0d\u53ef\u91cd\u590d\u8bfb\u548c\u5e7b\u8bfb \u6570\u636e\u5e93\u7684\u8bfb\u810f\uff0c\u4e0d\u53ef\u91cd\u590d\u8bfb\u548c\u5e7b\u8bfb\u7684\u533a\u522b \u8bfb\u810f \u8bfb\u810f\u53c8\u79f0\u65e0\u6548\u6570\u636e\u7684\u8bfb\u53d6\uff0c\u4e3e\u4f8b\u8bf4\u660e\uff1a begin transaction1 / \u4fee\u6539\u524d\u5de5\u8d44\u4e3a 500 / update employee set salary = 1000 where id = 1 ; begin transaction2 / \u4e8b\u52a1 2 \u53d1\u73b0\u5de5\u8d44\u5df2\u7ecf\u53d8\u4e3a 1000 / select * from employee where id = 1 ; transaction1 rollback / \u73b0\u5728\u5de5\u8d44\u53c8\u53d8\u4e3a\u4fee\u6539\u524d\u7684 500 \uff0c\u56e0\u6b64\u4e8b\u52a1 2 \u8bfb\u7684\u5c31\u662f\u810f\u6570\u636e / \u4e0d\u53ef\u91cd\u590d\u8bfb \u9488\u5bf9\u66f4\u65b0\u67d0\u4e00\u884c\u7684\u6570\u636e \u5728\u540c\u4e00\u4e2a\u4e8b\u52a1\u5185\uff0c\u4e24\u4e2a\u76f8\u540c\u7684\u67e5\u8be2\u8fd4\u56de\u7684\u7ed3\u679c\u4e0d\u540c\uff0c\u4e3e\u4f8b\u8bf4\u660e\uff1a begin transaction1 select * from employee where id = 1 ; / \u4e8b\u52a1 2 \u66f4\u65b0\u4e86\u8fd9\u6761\u6570\u636e / begin transaction2 update employee set salary = 1000 where id = 1 ; commit transaction1 select * from employee where id = 1 ; / \u53d1\u73b0\u4e24\u6b21\u8bfb\u5230\u7684\u6570\u636e\u4e0d\u4e00\u81f4 / \u5e7b\u8bfb \u9488\u5bf9\u65b0\u589e\u6216\u8005\u5220\u9664\u6570\u636e \u5728\u540c\u4e00\u4e2a\u4e8b\u52a1\u5185\uff0c\u4e24\u4e2a\u76f8\u540c\u7684\u67e5\u8be2\u8fd4\u56de\u7684\u7ed3\u679c\u4e0d\u540c\uff0c\u4e3e\u4f8b\u8bf4\u660e: begin transaction1 select * from employ where salary = 1000 ; / \u5047\u5982\u8fd4\u56de 10 \u6761\u6570\u636e / begin transaction2 insert into employ (, salary ,) values (, 1000 ,); commit transaction1 select * from employ where salary = 1000 ; / \u6b64\u65f6\u8fd4\u56de 11 \u6761\u6570\u636e / \u6570\u636e\u5e93\u76847\u79cd\u4f20\u64ad\u884c\u4e3a PROPAGATION_MANDATORY \u652f\u6301\u5f53\u524d\u4e8b\u52a1\uff0c\u5982\u679c\u5f53\u524d\u6ca1\u6709\u4e8b\u52a1\uff0c\u629b\u5f02\u5e38 PROPAGATION_NESTED \u5982\u679c\u5b58\u5728\u4e8b\u52a1\uff0c\u5219\u5728\u4e00\u4e2a\u5d4c\u5957\u7684\u4e8b\u52a1\u4e2d\u8fd0\u884c\uff0c\u5426\u5219\u884c\u4e3a\u548cPROPAGATION_REQUIRED\u4e00\u6837 PROPAGATION_NEVER \u4ee5\u975e\u4e8b\u52a1\u7684\u65b9\u5f0f\u8fd0\u884c\uff0c\u5982\u679c\u6709\u4e8b\u52a1\uff0c\u629b\u5f02\u5e38 PROPAGATION_NOT_SUPPORTED \u4ee5\u975e\u4e8b\u52a1\u7684\u65b9\u5f0f\u8fd0\u884c\uff0c\u6302\u8d77\u5f53\u524d\u4e8b\u52a1 PROPAGATION_REQUIRED \u652f\u6301\u5f53\u524d\u4e8b\u52a1\uff0c\u5982\u679c\u5f53\u524d\u6ca1\u6709\u4e8b\u52a1\uff0c\u5c31\u65b0\u5efa\u4e00\u4e2a\u4e8b\u52a1 PROPAGATION_REQUIRES_NEW \u521b\u5efa\u4e00\u4e2a\u65b0\u662f\u4e8b\u52a1\uff0c\u6302\u8d77\u5f53\u524d\u4e8b\u52a1 PROPAGATION_SUPPORTS \u652f\u6301\u5f53\u524d\u4e8b\u52a1\uff0c\u5982\u679c\u5f53\u524d\u6ca1\u6709\u4e8b\u52a1\uff0c\u5c31\u4ee5\u975e\u4e8b\u52a1\u65b9\u5f0f\u6267\u884c","title":"\u6570\u636e\u5e93\u57fa\u7840"},{"location":"Database/2018-03-14-basic-database/#database-basic-knowledge","text":"","title":"Database basic knowledge"},{"location":"Database/2018-03-14-basic-database/#oracle-common-commands","text":"","title":"Oracle Common Commands"},{"location":"Database/2018-03-14-basic-database/#install-sqlplus-instantclient-to-connect-oracle","text":"Download instantclient-basic-windows.x64-19.3.0.0.0dbru.zip Download instantclient-sqlplus-windows.x64-19.3.0.0.0dbru.zip Extract them to current folder. Set Env Path C:\\Users\\ \\Downloads\\oracle\\instantclient_19_3 win + r cmd sqlplus idaDbAdmin/idaDbAdmin@127.0.0.1:32778/ORCLCDB.localdomain","title":"Install sqlplus instantclient to connect oracle."},{"location":"Database/2018-03-14-basic-database/#common-scripts","text":"// login vm ssh <YOUR_IP> // open sqlplus client docker exec -it oracle12c bash -c \"source /home/oracle/.bashrc; sqlplus /nolog\" SQL> connect / as sysdba // search service names SQL> select value from v$parameter where name='service_names' SQL> grant create procedure to idaDbAdmin; SQL> grant execute on sys.dbms_crypto to idaDbAdmin; SQL> connect idaDbAdmin/idaDbAdmin SQL> set serveroutput on // md5 // https://docs.oracle.com/database/121/DBSEG/data_encryption.htm#DBSEG335","title":"Common scripts"},{"location":"Database/2018-03-14-basic-database/#create-procedure-with-md5","text":"create or replace procedure addUser (u_pass in varchar2, u_key in varchar2) is org_id number; raw_input RAW(128) := UTL_RAW.CAST_TO_RAW(u_pass); raw_key RAW(128) := UTL_RAW.CAST_TO_RAW(u_key); encrypted_raw RAW(2048); encrypted_pass varchar2(100); begin select id into org_id from organization where company_name = 'IDA'; dbms_output.put_line(org_id); encrypted_raw := dbms_crypto.Mac(src => raw_input, typ => DBMS_CRYPTO.HMAC_MD5, key => raw_key); dbms_output.put_line('> Result : ' || rawtohex(encrypted_raw)); end; / call addUser('idaAdmin', 'idaAdmin');","title":"Create procedure with md5"},{"location":"Database/2018-03-14-basic-database/#db2-common-commands","text":"db2start db2 force application all db2stop db2 create database YOUR_DB automatic storage yes using codeset UTF-8 territory US pagesize 32768 db2 connect to YOUR_DB db2 CREATE BUFFERPOOL BP32K IMMEDIATE ALL DBPARTITIONNUMS SIZE AUTOMATIC NUMBLOCKPAGES 0 PAGESIZE 32 K db2 drop database db2 list db directory db2 list active databases db2 list tables db2 -tvf scripts.sql db2 ? 22001 \u6570\u636e\u5e93\u5de6\u8fde\u63a5\u548c\u53f3\u8fde\u63a5\u7684\u533a\u522b\uff1f / \u5de6\u8fde\u63a5\u540e\u7684\u68c0\u7d22\u7ed3\u679c\u662f\u663e\u793a t1\u7684\u6240\u6709\u6570\u636e\u548ct2\u4e2d\u6ee1\u8db3where\u6761\u4ef6\u7684\u6570\u636e / select * from t1 left join t2 where t1 . id = t2 . sid ; \u6570\u636e\u5e93\u76844\u4e2a\u9694\u79bb\u7ea7\u522b ISOLATION_DEFAULT ISOLATION_READ_UNCOMMITTED \u53ef\u80fd\u4f1a\u53d1\u751f\u8bfb\u810f\uff0c\u4e0d\u53ef\u91cd\u590d\u8bfb\u548c\u5e7b\u8bfb ISOLATION_READ_COMMITTED \u963b\u6b62\u8bfb\u810f\uff0c\u53ef\u80fd\u4f1a\u53d1\u751f\u4e0d\u53ef\u91cd\u590d\u8bfb\u548c\u5e7b\u8bfb ISOLATION_REPEATABLE_READ \u963b\u6b62\u8bfb\u810f\u548c\u4e0d\u53ef\u91cd\u590d\u8bfb\uff0c\u53ef\u80fd\u4f1a\u53d1\u751f\u5e7b\u8bfb ISOLATION_SERIALIZABLE \u963b\u6b62\u53d1\u751f\u8bfb\u810f\uff0c\u4e0d\u53ef\u91cd\u590d\u8bfb\u548c\u5e7b\u8bfb \u6570\u636e\u5e93\u7684\u8bfb\u810f\uff0c\u4e0d\u53ef\u91cd\u590d\u8bfb\u548c\u5e7b\u8bfb\u7684\u533a\u522b \u8bfb\u810f \u8bfb\u810f\u53c8\u79f0\u65e0\u6548\u6570\u636e\u7684\u8bfb\u53d6\uff0c\u4e3e\u4f8b\u8bf4\u660e\uff1a begin transaction1 / \u4fee\u6539\u524d\u5de5\u8d44\u4e3a 500 / update employee set salary = 1000 where id = 1 ; begin transaction2 / \u4e8b\u52a1 2 \u53d1\u73b0\u5de5\u8d44\u5df2\u7ecf\u53d8\u4e3a 1000 / select * from employee where id = 1 ; transaction1 rollback / \u73b0\u5728\u5de5\u8d44\u53c8\u53d8\u4e3a\u4fee\u6539\u524d\u7684 500 \uff0c\u56e0\u6b64\u4e8b\u52a1 2 \u8bfb\u7684\u5c31\u662f\u810f\u6570\u636e / \u4e0d\u53ef\u91cd\u590d\u8bfb \u9488\u5bf9\u66f4\u65b0\u67d0\u4e00\u884c\u7684\u6570\u636e \u5728\u540c\u4e00\u4e2a\u4e8b\u52a1\u5185\uff0c\u4e24\u4e2a\u76f8\u540c\u7684\u67e5\u8be2\u8fd4\u56de\u7684\u7ed3\u679c\u4e0d\u540c\uff0c\u4e3e\u4f8b\u8bf4\u660e\uff1a begin transaction1 select * from employee where id = 1 ; / \u4e8b\u52a1 2 \u66f4\u65b0\u4e86\u8fd9\u6761\u6570\u636e / begin transaction2 update employee set salary = 1000 where id = 1 ; commit transaction1 select * from employee where id = 1 ; / \u53d1\u73b0\u4e24\u6b21\u8bfb\u5230\u7684\u6570\u636e\u4e0d\u4e00\u81f4 / \u5e7b\u8bfb \u9488\u5bf9\u65b0\u589e\u6216\u8005\u5220\u9664\u6570\u636e \u5728\u540c\u4e00\u4e2a\u4e8b\u52a1\u5185\uff0c\u4e24\u4e2a\u76f8\u540c\u7684\u67e5\u8be2\u8fd4\u56de\u7684\u7ed3\u679c\u4e0d\u540c\uff0c\u4e3e\u4f8b\u8bf4\u660e: begin transaction1 select * from employ where salary = 1000 ; / \u5047\u5982\u8fd4\u56de 10 \u6761\u6570\u636e / begin transaction2 insert into employ (, salary ,) values (, 1000 ,); commit transaction1 select * from employ where salary = 1000 ; / \u6b64\u65f6\u8fd4\u56de 11 \u6761\u6570\u636e / \u6570\u636e\u5e93\u76847\u79cd\u4f20\u64ad\u884c\u4e3a PROPAGATION_MANDATORY \u652f\u6301\u5f53\u524d\u4e8b\u52a1\uff0c\u5982\u679c\u5f53\u524d\u6ca1\u6709\u4e8b\u52a1\uff0c\u629b\u5f02\u5e38 PROPAGATION_NESTED \u5982\u679c\u5b58\u5728\u4e8b\u52a1\uff0c\u5219\u5728\u4e00\u4e2a\u5d4c\u5957\u7684\u4e8b\u52a1\u4e2d\u8fd0\u884c\uff0c\u5426\u5219\u884c\u4e3a\u548cPROPAGATION_REQUIRED\u4e00\u6837 PROPAGATION_NEVER \u4ee5\u975e\u4e8b\u52a1\u7684\u65b9\u5f0f\u8fd0\u884c\uff0c\u5982\u679c\u6709\u4e8b\u52a1\uff0c\u629b\u5f02\u5e38 PROPAGATION_NOT_SUPPORTED \u4ee5\u975e\u4e8b\u52a1\u7684\u65b9\u5f0f\u8fd0\u884c\uff0c\u6302\u8d77\u5f53\u524d\u4e8b\u52a1 PROPAGATION_REQUIRED \u652f\u6301\u5f53\u524d\u4e8b\u52a1\uff0c\u5982\u679c\u5f53\u524d\u6ca1\u6709\u4e8b\u52a1\uff0c\u5c31\u65b0\u5efa\u4e00\u4e2a\u4e8b\u52a1 PROPAGATION_REQUIRES_NEW \u521b\u5efa\u4e00\u4e2a\u65b0\u662f\u4e8b\u52a1\uff0c\u6302\u8d77\u5f53\u524d\u4e8b\u52a1 PROPAGATION_SUPPORTS \u652f\u6301\u5f53\u524d\u4e8b\u52a1\uff0c\u5982\u679c\u5f53\u524d\u6ca1\u6709\u4e8b\u52a1\uff0c\u5c31\u4ee5\u975e\u4e8b\u52a1\u65b9\u5f0f\u6267\u884c","title":"DB2 Common Commands"},{"location":"Database/2018-03-14-common_migration_script -database/","text":"To check that a table exists -- does a particular table exist IF EXISTS ( SELECT 1 FROM information_schema . Tables WHERE table_schema = 'MySchema' AND TABLE_NAME = 'MyTableName' ) PRINT 'the table exists' ELSE PRINT 'The table isn''t there' To check that a function exists -- does a particular function exist IF EXISTS ( SELECT 1 FROM information_schema . Routines WHERE ROUTINE_NAME = 'MyFunctionName' AND ROUTINE_TYPE = 'FUNCTION' AND ROUTINE_SCHEMA = 'MySchema' ) PRINT 'the function exists' ELSE PRINT 'The function isn''t there' To check that a procedure exists -- does a particular procedure exist IF EXISTS ( SELECT 1 FROM information_schema . Routines WHERE ROUTINE_NAME = 'MyProcedureName' AND ROUTINE_TYPE = 'PROCEDURE' AND ROUTINE_SCHEMA = 'MySchema' ) PRINT 'the procedure exists' ELSE PRINT 'The procedure isn''t there' To check that a particular column exists in a table exists -- does a particular column exist in a table IF EXISTS ( SELECT 1 FROM information_schema . COLUMNS WHERE table_schema = 'MySchema' AND TABLE_NAME = 'MyTableName' AND column_Name = 'MyColumnName' ) PRINT 'the colmun exists' ELSE PRINT 'The column isn''t there' To check whether a column has any sort of constraint IF EXISTS ( SELECT 1 FROM information_schema . CONSTRAINT_column_USAGE WHERE table_schema = 'MySchema' AND TABLE_NAME = 'MyTableName' AND column_Name = 'MyColumnName' ) PRINT 'there is a constraint on the column' ELSE PRINT 'no constraint' To check that a column has a check constraint IF EXISTS ( SELECT 1 FROM information_schema . CONSTRAINT_column_USAGE CCU INNER JOIN information_schema . CHECK_CONSTRAINTS CC ON CC . constraint_name = CCU . constraint_NAME WHERE table_schema = 'MySchema' AND TABLE_NAME = 'MyTableNames' AND column_Name = 'MyColumnName' ) PRINT 'there is a check constraint on the column' ELSE PRINT 'no check constraint' To check that a column has a foreign key constraint --is there a foreign key constraint on the column IF EXISTS ( SELECT 1 FROM information_schema . CONSTRAINT_column_USAGE CCU INNER JOIN information_schema . REFERENTIAL_CONSTRAINTS CC ON CC . constraint_name = CCU . constraint_NAME WHERE table_schema = 'MySchema' AND TABLE_NAME = 'MyTableName' AND column_Name = 'MyColumnName' ) PRINT 'there is a referential constraint on the column' ELSE PRINT 'no referential constraint' To check that a column participates in a primary key --is the column (part of ) a primary key? IF EXISTS ( SELECT 1 FROM information_schema . CONSTRAINT_column_USAGE CCU INNER JOIN information_schema . TABLE_CONSTRAINTS CC ON CC . constraint_name = CCU . constraint_NAME WHERE CCU . table_schema = 'MySchema' AND CCU . TABLE_NAME = 'MyTableName' AND column_Name = 'MyColumnName' AND constraint_Type = 'PRIMARY KEY' ) PRINT 'the column is involved in a primary key' ELSE PRINT 'not involved in a primary key' Reference Link https://www.red-gate.com/simple-talk/sql/database-administration/using-migration-scripts-in-database-deployments/","title":"Migration Scripts Sample"},{"location":"Database/2018-04-06-redis-database/","text":"Redis \u6982\u89c8 \u00b6 Redis\u4e0e\u5176\u4ed6\u5185\u5b58\u6570\u636e\u5e93\u4e0e\u4f17\u4e0d\u540c\uff0c\u662f\u56e0\u4e3a\u4ee5\u4e0b\u4e09\u4e2a\u539f\u56e0\uff1a - Redis\u5c06\u6570\u636e\u5e93\u4e2d\u6240\u6709\u7684\u6570\u636e\u90fd\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\uff0c\u78c1\u76d8\u53ea\u662f\u7528\u6765\u5b58\u50a8\u6570\u636e\u3002 - Redis\u652f\u6301\u66f4\u52a0\u4e30\u5bcc\u7684\u6570\u636e\u7ed3\u6784\u3002 - Redis\u53ef\u4ee5\u5c06\u6570\u636e\u5907\u4efd\u5230\u4efb\u610f\u591a\u4e2aslave\u4e0a\u3002 Redis\u7684\u4f18\u52bf - \u975e\u5e38\u5feb \u53ef\u4ee5\u6bcf\u79d2\u6267\u884c110000\u6b21SET\u64cd\u4f5c\uff0c81000\u6b21GET\u64cd\u4f5c\u3002 - \u652f\u6301\u4e30\u5bcc\u7684\u6570\u636e\u7c7b\u578b list, set, sorted set, and hashes \u3002 - \u6240\u6709\u7684\u64cd\u4f5c\u90fd\u662f\u539f\u5b50\u6027 - \u7528\u9014\u5e7f\u6cdb \u53ef\u4ee5\u7528\u4f5c\u7f13\u5b58\uff0c\u6d88\u606f\u961f\u5217\uff08Redis\u5929\u751f\u652f\u6301Publish/Subscribe\uff09\uff0c\u5b58\u50a8Web\u5e94\u7528\u4e2d\u7684session\uff0c\u7f51\u9875\u547d\u4e2d\u8ba1\u6570\u7b49\u3002 Redis \u5b89\u88c5 \u00b6 $ wget http://download.redis.io/releases/redis-4.0.9.tar.gz $ tar xzf redis-4.0.9.tar.gz $ cd redis-4.0.9 $ make \u542f\u52a8Redis \u00b6 . src/redis-server \u4f7f\u7528\u547d\u4ee4\u884c\u4e0eRedis\u4ea4\u4e92 \u00b6 ./redis-cli 127 .0.0.1:6379> /**\u5728\u8fdc\u7a0bRedis Server\u4e0a\u8fd0\u884credis\u547d\u4ee4 * -h \u540e\u9762\u6307\u5b9a\u8fdc\u7a0bserver\u7684\u5730\u5740 * -p \u540e\u9762\u6307\u5b9a\u8fdc\u7a0bRedis server\u7684\u7aef\u53e3 * -a \u6307\u5b9a\u8bbf\u95ee\u6240\u9700\u7684\u5bc6\u7801 */ $ redis-cli -h host -p port -a password \u5173\u95edRedis\u670d\u52a1\u5668 \u00b6 //\u67e5\u627e\u6b63\u5728\u8fd0\u884credis\u7684\u8fdb\u7a0b\u4ee5\u53ca\u7aef\u53e3\u53f7 ps -ef | grep redis //\u4f7f\u7528redis-cli\u5173\u95edredis\u670d\u52a1 ./redis-cli -p 6379 shutdown Redis\u547d\u4ee4 \u00b6 Keys \u00b6 DEL key [key ...] \u5220\u9664\u4e00\u4e2a\u6216\u8005\u591a\u4e2akey set key1 \"Hello\" set key2 \"World\" // \u5220\u9664\u6210\u529f\u8fd4\u56de 1 \uff0c\u5426\u5219\u8fd4\u56de 0 \uff0c \u5220\u9664\u591a\u4e2a key\u8fd4\u56de\u7ed3\u679c\u7684\u603b\u6570 del key1 key2 key3 EXISTS key [key ...] \u5224\u65ad\u4e00\u4e2akey\u6216\u8005\u591a\u4e2akey\u662f\u5426\u5b58\u5728 set key1 \"Hello\" set key2 \"World\" // \u6210\u529f\u8fd4\u56de 1 \uff0c\u5426\u5219\u8fd4\u56de 0 \uff0c \u5224\u65ad\u591a\u4e2a key\u8fd4\u56de\u7ed3\u679c\u7684\u603b\u6570 exists key1 key2 key3 EXPIRE key seconds \u8bbe\u7f6e\u4e00\u4e2akey\u8fc7\u671f\u7684\u65f6\u95f4 set key1 \"Hello\" // \u8bbe\u7f6e key1 10 \u79d2\u8fc7\u671f expire key1 10 KEYS pattern \u8fd4\u56de\u6ee1\u8db3\u6a21\u5f0f\u7684key set key1 \"Hello\" set key2 \"World\" // \u8fd4\u56de\u4ee5 key\u5f00\u5934\u7684\u6240\u6709\u7684keys keys key * OBJECT subcommand [arguments [arguments ...]] \u6839\u636eredis\u6570\u636e\u4e2d\u7684key\u6765\u67e5\u770b\u4fdd\u5b58\u8fd9\u4e2akey\u7684Redis\u5bf9\u8c61\u7684\u4fe1\u606f lpush mylist \"Hello World\" object refcount mylist object encoding mylist object idletime mylist PERSIST key \u79fb\u9664\u4e00\u4e2akey\u4e0a\u8bbe\u7f6e\u7684\u8fc7\u671f\u65f6\u95f4\uff0c\u4f7f\u4e4b\u6c38\u8fdc\u4e0d\u8fc7\u671f SET mykey \"Hello\" // \u8bbe\u7f6e 10 \u79d2\u8fc7\u671f EXPIRE mykey 10 // \u79fb\u9664 10 \u79d2\u8fc7\u671f\u7684\u8bbe\u7f6e PERSIST mykey TTL \u67e5\u770b\u4e00\u4e2akey\u8fd8\u6709\u591a\u4e45\u8fc7\u671f RENAME key newkey \u91cd\u547d\u540d\u4e00\u4e2akey set mykey1 \"Hello\" rename mykey1 mykey get mykey SORT key [BY pattern] [LIMIT offset count] [GET pattern [GET pattern ...]] [ASC|DESC] [ALPHA] [STORE destination] \u5bf9\u83b7\u53d6\u7684\u7ed3\u679c\u8fdb\u884c\u6392\u5e8f SORT mylist LIMIT 0 5 ALPHA DESC TYPE key \u8fd4\u56dekey\u7684\u7c7b\u578b RESTORE key ttl serialized-value [REPLACE] \u53cd\u5e8f\u5217\u5316\u7ed9\u5b9a\u7684\u5e8f\u5217\u5316\u7684\u5e8f\u5217\u5316\u503c\uff0c\u5e76\u5c06\u8be5\u503c\u4e0e\u7ed9\u5b9a\u7684key\u5173\u8054 set mykey0 \"Hello\" dump mykey0 restore mykey 0 \"\\x00\\x05Hello\\b\\x00\\x05\\xe4\\x1bW\\x94\\x1cu\\xbb\" get mykey Strings \u00b6 APPEND key value \u5982\u679ckey\u5df2\u7ecf\u5b58\u5728\u5e76\u4e14\u5b83\u7684value\u662fString\u7c7b\u578b\uff0c\u90a3\u4e48\u5c06value\u8ffd\u52a0\u5230value\u7684\u7ed3\u5c3e\u3002 \u5982\u679ckey\u4e0d\u5b58\u5728\uff0c\u76f8\u5f53\u4e8e\u6267\u884cset\u547d\u4ee4\u3002 SET key value [EX seconds] [PX milliseconds] [NX|XX] \u8bbe\u7f6ekey\u548cvalue\uff0c\u540c\u65f6\u8bbe\u7f6e\u8be5key\u7684\u8fc7\u671f\u65f6\u95f4\u3002 GET key \u83b7\u53d6key\u5bf9\u5e94\u7684value MGET key [key ...] \u83b7\u53d6\u591a\u4e2akey\u7684\u503c\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5219\u8fd4\u56denil MSET key value [key value ...] \u8bbe\u7f6e\u591a\u4e2akey\u7684\u503c SETRANGE key offset value \u4eceoffset\u4f4d\u7f6e\u66ff\u6362\u5bf9\u5e94\u7684key\u7684value\u90e8\u5206\uff0c\u66ff\u6362\u7684\u957f\u5ea6\u4e3avalue\u7684\u957f\u5ea6 SET key1 \"Hello World\" // 'W' \u5904\u5f00\u59cb\u5f00\u59cb\u66ff\u6362 SETRANGE key1 6 \"Redis\" // \u8fd4\u56de \"Hello Redis\" GET key1 STRLEN key \u8fd4\u56dekey\u7684value\u7684\u957f\u5ea6 Hashes \u00b6 \u6570\u636e\u7ed3\u6784\u548cmap\u7c7b\u4f3c\uff0ckey\u548cvalue\u90fd\u662fstring\u7c7b\u578b\u3002 HSET key field value \u5728\u540d\u5b57\u4e3akey\u7684map\u4e2d\u6dfb\u52a0\u4e00\u6761key\u4e3afield\uff0c\u503c\u4e3avalue\u7684\u8bb0\u5f55 hset people name zhangsan hset people age 12 HGET key field \u5728\u540d\u5b57\u4e3akey\u7684map\u4e2d\u83b7\u53d6field\u7684\u503c hget people name HLEN key \u8fd4\u56demap\u7684\u957f\u5ea6 HMGET key field [field ...] \u8fd4\u56demap\u4e2d\u591a\u4e2akey\u7684value HMSET key field value [field value ...] \u8bbe\u7f6emap\u4e2d\u7684\u591a\u4e2a\u5b57\u6bb5 HKEYS key \u8fd4\u56demap\u4e2d\u6240\u6709\u7684field HVALS key \u8fd4\u56demap\u4e2d\u6240\u6709\u7684value Lists \u00b6 LPUSH key value [value ...] \u5728list\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u5143\u7d20 lpush mylist zhangsan LINDEX key index \u8fd4\u56de\u4e0b\u6807\u4e3aindex\u7684\u5143\u7d20 lindex mylist 0 LINSERT key BEFORE|AFTER pivot value \u5728\u6307\u5b9a\u7684\u5143\u7d20\u4f4d\u7f6e\u524d\u6216\u8005\u540e\u9762\u63d2\u5165\u5143\u7d20 // \u5728 zhangsan\u524d\u9762\u63d2\u5165lisi LINSERT mylist BEFORE \"zhangsan\" \"lisi\" LLEN key \u8fd4\u56delist\u7684\u957f\u5ea6 LPOP key \u5220\u9664\u5e76\u8fd4\u56de\u7b2c\u4e00\u4e2a\u5143\u7d20 LRANGE key start stop \u8fd4\u56de\u5217\u8868 key \u4e2d\u6307\u5b9a\u533a\u95f4\u5185\u7684\u5143\u7d20\uff0c\u533a\u95f4\u4ee5\u504f\u79fb\u91cf start \u548c stop \u6307\u5b9a\u3002start\u548cstop\u90fd\u662f\u4ee50\u4e3a\u57fa\u51c6\uff0c\u4e5f\u53ef\u4ee5\u4e3a\u8d1f\u503c\uff0c\u8868\u793a\u4ecelist\u7684\u5c3e\u90e8\u5f00\u59cb\u7b97\u8d77\u3002 \u5982\u679cstart > stop ,\u8fd4\u56de\u4e00\u4e2a\u7a7a\u5217\u8868\u3002\u5982\u679cstop\u4e0b\u8868\u5927\u4e8eend\uff0c\u5219Redis\u4f1a\u628aend\u7684\u503c\u8d4b\u7ed9stop\u3002 // pis \uff1a\u6b64\u65f6\u8fd4\u56de 6 \u4e2a\u5143\u7d20\uff0c\u548c\u7f16\u7a0b\u4e2d\u7684\u754c\u9650\u4e0d\u4e00\u6837 lrange mylist 0 5 LREM key count value \u5220\u9664list\u4e2dcount\u4e2a\u6570\u7684\u7b49\u4e8evalue\u7684\u5143\u7d20 lrem mylist 1 zhangsan LSET key index value \u5c06\u5217\u8868 key\u4e0b\u6807\u4e3aindex\u7684\u5143\u7d20\u7684\u503c\u8bbe\u7f6e\u4e3avalue lset mylist 0 wangwu RPUSH key value [value ...] \u5c06\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u503c\u63d2\u5165list\u7684\u672b\u5c3e RPOP key \u79fb\u9664\u5e76\u8fd4\u56delist\u7684\u5c3e\u5143\u7d20 Sets \u00b6 SADD key member [member ...] \u5728set\u4e2d\u6dfb\u52a0\u4e00\u6761\u6216\u8005\u591a\u6761\u8bb0\u5f55\uff0cset\u4e2d\u7684\u5143\u7d20\u4e0d\u91cd\u590d SCARD key \u8fd4\u56deset\u7684\u957f\u5ea6 SDIFF key [key ...] \u8ba1\u7b97\u96c6\u5408\u4e4b\u95f4\u7684\u5dee\u96c6 key1 = { a , b , c , d } key2 = { c } key3 = { a , c , e } SDIFF key1 key2 key3 = { b , d } SDIFFSTORE destination key [key ...] \u5c06\u96c6\u5408\u7684\u5dee\u96c6\u4fdd\u5b58\u5728\u952e\u4e3akey\u7684\u96c6\u5408\u4e2d key1 = { a , b , c , d } key2 = { c } SDIFFSTORE key1 key2 key3 keys = { b , d } SINTER key [key ...] \u8ba1\u7b97\u96c6\u5408\u7684\u4ea4\u96c6 key1 = { a , b , c , d } key2 = { c } key3 = { a , c , e } SINTER key1 key2 key3 = { c } SINTERSTORE destination key [key ...] \u5c06\u96c6\u5408\u7684\u4ea4\u96c6\u4fdd\u5b58\u5728\u952e\u4e3akey\u7684\u96c6\u5408\u4e2d key1 = { a , b , c , d } key2 = { c } key3 = { a , c , e } SINTERSTORE key1 key2 key3 key4 key4 = { c } SUNION key [key ...] \u8ba1\u7b97\u96c6\u5408\u7684\u5e76\u96c6 key1 = { a , b , c , d } key2 = { c } key3 = { a , c , e } SUNION key1 key2 key3 = { a , b , c , d , e } SUNIONSTORE destination key [key ...] \u8ba1\u7b97\u96c6\u5408\u7684\u5e76\u96c6\u5e76\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u96c6\u5408 key1 = { a , b , c , d } key2 = { c } key3 = { a , c , e } SUNION key1 key2 key3 key4 key4 = { a , b , c , d , e } SISMEMBER key member \u5224\u65adset\u4e2d\u662f\u5426\u5305\u542bmember,\u5305\u542b\u8fd4\u56de1\uff0c\u4e0d\u5305\u542b\u8fd4\u56de0 SADD myset \"one\" // \u8fd4\u56de 1 SISMEMBER myset \"one\" // \u8fd4\u56de 0 SISMEMBER myset \"two\" SMEMBERS key \u8fd4\u56deset\u4e2d\u6240\u6709\u7684value SMOVE source destination member \u5c06\u5143\u7d20\u4ece\u6e90set\u79fb\u52a8\u5230\u76ee\u7684\u5730set\uff0c\u662f\u4e00\u4e2a\u539f\u5b50\u64cd\u4f5c SPOP key [count] \u968f\u673a\u79fb\u9664\u5e76\u8fd4\u56de\u96c6\u5408\u4e2d\u7684\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u5143\u7d20 SRANDMEMBER key [count] \u968f\u673a\u83b7\u5f97\u96c6\u5408\u4e2d\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u5143\u7d20 SREM key member [member ...] \u5220\u9664\u96c6\u5408\u4e2d\u7684\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u5143\u7d20 Sorted Sets \u00b6 \u6709\u5e8f\u96c6\u5408\u91cc\u9762\u7684\u6210\u5458\u662f\u4e0d\u80fd\u91cd\u590d\u7684\u90fd\u662f\u552f\u4e00\u7684\uff0c\u4f46\u662f\uff0c\u4e0d\u540c\u6210\u5458\u95f4\u6709\u53ef\u80fd\u6709\u76f8\u540c\u7684\u5206\u6570 ZADD key [NX|XX] [CH] [INCR] score member [score member ...] /** *ZADD options (Redis 3.0.2 \u53ca\u4ee5\u4e0a\u7248\u672c\u652f\u6301) *NX : \u4e0d\u66f4\u65b0\u5df2\u7ecf\u5b58\u5728\u7684\u5143\u7d20\uff0c\u53ea\u589e\u52a0\u65b0\u7684\u5143\u7d20\u3002 *XX \uff1a\u53ea\u66f4\u65b0\u5df2\u7ecf\u5b58\u5728\u7684\u5143\u7d20\uff0c\u4e0d\u589e\u52a0\u5143\u7d20\u3002 *CH \uff1a\u4fee\u6539\u8fd4\u56de\u503c\u4e3a\u53d1\u751f\u53d8\u5316\u7684\u6210\u5458\u603b\u6570\uff0c\u539f\u59cb\u662f\u8fd4\u56de\u65b0\u6dfb\u52a0\u6210\u5458\u7684\u603b\u6570 (CH \u662f changed \u7684\u610f\u601d)\u3002\u66f4\u6539\u7684\u5143\u7d20\u662f\u65b0\u6dfb\u52a0\u7684\u6210\u5458\uff0c\u5df2\u7ecf\u5b58\u5728\u7684\u6210\u5458\u66f4\u65b0\u5206\u6570\u3002 \u6240\u4ee5\u5728\u547d\u4ee4\u4e2d\u6307\u5b9a\u7684\u6210\u5458\u6709\u76f8\u540c\u7684\u5206\u6570\u5c06\u4e0d\u88ab\u8ba1\u7b97\u5728\u5185\u3002\u6ce8\uff1a\u5728\u901a\u5e38\u60c5\u51b5\u4e0b\uff0cZADD\u8fd4\u56de\u503c\u53ea\u8ba1\u7b97\u65b0\u6dfb\u52a0\u6210\u5458\u7684\u6570\u91cf\u3002 *INCH \uff1a\u5f53ZADD\u6307\u5b9a\u8fd9\u4e2a\u9009\u9879\u65f6\uff0c\u6210\u5458\u7684\u64cd\u4f5c\u5c31\u7b49\u540cZINCRBY\u547d\u4ee4\uff0c\u5bf9\u6210\u5458\u7684\u5206\u6570\u8fdb\u884c\u9012\u589e\u64cd\u4f5c */ ZADD myzset 1 \"one\" ZADD myzset 2 \"two\" 3 \"three\" ZCARD key \u8fd4\u56de\u96c6\u5408\u7684\u957f\u5ea6 ZRANGEBYSCORE key min max [WITHSCORES] [LIMIT offset count] \u8fd4\u56de\u6709\u5e8f\u96c6\u5408\u4e2d\u5206\u6570\u5728min\u548cmax\u4e4b\u95f4\u7684\u6240\u6709\u5143\u7d20 /** *min\u548cmax\u53ef\u4ee5\u662f-inf\u548c+inf *min \u8868\u793a \u5927\u4e8e\u7b49\u4e8e; (min \u8868\u793a\u5927\u4e8e *max \u8868\u793a \u5c0f\u4e8e\u7b49\u4e8e; (max \u8868\u793a\u5c0f\u4e8e */ ZRANGEBYSCORE myzset - inf + inf ZRANGEBYSCORE myzset ( 1 2 ZRANGEBYSCORE myzset ( 1 ( 2 ZRANGE key start stop [WITHSCORES] \u8fd4\u56de\u6709\u5e8f\u96c6\u5408\u4e2d\u6307\u5b9a\u8303\u56f4(start,stop)\u5185\u7684\u5143\u7d20 ZCOUNT key min max \u8fd4\u56de\u6709\u5e8f\u96c6\u5408\u4e2dscore\u5728min\u548cmax\u4e4b\u95f4\u5143\u7d20\u7684\u4e2a\u6570 ZINCRBY key increment member \u5c06\u6709\u5e8f\u96c6\u5408\u4e2dmember\u7684score\u589e\u52a0increment\uff1b\u5982\u679cmember\u4e0d\u5b58\u5728\uff0c\u5c31\u589e\u52a0\u4e00\u4e2amember\uff1bscore\u662fincrement\uff0c\u5982\u679ckey\u4e0d\u5b58\u5728\uff0c\u5219\u521b\u5efa\u4e00\u4e2a\u53ea\u5305\u542bmember\u7684\u6709\u5e8f\u96c6\u5408\u3002 ZADD myzset 1 \"one\" ZADD myzset 2 \"two\" // \"one\" \u7684 score\u53d8\u4e3a3 ZINCRBY myzset 2 \"one\" ZRANGE myzset 0 - 1 WITHSCORES ZRANK key member \u8fd4\u56de\u6709\u5e8f\u96c6\u5408\u4e2d\u5143\u7d20\u7684\u6392\u540d\uff0c\u6392\u540d\u9ed8\u8ba4\u4ece0\u5f00\u59cb ZREM key member [member ...] \u5220\u9664\u6709\u5e8f\u96c6\u5408\u4e2d\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u5143\u7d20 ZINTERSTORE destination numkeys key [key ...] [WEIGHTS weight [weight ...]] [AGGREGATE SUM|MIN|MAX] \u8ba1\u7b97\u591a\u4e2a\u6709\u5e8f\u96c6\u5408\u7684\u4ea4\u96c6\u3002WEIGHT\u662f\u8ba1\u7b97\u56e0\u5b50\uff0c\u9ed8\u8ba4\u662f1. \u6307\u5b9aWEIGHT\u5c31\u662f score = score*WEIGHT;\u805a\u7c07\u51fd\u6570AGGREGATE \u9009\u9879\u9ed8\u8ba4\u662fSUM zadd Q1 88 \"apple\" zadd Q1 92 \"orange\" zadd Q1 100 \"peach\" zadd Q2 27 \"apple\" zadd Q2 34 \"orange\" zadd Q2 80 \"peach\" zadd Q2 100 \"grape\" zinterstore Q1Q2 2 Q1 Q2 /** *apple(115) = Q1(88) + Q2(27) *Q1 \u4e2d\u4e0d\u5305\u542bgrape\uff0cQ1Q2\u4e2d\u4e5f\u6ca1\u6709 */ zrange Q1Q2 0 - 1 withscores 1 ) \"apple\" 2 ) \"115\" 3 ) \"orange\" 4 ) \"126\" 5 ) \"peach\" 6 ) \"180\" /** *apple(115) = Q1(88*1) + Q2(27*2) *Q1 \u4e2d\u4e0d\u5305\u542bgrape\uff0cQ1Q2\u4e2d\u4e5f\u6ca1\u6709 */ zinterstore Q1Q2 2 Q1 Q2 WEIGHTS 1 2 zrange Q1Q2 0 - 1 withscores 1 ) \"apple\" 2 ) \"142\" 3 ) \"orange\" 4 ) \"160\" 5 ) \"peach\" 6 ) \"260\" zinterstore Q1Q2 2 Q1 Q2 WEIGHTS 1 2 AGGREGATE SUM zrange Q1Q2 0 - 1 withscores 1 ) \"apple\" 2 ) \"142\" 3 ) \"orange\" 4 ) \"160\" 5 ) \"peach\" 6 ) \"260\" /** *apple(54) = min(Q1(88*1), Q2(27*2)) *orange(68) = min(Q1(92*1), Q2(34*2)) *peach(68) = min(Q1(100*1), Q2(80*2)) *Q1 \u4e2d\u4e0d\u5305\u542bgrape\uff0cQ1Q2\u4e2d\u4e5f\u6ca1\u6709 */ zinterstore Q1Q2 2 Q1 Q2 WEIGHTS 1 2 AGGREGATE MIN zrange Q1Q2 0 - 1 withscores 1 ) \"apple\" 2 ) \"54\" 3 ) \"orange\" 4 ) \"68\" 5 ) \"peach\" 6 ) \"100\" /** *apple(54) = max(Q1(88*1), Q2(27*2)) *orange(68) = max(Q1(92*1), Q2(34*2)) *peach(68) = max(Q1(100*1), Q2(80*2)) *Q1 \u4e2d\u4e0d\u5305\u542bgrape\uff0cQ1Q2\u4e2d\u4e5f\u6ca1\u6709 */ zinterstore Q1Q2 2 Q1 Q2 WEIGHTS 1 2 AGGREGATE MAX zrange Q1Q2 0 - 1 withscores 1 ) \"apple\" 2 ) \"88\" 3 ) \"orange\" 4 ) \"92\" 5 ) \"peach\" 6 ) \"160\" ZUNIONSTORE destination numkeys key [key ...] [WEIGHTS weight [weight ...]] [AGGREGATE SUM|MIN|MAX] \u8ba1\u7b97\u591a\u4e2a\u6709\u5e8f\u96c6\u5408\u7684\u5e76\u96c6\u3002WEIGHT\u662f\u8ba1\u7b97\u56e0\u5b50\uff0c\u9ed8\u8ba4\u662f1. \u6307\u5b9aWEIGHT\u5c31\u662f score = score*WEIGHT;\u805a\u7c07\u51fd\u6570AGGREGATE \u9009\u9879\u9ed8\u8ba4\u662fSUM zunionstore Q1Q2 2 Q1 Q2 WEIGHTS 1 2 AGGREGATE MAX zrange Q1Q2 0 - 1 withscores /** *apple(54) = max(Q1(88*1), Q2(27*2)) *orange(68) = max(Q1(92*1), Q2(34*2)) *peach(68) = max(Q1(100*1), Q2(80*2)) *Q1\u4e0d\u5305\u542bgrape\uff0cQ2\u5305\u542bgrape\uff0cQ1Q2\u4e2d\u5305\u542bgrape */ 1 ) \"apple\" 2 ) \"88\" 3 ) \"orange\" 4 ) \"92\" 5 ) \"peach\" 6 ) \"160\" 7 ) \"grape\" 8 ) \"200\" \u5f15\u7528 \u00b6 \u53c2\u8003\u94fe\u63a51 \u53c2\u8003\u94fe\u63a52","title":"Redis"},{"location":"Database/2018-04-06-redis-database/#redis","text":"Redis\u4e0e\u5176\u4ed6\u5185\u5b58\u6570\u636e\u5e93\u4e0e\u4f17\u4e0d\u540c\uff0c\u662f\u56e0\u4e3a\u4ee5\u4e0b\u4e09\u4e2a\u539f\u56e0\uff1a - Redis\u5c06\u6570\u636e\u5e93\u4e2d\u6240\u6709\u7684\u6570\u636e\u90fd\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\uff0c\u78c1\u76d8\u53ea\u662f\u7528\u6765\u5b58\u50a8\u6570\u636e\u3002 - Redis\u652f\u6301\u66f4\u52a0\u4e30\u5bcc\u7684\u6570\u636e\u7ed3\u6784\u3002 - Redis\u53ef\u4ee5\u5c06\u6570\u636e\u5907\u4efd\u5230\u4efb\u610f\u591a\u4e2aslave\u4e0a\u3002 Redis\u7684\u4f18\u52bf - \u975e\u5e38\u5feb \u53ef\u4ee5\u6bcf\u79d2\u6267\u884c110000\u6b21SET\u64cd\u4f5c\uff0c81000\u6b21GET\u64cd\u4f5c\u3002 - \u652f\u6301\u4e30\u5bcc\u7684\u6570\u636e\u7c7b\u578b list, set, sorted set, and hashes \u3002 - \u6240\u6709\u7684\u64cd\u4f5c\u90fd\u662f\u539f\u5b50\u6027 - \u7528\u9014\u5e7f\u6cdb \u53ef\u4ee5\u7528\u4f5c\u7f13\u5b58\uff0c\u6d88\u606f\u961f\u5217\uff08Redis\u5929\u751f\u652f\u6301Publish/Subscribe\uff09\uff0c\u5b58\u50a8Web\u5e94\u7528\u4e2d\u7684session\uff0c\u7f51\u9875\u547d\u4e2d\u8ba1\u6570\u7b49\u3002","title":"Redis \u6982\u89c8"},{"location":"Database/2018-04-06-redis-database/#redis_1","text":"$ wget http://download.redis.io/releases/redis-4.0.9.tar.gz $ tar xzf redis-4.0.9.tar.gz $ cd redis-4.0.9 $ make","title":"Redis \u5b89\u88c5"},{"location":"Database/2018-04-06-redis-database/#redis_2","text":". src/redis-server","title":"\u542f\u52a8Redis"},{"location":"Database/2018-04-06-redis-database/#redis_3","text":"./redis-cli 127 .0.0.1:6379> /**\u5728\u8fdc\u7a0bRedis Server\u4e0a\u8fd0\u884credis\u547d\u4ee4 * -h \u540e\u9762\u6307\u5b9a\u8fdc\u7a0bserver\u7684\u5730\u5740 * -p \u540e\u9762\u6307\u5b9a\u8fdc\u7a0bRedis server\u7684\u7aef\u53e3 * -a \u6307\u5b9a\u8bbf\u95ee\u6240\u9700\u7684\u5bc6\u7801 */ $ redis-cli -h host -p port -a password","title":"\u4f7f\u7528\u547d\u4ee4\u884c\u4e0eRedis\u4ea4\u4e92"},{"location":"Database/2018-04-06-redis-database/#redis_4","text":"//\u67e5\u627e\u6b63\u5728\u8fd0\u884credis\u7684\u8fdb\u7a0b\u4ee5\u53ca\u7aef\u53e3\u53f7 ps -ef | grep redis //\u4f7f\u7528redis-cli\u5173\u95edredis\u670d\u52a1 ./redis-cli -p 6379 shutdown","title":"\u5173\u95edRedis\u670d\u52a1\u5668"},{"location":"Database/2018-04-06-redis-database/#redis_5","text":"","title":"Redis\u547d\u4ee4"},{"location":"Database/2018-04-06-redis-database/#keys","text":"DEL key [key ...] \u5220\u9664\u4e00\u4e2a\u6216\u8005\u591a\u4e2akey set key1 \"Hello\" set key2 \"World\" // \u5220\u9664\u6210\u529f\u8fd4\u56de 1 \uff0c\u5426\u5219\u8fd4\u56de 0 \uff0c \u5220\u9664\u591a\u4e2a key\u8fd4\u56de\u7ed3\u679c\u7684\u603b\u6570 del key1 key2 key3 EXISTS key [key ...] \u5224\u65ad\u4e00\u4e2akey\u6216\u8005\u591a\u4e2akey\u662f\u5426\u5b58\u5728 set key1 \"Hello\" set key2 \"World\" // \u6210\u529f\u8fd4\u56de 1 \uff0c\u5426\u5219\u8fd4\u56de 0 \uff0c \u5224\u65ad\u591a\u4e2a key\u8fd4\u56de\u7ed3\u679c\u7684\u603b\u6570 exists key1 key2 key3 EXPIRE key seconds \u8bbe\u7f6e\u4e00\u4e2akey\u8fc7\u671f\u7684\u65f6\u95f4 set key1 \"Hello\" // \u8bbe\u7f6e key1 10 \u79d2\u8fc7\u671f expire key1 10 KEYS pattern \u8fd4\u56de\u6ee1\u8db3\u6a21\u5f0f\u7684key set key1 \"Hello\" set key2 \"World\" // \u8fd4\u56de\u4ee5 key\u5f00\u5934\u7684\u6240\u6709\u7684keys keys key * OBJECT subcommand [arguments [arguments ...]] \u6839\u636eredis\u6570\u636e\u4e2d\u7684key\u6765\u67e5\u770b\u4fdd\u5b58\u8fd9\u4e2akey\u7684Redis\u5bf9\u8c61\u7684\u4fe1\u606f lpush mylist \"Hello World\" object refcount mylist object encoding mylist object idletime mylist PERSIST key \u79fb\u9664\u4e00\u4e2akey\u4e0a\u8bbe\u7f6e\u7684\u8fc7\u671f\u65f6\u95f4\uff0c\u4f7f\u4e4b\u6c38\u8fdc\u4e0d\u8fc7\u671f SET mykey \"Hello\" // \u8bbe\u7f6e 10 \u79d2\u8fc7\u671f EXPIRE mykey 10 // \u79fb\u9664 10 \u79d2\u8fc7\u671f\u7684\u8bbe\u7f6e PERSIST mykey TTL \u67e5\u770b\u4e00\u4e2akey\u8fd8\u6709\u591a\u4e45\u8fc7\u671f RENAME key newkey \u91cd\u547d\u540d\u4e00\u4e2akey set mykey1 \"Hello\" rename mykey1 mykey get mykey SORT key [BY pattern] [LIMIT offset count] [GET pattern [GET pattern ...]] [ASC|DESC] [ALPHA] [STORE destination] \u5bf9\u83b7\u53d6\u7684\u7ed3\u679c\u8fdb\u884c\u6392\u5e8f SORT mylist LIMIT 0 5 ALPHA DESC TYPE key \u8fd4\u56dekey\u7684\u7c7b\u578b RESTORE key ttl serialized-value [REPLACE] \u53cd\u5e8f\u5217\u5316\u7ed9\u5b9a\u7684\u5e8f\u5217\u5316\u7684\u5e8f\u5217\u5316\u503c\uff0c\u5e76\u5c06\u8be5\u503c\u4e0e\u7ed9\u5b9a\u7684key\u5173\u8054 set mykey0 \"Hello\" dump mykey0 restore mykey 0 \"\\x00\\x05Hello\\b\\x00\\x05\\xe4\\x1bW\\x94\\x1cu\\xbb\" get mykey","title":"Keys"},{"location":"Database/2018-04-06-redis-database/#strings","text":"APPEND key value \u5982\u679ckey\u5df2\u7ecf\u5b58\u5728\u5e76\u4e14\u5b83\u7684value\u662fString\u7c7b\u578b\uff0c\u90a3\u4e48\u5c06value\u8ffd\u52a0\u5230value\u7684\u7ed3\u5c3e\u3002 \u5982\u679ckey\u4e0d\u5b58\u5728\uff0c\u76f8\u5f53\u4e8e\u6267\u884cset\u547d\u4ee4\u3002 SET key value [EX seconds] [PX milliseconds] [NX|XX] \u8bbe\u7f6ekey\u548cvalue\uff0c\u540c\u65f6\u8bbe\u7f6e\u8be5key\u7684\u8fc7\u671f\u65f6\u95f4\u3002 GET key \u83b7\u53d6key\u5bf9\u5e94\u7684value MGET key [key ...] \u83b7\u53d6\u591a\u4e2akey\u7684\u503c\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5219\u8fd4\u56denil MSET key value [key value ...] \u8bbe\u7f6e\u591a\u4e2akey\u7684\u503c SETRANGE key offset value \u4eceoffset\u4f4d\u7f6e\u66ff\u6362\u5bf9\u5e94\u7684key\u7684value\u90e8\u5206\uff0c\u66ff\u6362\u7684\u957f\u5ea6\u4e3avalue\u7684\u957f\u5ea6 SET key1 \"Hello World\" // 'W' \u5904\u5f00\u59cb\u5f00\u59cb\u66ff\u6362 SETRANGE key1 6 \"Redis\" // \u8fd4\u56de \"Hello Redis\" GET key1 STRLEN key \u8fd4\u56dekey\u7684value\u7684\u957f\u5ea6","title":"Strings"},{"location":"Database/2018-04-06-redis-database/#hashes","text":"\u6570\u636e\u7ed3\u6784\u548cmap\u7c7b\u4f3c\uff0ckey\u548cvalue\u90fd\u662fstring\u7c7b\u578b\u3002 HSET key field value \u5728\u540d\u5b57\u4e3akey\u7684map\u4e2d\u6dfb\u52a0\u4e00\u6761key\u4e3afield\uff0c\u503c\u4e3avalue\u7684\u8bb0\u5f55 hset people name zhangsan hset people age 12 HGET key field \u5728\u540d\u5b57\u4e3akey\u7684map\u4e2d\u83b7\u53d6field\u7684\u503c hget people name HLEN key \u8fd4\u56demap\u7684\u957f\u5ea6 HMGET key field [field ...] \u8fd4\u56demap\u4e2d\u591a\u4e2akey\u7684value HMSET key field value [field value ...] \u8bbe\u7f6emap\u4e2d\u7684\u591a\u4e2a\u5b57\u6bb5 HKEYS key \u8fd4\u56demap\u4e2d\u6240\u6709\u7684field HVALS key \u8fd4\u56demap\u4e2d\u6240\u6709\u7684value","title":"Hashes"},{"location":"Database/2018-04-06-redis-database/#lists","text":"LPUSH key value [value ...] \u5728list\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u5143\u7d20 lpush mylist zhangsan LINDEX key index \u8fd4\u56de\u4e0b\u6807\u4e3aindex\u7684\u5143\u7d20 lindex mylist 0 LINSERT key BEFORE|AFTER pivot value \u5728\u6307\u5b9a\u7684\u5143\u7d20\u4f4d\u7f6e\u524d\u6216\u8005\u540e\u9762\u63d2\u5165\u5143\u7d20 // \u5728 zhangsan\u524d\u9762\u63d2\u5165lisi LINSERT mylist BEFORE \"zhangsan\" \"lisi\" LLEN key \u8fd4\u56delist\u7684\u957f\u5ea6 LPOP key \u5220\u9664\u5e76\u8fd4\u56de\u7b2c\u4e00\u4e2a\u5143\u7d20 LRANGE key start stop \u8fd4\u56de\u5217\u8868 key \u4e2d\u6307\u5b9a\u533a\u95f4\u5185\u7684\u5143\u7d20\uff0c\u533a\u95f4\u4ee5\u504f\u79fb\u91cf start \u548c stop \u6307\u5b9a\u3002start\u548cstop\u90fd\u662f\u4ee50\u4e3a\u57fa\u51c6\uff0c\u4e5f\u53ef\u4ee5\u4e3a\u8d1f\u503c\uff0c\u8868\u793a\u4ecelist\u7684\u5c3e\u90e8\u5f00\u59cb\u7b97\u8d77\u3002 \u5982\u679cstart > stop ,\u8fd4\u56de\u4e00\u4e2a\u7a7a\u5217\u8868\u3002\u5982\u679cstop\u4e0b\u8868\u5927\u4e8eend\uff0c\u5219Redis\u4f1a\u628aend\u7684\u503c\u8d4b\u7ed9stop\u3002 // pis \uff1a\u6b64\u65f6\u8fd4\u56de 6 \u4e2a\u5143\u7d20\uff0c\u548c\u7f16\u7a0b\u4e2d\u7684\u754c\u9650\u4e0d\u4e00\u6837 lrange mylist 0 5 LREM key count value \u5220\u9664list\u4e2dcount\u4e2a\u6570\u7684\u7b49\u4e8evalue\u7684\u5143\u7d20 lrem mylist 1 zhangsan LSET key index value \u5c06\u5217\u8868 key\u4e0b\u6807\u4e3aindex\u7684\u5143\u7d20\u7684\u503c\u8bbe\u7f6e\u4e3avalue lset mylist 0 wangwu RPUSH key value [value ...] \u5c06\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u503c\u63d2\u5165list\u7684\u672b\u5c3e RPOP key \u79fb\u9664\u5e76\u8fd4\u56delist\u7684\u5c3e\u5143\u7d20","title":"Lists"},{"location":"Database/2018-04-06-redis-database/#sets","text":"SADD key member [member ...] \u5728set\u4e2d\u6dfb\u52a0\u4e00\u6761\u6216\u8005\u591a\u6761\u8bb0\u5f55\uff0cset\u4e2d\u7684\u5143\u7d20\u4e0d\u91cd\u590d SCARD key \u8fd4\u56deset\u7684\u957f\u5ea6 SDIFF key [key ...] \u8ba1\u7b97\u96c6\u5408\u4e4b\u95f4\u7684\u5dee\u96c6 key1 = { a , b , c , d } key2 = { c } key3 = { a , c , e } SDIFF key1 key2 key3 = { b , d } SDIFFSTORE destination key [key ...] \u5c06\u96c6\u5408\u7684\u5dee\u96c6\u4fdd\u5b58\u5728\u952e\u4e3akey\u7684\u96c6\u5408\u4e2d key1 = { a , b , c , d } key2 = { c } SDIFFSTORE key1 key2 key3 keys = { b , d } SINTER key [key ...] \u8ba1\u7b97\u96c6\u5408\u7684\u4ea4\u96c6 key1 = { a , b , c , d } key2 = { c } key3 = { a , c , e } SINTER key1 key2 key3 = { c } SINTERSTORE destination key [key ...] \u5c06\u96c6\u5408\u7684\u4ea4\u96c6\u4fdd\u5b58\u5728\u952e\u4e3akey\u7684\u96c6\u5408\u4e2d key1 = { a , b , c , d } key2 = { c } key3 = { a , c , e } SINTERSTORE key1 key2 key3 key4 key4 = { c } SUNION key [key ...] \u8ba1\u7b97\u96c6\u5408\u7684\u5e76\u96c6 key1 = { a , b , c , d } key2 = { c } key3 = { a , c , e } SUNION key1 key2 key3 = { a , b , c , d , e } SUNIONSTORE destination key [key ...] \u8ba1\u7b97\u96c6\u5408\u7684\u5e76\u96c6\u5e76\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u96c6\u5408 key1 = { a , b , c , d } key2 = { c } key3 = { a , c , e } SUNION key1 key2 key3 key4 key4 = { a , b , c , d , e } SISMEMBER key member \u5224\u65adset\u4e2d\u662f\u5426\u5305\u542bmember,\u5305\u542b\u8fd4\u56de1\uff0c\u4e0d\u5305\u542b\u8fd4\u56de0 SADD myset \"one\" // \u8fd4\u56de 1 SISMEMBER myset \"one\" // \u8fd4\u56de 0 SISMEMBER myset \"two\" SMEMBERS key \u8fd4\u56deset\u4e2d\u6240\u6709\u7684value SMOVE source destination member \u5c06\u5143\u7d20\u4ece\u6e90set\u79fb\u52a8\u5230\u76ee\u7684\u5730set\uff0c\u662f\u4e00\u4e2a\u539f\u5b50\u64cd\u4f5c SPOP key [count] \u968f\u673a\u79fb\u9664\u5e76\u8fd4\u56de\u96c6\u5408\u4e2d\u7684\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u5143\u7d20 SRANDMEMBER key [count] \u968f\u673a\u83b7\u5f97\u96c6\u5408\u4e2d\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u5143\u7d20 SREM key member [member ...] \u5220\u9664\u96c6\u5408\u4e2d\u7684\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u5143\u7d20","title":"Sets"},{"location":"Database/2018-04-06-redis-database/#sorted-sets","text":"\u6709\u5e8f\u96c6\u5408\u91cc\u9762\u7684\u6210\u5458\u662f\u4e0d\u80fd\u91cd\u590d\u7684\u90fd\u662f\u552f\u4e00\u7684\uff0c\u4f46\u662f\uff0c\u4e0d\u540c\u6210\u5458\u95f4\u6709\u53ef\u80fd\u6709\u76f8\u540c\u7684\u5206\u6570 ZADD key [NX|XX] [CH] [INCR] score member [score member ...] /** *ZADD options (Redis 3.0.2 \u53ca\u4ee5\u4e0a\u7248\u672c\u652f\u6301) *NX : \u4e0d\u66f4\u65b0\u5df2\u7ecf\u5b58\u5728\u7684\u5143\u7d20\uff0c\u53ea\u589e\u52a0\u65b0\u7684\u5143\u7d20\u3002 *XX \uff1a\u53ea\u66f4\u65b0\u5df2\u7ecf\u5b58\u5728\u7684\u5143\u7d20\uff0c\u4e0d\u589e\u52a0\u5143\u7d20\u3002 *CH \uff1a\u4fee\u6539\u8fd4\u56de\u503c\u4e3a\u53d1\u751f\u53d8\u5316\u7684\u6210\u5458\u603b\u6570\uff0c\u539f\u59cb\u662f\u8fd4\u56de\u65b0\u6dfb\u52a0\u6210\u5458\u7684\u603b\u6570 (CH \u662f changed \u7684\u610f\u601d)\u3002\u66f4\u6539\u7684\u5143\u7d20\u662f\u65b0\u6dfb\u52a0\u7684\u6210\u5458\uff0c\u5df2\u7ecf\u5b58\u5728\u7684\u6210\u5458\u66f4\u65b0\u5206\u6570\u3002 \u6240\u4ee5\u5728\u547d\u4ee4\u4e2d\u6307\u5b9a\u7684\u6210\u5458\u6709\u76f8\u540c\u7684\u5206\u6570\u5c06\u4e0d\u88ab\u8ba1\u7b97\u5728\u5185\u3002\u6ce8\uff1a\u5728\u901a\u5e38\u60c5\u51b5\u4e0b\uff0cZADD\u8fd4\u56de\u503c\u53ea\u8ba1\u7b97\u65b0\u6dfb\u52a0\u6210\u5458\u7684\u6570\u91cf\u3002 *INCH \uff1a\u5f53ZADD\u6307\u5b9a\u8fd9\u4e2a\u9009\u9879\u65f6\uff0c\u6210\u5458\u7684\u64cd\u4f5c\u5c31\u7b49\u540cZINCRBY\u547d\u4ee4\uff0c\u5bf9\u6210\u5458\u7684\u5206\u6570\u8fdb\u884c\u9012\u589e\u64cd\u4f5c */ ZADD myzset 1 \"one\" ZADD myzset 2 \"two\" 3 \"three\" ZCARD key \u8fd4\u56de\u96c6\u5408\u7684\u957f\u5ea6 ZRANGEBYSCORE key min max [WITHSCORES] [LIMIT offset count] \u8fd4\u56de\u6709\u5e8f\u96c6\u5408\u4e2d\u5206\u6570\u5728min\u548cmax\u4e4b\u95f4\u7684\u6240\u6709\u5143\u7d20 /** *min\u548cmax\u53ef\u4ee5\u662f-inf\u548c+inf *min \u8868\u793a \u5927\u4e8e\u7b49\u4e8e; (min \u8868\u793a\u5927\u4e8e *max \u8868\u793a \u5c0f\u4e8e\u7b49\u4e8e; (max \u8868\u793a\u5c0f\u4e8e */ ZRANGEBYSCORE myzset - inf + inf ZRANGEBYSCORE myzset ( 1 2 ZRANGEBYSCORE myzset ( 1 ( 2 ZRANGE key start stop [WITHSCORES] \u8fd4\u56de\u6709\u5e8f\u96c6\u5408\u4e2d\u6307\u5b9a\u8303\u56f4(start,stop)\u5185\u7684\u5143\u7d20 ZCOUNT key min max \u8fd4\u56de\u6709\u5e8f\u96c6\u5408\u4e2dscore\u5728min\u548cmax\u4e4b\u95f4\u5143\u7d20\u7684\u4e2a\u6570 ZINCRBY key increment member \u5c06\u6709\u5e8f\u96c6\u5408\u4e2dmember\u7684score\u589e\u52a0increment\uff1b\u5982\u679cmember\u4e0d\u5b58\u5728\uff0c\u5c31\u589e\u52a0\u4e00\u4e2amember\uff1bscore\u662fincrement\uff0c\u5982\u679ckey\u4e0d\u5b58\u5728\uff0c\u5219\u521b\u5efa\u4e00\u4e2a\u53ea\u5305\u542bmember\u7684\u6709\u5e8f\u96c6\u5408\u3002 ZADD myzset 1 \"one\" ZADD myzset 2 \"two\" // \"one\" \u7684 score\u53d8\u4e3a3 ZINCRBY myzset 2 \"one\" ZRANGE myzset 0 - 1 WITHSCORES ZRANK key member \u8fd4\u56de\u6709\u5e8f\u96c6\u5408\u4e2d\u5143\u7d20\u7684\u6392\u540d\uff0c\u6392\u540d\u9ed8\u8ba4\u4ece0\u5f00\u59cb ZREM key member [member ...] \u5220\u9664\u6709\u5e8f\u96c6\u5408\u4e2d\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u5143\u7d20 ZINTERSTORE destination numkeys key [key ...] [WEIGHTS weight [weight ...]] [AGGREGATE SUM|MIN|MAX] \u8ba1\u7b97\u591a\u4e2a\u6709\u5e8f\u96c6\u5408\u7684\u4ea4\u96c6\u3002WEIGHT\u662f\u8ba1\u7b97\u56e0\u5b50\uff0c\u9ed8\u8ba4\u662f1. \u6307\u5b9aWEIGHT\u5c31\u662f score = score*WEIGHT;\u805a\u7c07\u51fd\u6570AGGREGATE \u9009\u9879\u9ed8\u8ba4\u662fSUM zadd Q1 88 \"apple\" zadd Q1 92 \"orange\" zadd Q1 100 \"peach\" zadd Q2 27 \"apple\" zadd Q2 34 \"orange\" zadd Q2 80 \"peach\" zadd Q2 100 \"grape\" zinterstore Q1Q2 2 Q1 Q2 /** *apple(115) = Q1(88) + Q2(27) *Q1 \u4e2d\u4e0d\u5305\u542bgrape\uff0cQ1Q2\u4e2d\u4e5f\u6ca1\u6709 */ zrange Q1Q2 0 - 1 withscores 1 ) \"apple\" 2 ) \"115\" 3 ) \"orange\" 4 ) \"126\" 5 ) \"peach\" 6 ) \"180\" /** *apple(115) = Q1(88*1) + Q2(27*2) *Q1 \u4e2d\u4e0d\u5305\u542bgrape\uff0cQ1Q2\u4e2d\u4e5f\u6ca1\u6709 */ zinterstore Q1Q2 2 Q1 Q2 WEIGHTS 1 2 zrange Q1Q2 0 - 1 withscores 1 ) \"apple\" 2 ) \"142\" 3 ) \"orange\" 4 ) \"160\" 5 ) \"peach\" 6 ) \"260\" zinterstore Q1Q2 2 Q1 Q2 WEIGHTS 1 2 AGGREGATE SUM zrange Q1Q2 0 - 1 withscores 1 ) \"apple\" 2 ) \"142\" 3 ) \"orange\" 4 ) \"160\" 5 ) \"peach\" 6 ) \"260\" /** *apple(54) = min(Q1(88*1), Q2(27*2)) *orange(68) = min(Q1(92*1), Q2(34*2)) *peach(68) = min(Q1(100*1), Q2(80*2)) *Q1 \u4e2d\u4e0d\u5305\u542bgrape\uff0cQ1Q2\u4e2d\u4e5f\u6ca1\u6709 */ zinterstore Q1Q2 2 Q1 Q2 WEIGHTS 1 2 AGGREGATE MIN zrange Q1Q2 0 - 1 withscores 1 ) \"apple\" 2 ) \"54\" 3 ) \"orange\" 4 ) \"68\" 5 ) \"peach\" 6 ) \"100\" /** *apple(54) = max(Q1(88*1), Q2(27*2)) *orange(68) = max(Q1(92*1), Q2(34*2)) *peach(68) = max(Q1(100*1), Q2(80*2)) *Q1 \u4e2d\u4e0d\u5305\u542bgrape\uff0cQ1Q2\u4e2d\u4e5f\u6ca1\u6709 */ zinterstore Q1Q2 2 Q1 Q2 WEIGHTS 1 2 AGGREGATE MAX zrange Q1Q2 0 - 1 withscores 1 ) \"apple\" 2 ) \"88\" 3 ) \"orange\" 4 ) \"92\" 5 ) \"peach\" 6 ) \"160\" ZUNIONSTORE destination numkeys key [key ...] [WEIGHTS weight [weight ...]] [AGGREGATE SUM|MIN|MAX] \u8ba1\u7b97\u591a\u4e2a\u6709\u5e8f\u96c6\u5408\u7684\u5e76\u96c6\u3002WEIGHT\u662f\u8ba1\u7b97\u56e0\u5b50\uff0c\u9ed8\u8ba4\u662f1. \u6307\u5b9aWEIGHT\u5c31\u662f score = score*WEIGHT;\u805a\u7c07\u51fd\u6570AGGREGATE \u9009\u9879\u9ed8\u8ba4\u662fSUM zunionstore Q1Q2 2 Q1 Q2 WEIGHTS 1 2 AGGREGATE MAX zrange Q1Q2 0 - 1 withscores /** *apple(54) = max(Q1(88*1), Q2(27*2)) *orange(68) = max(Q1(92*1), Q2(34*2)) *peach(68) = max(Q1(100*1), Q2(80*2)) *Q1\u4e0d\u5305\u542bgrape\uff0cQ2\u5305\u542bgrape\uff0cQ1Q2\u4e2d\u5305\u542bgrape */ 1 ) \"apple\" 2 ) \"88\" 3 ) \"orange\" 4 ) \"92\" 5 ) \"peach\" 6 ) \"160\" 7 ) \"grape\" 8 ) \"200\"","title":"Sorted Sets"},{"location":"Database/2018-04-06-redis-database/#_1","text":"\u53c2\u8003\u94fe\u63a51 \u53c2\u8003\u94fe\u63a52","title":"\u5f15\u7528"},{"location":"Devops/2018-11-21-gitusage-devops/","text":"git handbook \u00b6 Usage link \u4e00\u53f0\u7535\u8111\u914d\u7f6e\u591a\u4e2agit\u8d26\u6237 # \u5982\u679c\u6267\u884cssh-add\u547d\u4ee4\u62a5\u9519\uff1a Could not open a connection to your authentication agent ssh-agent bash # \u5220\u9664\u73b0\u5728\u7684agent\u5217\u8868 ssh-add -D # \u5411agent\u6dfb\u52a0\u8ba4\u8bc1 ssh-add id_rsa # \u67e5\u770bagent\u5217\u8868 ssh-add -l # \u6d4b\u8bd5\u8d26\u53f7\u662f\u5426\u8fde\u63a5\u5230\u4ed3\u5e93 ssh -T git@github.com # \u67e5\u770b\u73b0\u5728\u7684remote\u4fe1\u606f git remote -v git@github.com:Evliess/evliess.github.io.git # \u5220\u9664\u73b0\u5728\u7684remote\u4fe1\u606f git remote rm origin # \u518d\u6b21\u6dfb\u52a0remote\u4fe1\u606f\uff0c\u5c06hostName\u66ff\u6362\u4e3a.ssh/config\u4e2d\u5bf9\u5e94\u7684\u503c git remote add origin git@jiajia126.github.com:Evliess/evliess.github.io.git # config template #### start #### ## Host\u7684\u540d\u5b57\u53ef\u4ee5\u81ea\u5df1\u5b9a\u4e49 #jiajia_yuwei@126.com Host jiajia126.github.com HostName github.com User jiajia_yuwei@126.com IdentityFile C: \\\\ Users \\\\ JiaJiaGui \\\\ .ssh \\\\ jiajia126 #jiajia_yuwei@126.com - github.com Host github.com HostName github.com User jiajia_yuwei@126.com IdentityFile C: \\\\ Users \\\\ JiaJiaGui \\\\ .ssh \\\\ id_rsa #### end #### Git proxy setting # \u8bbe\u7f6ess git config --global http.proxy 'socks5://127.0.0.1:1080' git config --global https.proxy 'socks5://127.0.0.1:1080' # \u8bbe\u7f6e\u4ee3\u7406 git config --global https.proxy http://127.0.0.1:1080 git config --global https.proxy https://127.0.0.1:1080 # \u53d6\u6d88\u4ee3\u7406 git config --global --unset http.proxy git config --global --unset https.proxy git \u6bd4\u8f83\u672c\u5730\u4fee\u6539\u7684\u6587\u4ef6\u4e0emaster\u5dee\u5f02 git diff --cached file git diff --staged file git \u64a4\u9500\u672apush\u7684commit git log # \u5b8c\u6210\u64a4\u9500, \u540c\u65f6\u5c06\u4ee3\u7801\u6062\u590d\u5230\u524d\u4e00\u4e2acommit_id \u5bf9\u5e94\u7684\u7248\u672c git reset --hard commit_id # \u5b8c\u6210Commit\u547d\u4ee4\u7684\u64a4\u9500\uff0c\u4f46\u662f\u4e0d\u5bf9\u4ee3\u7801\u4fee\u6539\u8fdb\u884c\u64a4\u9500 git reset commit_id Migrate reposityA to reposityB git clone --bare reposityA git remote rm origin <!--optional --> git remote add origin reposityB git push --mirror origin Git revert git revert 47900454c18cca36f66f7832fbb1617797b52708 git commit Switch branch git branch branch-name Create branch from commit git branch branchName <sha1-of-commit> or git checkout -b branchName <sha1-of-commit> Create branch from tag git tag v1.0 git checkout -b branch1 v1.0 <!-- branchName:branch1 tagName:v1.0 --> git push origin branch1 Replace the master branch with another branch git checkout another_branch git merge -s ours --no-commit master git commit git checkout master git merge another_branch git push origin master Jenkins + Ant + Java8 ant version 1.10.X \u5426\u5219\u4f1a\u51fa\u73b0javac1.8 error \u6216\u8005 ant script\u627e\u4e0d\u5230\u7cfb\u7edf\u914d\u7f6e\u7684java_home Generate ssh-key - C:\\Users\\XXX.ssh\\id_rsa.pub ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\" git add git commit -m \"comment\" git pull git push origin master","title":"Git\u4f7f\u7528"},{"location":"Devops/2018-11-21-gitusage-devops/#git-handbook","text":"Usage link \u4e00\u53f0\u7535\u8111\u914d\u7f6e\u591a\u4e2agit\u8d26\u6237 # \u5982\u679c\u6267\u884cssh-add\u547d\u4ee4\u62a5\u9519\uff1a Could not open a connection to your authentication agent ssh-agent bash # \u5220\u9664\u73b0\u5728\u7684agent\u5217\u8868 ssh-add -D # \u5411agent\u6dfb\u52a0\u8ba4\u8bc1 ssh-add id_rsa # \u67e5\u770bagent\u5217\u8868 ssh-add -l # \u6d4b\u8bd5\u8d26\u53f7\u662f\u5426\u8fde\u63a5\u5230\u4ed3\u5e93 ssh -T git@github.com # \u67e5\u770b\u73b0\u5728\u7684remote\u4fe1\u606f git remote -v git@github.com:Evliess/evliess.github.io.git # \u5220\u9664\u73b0\u5728\u7684remote\u4fe1\u606f git remote rm origin # \u518d\u6b21\u6dfb\u52a0remote\u4fe1\u606f\uff0c\u5c06hostName\u66ff\u6362\u4e3a.ssh/config\u4e2d\u5bf9\u5e94\u7684\u503c git remote add origin git@jiajia126.github.com:Evliess/evliess.github.io.git # config template #### start #### ## Host\u7684\u540d\u5b57\u53ef\u4ee5\u81ea\u5df1\u5b9a\u4e49 #jiajia_yuwei@126.com Host jiajia126.github.com HostName github.com User jiajia_yuwei@126.com IdentityFile C: \\\\ Users \\\\ JiaJiaGui \\\\ .ssh \\\\ jiajia126 #jiajia_yuwei@126.com - github.com Host github.com HostName github.com User jiajia_yuwei@126.com IdentityFile C: \\\\ Users \\\\ JiaJiaGui \\\\ .ssh \\\\ id_rsa #### end #### Git proxy setting # \u8bbe\u7f6ess git config --global http.proxy 'socks5://127.0.0.1:1080' git config --global https.proxy 'socks5://127.0.0.1:1080' # \u8bbe\u7f6e\u4ee3\u7406 git config --global https.proxy http://127.0.0.1:1080 git config --global https.proxy https://127.0.0.1:1080 # \u53d6\u6d88\u4ee3\u7406 git config --global --unset http.proxy git config --global --unset https.proxy git \u6bd4\u8f83\u672c\u5730\u4fee\u6539\u7684\u6587\u4ef6\u4e0emaster\u5dee\u5f02 git diff --cached file git diff --staged file git \u64a4\u9500\u672apush\u7684commit git log # \u5b8c\u6210\u64a4\u9500, \u540c\u65f6\u5c06\u4ee3\u7801\u6062\u590d\u5230\u524d\u4e00\u4e2acommit_id \u5bf9\u5e94\u7684\u7248\u672c git reset --hard commit_id # \u5b8c\u6210Commit\u547d\u4ee4\u7684\u64a4\u9500\uff0c\u4f46\u662f\u4e0d\u5bf9\u4ee3\u7801\u4fee\u6539\u8fdb\u884c\u64a4\u9500 git reset commit_id Migrate reposityA to reposityB git clone --bare reposityA git remote rm origin <!--optional --> git remote add origin reposityB git push --mirror origin Git revert git revert 47900454c18cca36f66f7832fbb1617797b52708 git commit Switch branch git branch branch-name Create branch from commit git branch branchName <sha1-of-commit> or git checkout -b branchName <sha1-of-commit> Create branch from tag git tag v1.0 git checkout -b branch1 v1.0 <!-- branchName:branch1 tagName:v1.0 --> git push origin branch1 Replace the master branch with another branch git checkout another_branch git merge -s ours --no-commit master git commit git checkout master git merge another_branch git push origin master Jenkins + Ant + Java8 ant version 1.10.X \u5426\u5219\u4f1a\u51fa\u73b0javac1.8 error \u6216\u8005 ant script\u627e\u4e0d\u5230\u7cfb\u7edf\u914d\u7f6e\u7684java_home Generate ssh-key - C:\\Users\\XXX.ssh\\id_rsa.pub ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\" git add git commit -m \"comment\" git pull git push origin master","title":"git handbook"},{"location":"Devops/2019-09-20-docker-jenkins-devops/","text":"How to config jenkins using host JDK and Maven \u00b6 1. Download jenkins image docker pull jenkins/jenkins:lts 2. Custom dockerfile FROM jenkins/jenkins:lts # if we want to install via apt USER root RUN apt-get update -y && apt-get install -y libltdl-dev && rm -rf /var/lib/apt/lists/* # drop back to the regular jenkins user - good practice USER jenkins 3. Build a new image docker build -t waitplay/jenkins:lst . 4. Start a contain to run jenkins docker run -u root --rm -d -p 32772:8080 -p 50000:50000 -v /var/jenkins_home:/var/jenkins_home -v /var/run/docker.sock:/var/run/docker.sock -v $(which docker):/usr/bin/docker -v /etc/localtime:/etc/localtime -e JAVA_OPTS=-Duser.timezone=Asia/Shanghai --name jenkins waitplay/jenkins:lst 5. Download jdk-8u221-linux-x64.tar.gz . Download maven 6. unzip mkdir -p /var/jenkins_home/globalEnvi chown -R 1000:1000 jenkins_home cd /var/jenkins_home/globalEnvi tar -zxvf jdk-8u221-linux-x64.tar.gz tar -zxvf apache-maven-3.6.2-bin.tar.gz 7. Set Jenkins -> configuration -> add Environment variables JAVA_HOME=/var/jenkins_home/globalEnvi/jdk1.8.0_221 CLASSPATH=.:$JAVA_HOME/lib:$JAVA_HOME/jre/lib:$CLASSPATH M2_HOME=/var/jenkins_home/globalEnvi/apache-maven-3.6.2 PATH=$JAVA_HOME/bin:$PATH 8. Global Tool Configuration Maven Configuration xxx/conf/setting.xml JDK MAVEN 9. Test shell script java -version mvn -version docker -v","title":"Setup Jenkins in docker"},{"location":"Devops/2019-09-20-docker-jenkins-devops/#how-to-config-jenkins-using-host-jdk-and-maven","text":"1. Download jenkins image docker pull jenkins/jenkins:lts 2. Custom dockerfile FROM jenkins/jenkins:lts # if we want to install via apt USER root RUN apt-get update -y && apt-get install -y libltdl-dev && rm -rf /var/lib/apt/lists/* # drop back to the regular jenkins user - good practice USER jenkins 3. Build a new image docker build -t waitplay/jenkins:lst . 4. Start a contain to run jenkins docker run -u root --rm -d -p 32772:8080 -p 50000:50000 -v /var/jenkins_home:/var/jenkins_home -v /var/run/docker.sock:/var/run/docker.sock -v $(which docker):/usr/bin/docker -v /etc/localtime:/etc/localtime -e JAVA_OPTS=-Duser.timezone=Asia/Shanghai --name jenkins waitplay/jenkins:lst 5. Download jdk-8u221-linux-x64.tar.gz . Download maven 6. unzip mkdir -p /var/jenkins_home/globalEnvi chown -R 1000:1000 jenkins_home cd /var/jenkins_home/globalEnvi tar -zxvf jdk-8u221-linux-x64.tar.gz tar -zxvf apache-maven-3.6.2-bin.tar.gz 7. Set Jenkins -> configuration -> add Environment variables JAVA_HOME=/var/jenkins_home/globalEnvi/jdk1.8.0_221 CLASSPATH=.:$JAVA_HOME/lib:$JAVA_HOME/jre/lib:$CLASSPATH M2_HOME=/var/jenkins_home/globalEnvi/apache-maven-3.6.2 PATH=$JAVA_HOME/bin:$PATH 8. Global Tool Configuration Maven Configuration xxx/conf/setting.xml JDK MAVEN 9. Test shell script java -version mvn -version docker -v","title":"How to config jenkins using host JDK and Maven"},{"location":"Docker/2018-04-08-docker-compose-docker/","text":"1. Docker Compose Installation \u00b6 Environment: Ubuntu 16.04.4 LTS X86_64bit 1.1 Install docker-compose \u00b6 Download the latest version of Docker Compose: sudo curl -L https://github.com/docker/compose/releases/download/1.21.2/docker-compose- $( uname -s ) - $( uname -m ) -o /usr/local/bin/docker-compose Apply executable permissions to the binary: sudo chmod +x /usr/local/bin/docker-compose Install command completion: sudo curl -L https://raw.githubusercontent.com/docker/compose/1.21.2/contrib/completion/bash/docker-compose -o /etc/bash_completion.d/docker-compose Test the installation: docker-compose --version 2. Docker Compose Useful Command \u00b6 //Starts the containers in the background and leaves them running docker-compose up -d //Stops containers and removes containers, networks, volumes, and images created by up docker-compose down //Stops running containers without removing them. They can be started again with docker-compose start docker-compose stop //Starts existing containers for a service. docker-compose start 3. Example Docker Compose File \u00b6 3.1 Configure container network and ip version: '3' services: eureka-server-1: image: waitplay/eureka-server:latest environment: spring.profiles.active: srv1 eureka.client.serviceUrl.defaultZone: http://172.16.238.12:8762/eureka/ spring.application.name: Eureka-Server #preferIpAddress makes sure that Microservices register with their IP address and not with their host name. In a Docker environment host names are unfortunately not easily resolvable by other hosts. This problem is circumvented by the use of IP addresses. eureka.instance.preferIpAddress: \"true\" eureka.instance.hostname: eureka-server-1 ports: - \"8761:8761\" container_name: eureka-server-1 networks: app_net: ipv4_address: 172 .16.238.11 networks: app_net: driver: bridge ipam: driver: default config: - subnet: 172 .16.238.0/24","title":"Docker Compose"},{"location":"Docker/2018-04-08-docker-compose-docker/#1-docker-compose-installation","text":"Environment: Ubuntu 16.04.4 LTS X86_64bit","title":"1. Docker Compose Installation"},{"location":"Docker/2018-04-08-docker-compose-docker/#11-install-docker-compose","text":"Download the latest version of Docker Compose: sudo curl -L https://github.com/docker/compose/releases/download/1.21.2/docker-compose- $( uname -s ) - $( uname -m ) -o /usr/local/bin/docker-compose Apply executable permissions to the binary: sudo chmod +x /usr/local/bin/docker-compose Install command completion: sudo curl -L https://raw.githubusercontent.com/docker/compose/1.21.2/contrib/completion/bash/docker-compose -o /etc/bash_completion.d/docker-compose Test the installation: docker-compose --version","title":"1.1 Install docker-compose"},{"location":"Docker/2018-04-08-docker-compose-docker/#2-docker-compose-useful-command","text":"//Starts the containers in the background and leaves them running docker-compose up -d //Stops containers and removes containers, networks, volumes, and images created by up docker-compose down //Stops running containers without removing them. They can be started again with docker-compose start docker-compose stop //Starts existing containers for a service. docker-compose start","title":"2. Docker Compose Useful Command"},{"location":"Docker/2018-04-08-docker-compose-docker/#3-example-docker-compose-file","text":"3.1 Configure container network and ip version: '3' services: eureka-server-1: image: waitplay/eureka-server:latest environment: spring.profiles.active: srv1 eureka.client.serviceUrl.defaultZone: http://172.16.238.12:8762/eureka/ spring.application.name: Eureka-Server #preferIpAddress makes sure that Microservices register with their IP address and not with their host name. In a Docker environment host names are unfortunately not easily resolvable by other hosts. This problem is circumvented by the use of IP addresses. eureka.instance.preferIpAddress: \"true\" eureka.instance.hostname: eureka-server-1 ports: - \"8761:8761\" container_name: eureka-server-1 networks: app_net: ipv4_address: 172 .16.238.11 networks: app_net: driver: bridge ipam: driver: default config: - subnet: 172 .16.238.0/24","title":"3. Example Docker Compose File"},{"location":"Docker/2018-04-08-installation-docker/","text":"1. Docker Installation \u00b6 Environment: Ubuntu 16.04.4 LTS X86_64bit 1.1 Install docker, docker-compose \u00b6 First, add the GPG key for the official Docker repository to the system: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - Add the Docker repository to APT sources: sudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $( lsb_release -cs ) stable\" Next, update the package database with the Docker packages from the newly added repo: sudo apt-get update Make sure you are about to install from the Docker repo instead of the default Ubuntu 16.04 repo: apt-cache policy docker-ce Finally, install Docker: sudo apt-get install -y docker-ce Check that it's running: sudo systemctl status docker Active: active (running) since Fri 2018-05-11 12:26:54 CST; Install docker-compose: sudo curl -L https://github.com/docker/compose/releases/download/1.21.2/docker-compose- $( uname -s ) - $( uname -m ) -o /usr/local/bin/docker-compose && sudo chmod +x /usr/local/bin/docker-compose 1.2 Install docker-machine (Optional) \u00b6 Install docker-machine: base = https://github.com/docker/machine/releases/download/v0.14.0 && curl -L $base /docker-machine- $( uname -s ) - $( uname -m ) >/tmp/docker-machine && sudo install /tmp/docker-machine /usr/local/bin/docker-machine Install required linux headers sudo apt-get -y install gcc make linux-headers- $( uname -r ) dkms Add virtualbox repository and key wget -q https://www.virtualbox.org/download/oracle_vbox_2016.asc -O- | sudo apt-key add - wget -q https://www.virtualbox.org/download/oracle_vbox.asc -O- | sudo apt-key add - sudo sh -c 'echo \"deb http://download.virtualbox.org/virtualbox/debian $(lsb_release -sc) contrib\" >> /etc/apt/sources.list' Install virtual box sudo apt-get update sudo apt-get install virtualbox-5.2 Verify installation VBoxManage -v Install virtualbox extension package curl -O http://download.virtualbox.org/virtualbox/5.2.4/Oracle_VM_VirtualBox_Extension_Pack-5.2.4-119785.vbox-extpack sudo VBoxManage extpack install Oracle_VM_VirtualBox_Extension_Pack-5.2.4-119785.vbox-extpack VBoxManage list extpacks VBoxManage list extpacks Uninstall virtualbox sudo apt-get remove --purge virtualbox Uninstall virtualbox extension sudo VBoxManage extpack uninstall \"Oracle VM VirtualBox Extension Pack\" vboxmanage list extpacks Docker\u6280\u672f\u5165\u95e8\u4e0e\u5b9e\u8df5","title":"Docker Installation"},{"location":"Docker/2018-04-08-installation-docker/#1-docker-installation","text":"Environment: Ubuntu 16.04.4 LTS X86_64bit","title":"1. Docker Installation"},{"location":"Docker/2018-04-08-installation-docker/#11-install-docker-docker-compose","text":"First, add the GPG key for the official Docker repository to the system: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - Add the Docker repository to APT sources: sudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $( lsb_release -cs ) stable\" Next, update the package database with the Docker packages from the newly added repo: sudo apt-get update Make sure you are about to install from the Docker repo instead of the default Ubuntu 16.04 repo: apt-cache policy docker-ce Finally, install Docker: sudo apt-get install -y docker-ce Check that it's running: sudo systemctl status docker Active: active (running) since Fri 2018-05-11 12:26:54 CST; Install docker-compose: sudo curl -L https://github.com/docker/compose/releases/download/1.21.2/docker-compose- $( uname -s ) - $( uname -m ) -o /usr/local/bin/docker-compose && sudo chmod +x /usr/local/bin/docker-compose","title":"1.1 Install docker, docker-compose"},{"location":"Docker/2018-04-08-installation-docker/#12-install-docker-machine-optional","text":"Install docker-machine: base = https://github.com/docker/machine/releases/download/v0.14.0 && curl -L $base /docker-machine- $( uname -s ) - $( uname -m ) >/tmp/docker-machine && sudo install /tmp/docker-machine /usr/local/bin/docker-machine Install required linux headers sudo apt-get -y install gcc make linux-headers- $( uname -r ) dkms Add virtualbox repository and key wget -q https://www.virtualbox.org/download/oracle_vbox_2016.asc -O- | sudo apt-key add - wget -q https://www.virtualbox.org/download/oracle_vbox.asc -O- | sudo apt-key add - sudo sh -c 'echo \"deb http://download.virtualbox.org/virtualbox/debian $(lsb_release -sc) contrib\" >> /etc/apt/sources.list' Install virtual box sudo apt-get update sudo apt-get install virtualbox-5.2 Verify installation VBoxManage -v Install virtualbox extension package curl -O http://download.virtualbox.org/virtualbox/5.2.4/Oracle_VM_VirtualBox_Extension_Pack-5.2.4-119785.vbox-extpack sudo VBoxManage extpack install Oracle_VM_VirtualBox_Extension_Pack-5.2.4-119785.vbox-extpack VBoxManage list extpacks VBoxManage list extpacks Uninstall virtualbox sudo apt-get remove --purge virtualbox Uninstall virtualbox extension sudo VBoxManage extpack uninstall \"Oracle VM VirtualBox Extension Pack\" vboxmanage list extpacks Docker\u6280\u672f\u5165\u95e8\u4e0e\u5b9e\u8df5","title":"1.2 Install docker-machine (Optional)"},{"location":"Docker/2018-05-23-storage-docker/","text":"Storage overview \u00b6 Docker \u652f\u6301\u4e09\u79cd\u5f62\u5f0f\u7684mount\u7c7b\u578b\uff0c\u5206\u522b\u662f\uff1aVolumes, Bind mounts \u548c tmpfs. \u7279\u522b\u7559\u610f: 1. \u5982\u679cmount\u4e00\u4e2a\u7a7a\u7684volume\u5230\u5bb9\u5668\u4e2d\u7684\u4e00\u4e2a\u76ee\u5f55\uff0c\u6216\u8005\u6587\u4ef6\uff0c\u8fd9\u4e9b\u6587\u4ef6\u6216\u8005\u76ee\u5f55\u5c06\u88ab\u540c\u6b65\u590d\u5236\u5230\u7a7a\u7684\u6570\u636e\u5377\u4e2d\u3002\u542f\u52a8\u5bb9\u5668\u7684\u65f6\u5019\u6307\u5b9a\u4e00\u4e2a\u4e0d\u5b58\u5728\u7684\u6570\u636e\u5377\uff0c\u4e00\u4e2a\u7a7a\u7684\u6570\u636e\u5377\u5efa\u4f1a\u88ab\u521b\u5efa\u3002 2. \u5982\u679cmount\u4e00\u4e2abind mount \u7c7b\u578b\u7684\u6570\u636e\u5377\u6216\u8005\u975e\u7a7a\u7684 volume \u5230\u5bb9\u5668\u4e2d\u7684\u4e00\u4e2a\u76ee\u5f55\uff0c\u5982\u679c\u8fd9\u4e2a\u76ee\u5f55\u4e2d\u5df2\u7ecf\u5b58\u5728\u4e00\u4e9b\u6587\u4ef6\uff0c\u90a3\u4e48\u8fd9\u4e9b\u6587\u4ef6\u5728\u6302\u8f7d\u5916\u90e8\u6570\u636e\u5377\u671f\u95f4\u5c06\u4e0d\u53ef\u89c1\uff0c\u4e5f\u4e0d\u80fd\u88ab\u4fee\u6539\uff0c\u9664\u975e\u79fb\u9664\u6302\u8f7d\u7684\u6570\u636e\u5377\u3002 Volumes \u00b6 Volumes \u5b58\u50a8\u5728\u5bbf\u4e3b\u673a\u5668\u7684\u6587\u4ef6\u7cfb\u7edf\u4e0a\u7684\u4e00\u5757\u533a\u57df\uff0c\u8fd9\u5757\u533a\u57df (/var/lib/docker/volumes) \u88abDocker\u7ba1\u7406\uff0c\u975eDocker\u7684\u8fdb\u7a0b\u4e0d\u80fd\u4fee\u6539\u8fd9\u5757\u533a\u57df\u3002\u5b98\u65b9\u63a8\u8350\u7684\u4e00\u79cd\u5b58\u50a8\u65b9\u5f0f\u3002 \u5178\u578b\u7684\u7528\u4f8b\uff1a - \u5728\u591a\u4e2a\u6b63\u5728\u8fd0\u884c\u7684\u5bb9\u5668\u4e4b\u95f4\u5171\u4eab\u6570\u636e - When the Docker host is not guaranteed to have a given directory or file structure. - \u8fdc\u7a0b\u5b58\u50a8\u5bb9\u5668\u7684\u6570\u636e\uff0c\u6bd4\u5982\u4e91\u63d0\u4f9b\u5546 - \u5907\u4efd\uff0c\u6062\u590d\uff0c\u8fc1\u79fb\u6570\u636e\u4ece\u4e00\u4e2aDocker\u4e3b\u673a\u5230\u53e6\u5916\u4e00\u4e2a\u4e3b\u673a Bind mounts \u00b6 Bind mounts \u53ef\u4ee5\u5b58\u50a8\u5728\u5bbf\u4e3b\u673a\u5668\u7684\u6587\u4ef6\u7cfb\u7edf\u4e0a\u4efb\u4f55\u4f4d\u7f6e\u3002\u975eDocker\u7ebf\u7a0b\u53ef\u4ee5\u6216\u8005\u4efb\u610f\u4e00\u4e2aDocker \u5bb9\u5668\u53ef\u4ee5\u968f\u610f\u4fee\u6539\u3002\u4e00\u822c\u63a8\u8350\u5728\u5f00\u53d1\u7684\u8fc7\u7a0b\u4e2d\u4f7f\u7528\u8fd9\u4e2dmount \u65b9\u5f0f\u3002 \u5178\u578b\u7684\u7528\u4f8b\uff1a - \u5bbf\u4e3b\u673a\u5668\u4e0e\u5bb9\u5668\u4e4b\u95f4\u5171\u4eab\u914d\u7f6e\u6587\u4ef6 - \u5728\u5f00\u53d1\u73af\u5883\u5bbf\u4e3b\u673a\u5668\u4e0e\u5bb9\u5668\u5171\u4eabsource code\uff0c\u6216\u8005build artifacts - When the file or directory structure of the Docker host is guaranteed to be consistent with the bind mounts the containers require docker run -dt --name tomcat --mount type=bind,source=\"$(pwd)\"/app,target=/usr/local/tomcat/webapps/app -p 8080:8080 tomcat:7.0-alpine tmpfs \u00b6 \u5b58\u50a8\u5728\u5bbf\u4e3b\u673a\u5668\u7684\u5185\u5b58\u4e2d\uff0c\u4e0d\u4f1a\u88ab\u5199\u5165\u5bbf\u4e3b\u7684\u6587\u4ef6\u7cfb\u7edf\u3002 \u5178\u578b\u7684\u7528\u4f8b\uff1a - \u57fa\u4e8e\u5b89\u5168\u8003\u8651\u6216\u8005\u6548\u7387\u7684\u56e0\u7d20\uff0c\u4e0d\u5e0c\u671b\u5c06\u6570\u636e\u4fdd\u5b58\u5230\u5bbf\u4e3b\u673a\u5668\u6216\u8005\u5bb9\u5668\u4e2d Userful Commands \u00b6 //\u8fdb\u5165\u5bb9\u5668\u7684\u5185\u90e8\u67e5\u770b\u5bb9\u5668 docker exec -it <container-name> /bin/bash //\u5220\u9664\u6240\u6709\u6b63\u5728\u8fd0\u884c\u7684container docker rm $( docker stop $( docker ps -aq )) //\u6784\u5efa\u955c\u50cf docker build -t <image-name> . //\u5220\u9664none\u533f\u540d\u955c\u50cf docker rmi -f $( docker images | grep \"none\" | awk '{print$3}' ) //\u5220\u9664\u4ee5test\u5f00\u5934\u7684\u955c\u50cf docker rmi -f $( docker images | grep \"^test\" | awk '{print$3}' ) //\u5220\u9664\u6240\u6709\u7684\u6570\u636e\u5377 docker volume prune //\u67e5\u770b\u5bb9\u5668\u7684log docker logs -f -t YOUR_CONTAINER_NAME","title":"Docker Storage"},{"location":"Docker/2018-05-23-storage-docker/#storage-overview","text":"Docker \u652f\u6301\u4e09\u79cd\u5f62\u5f0f\u7684mount\u7c7b\u578b\uff0c\u5206\u522b\u662f\uff1aVolumes, Bind mounts \u548c tmpfs. \u7279\u522b\u7559\u610f: 1. \u5982\u679cmount\u4e00\u4e2a\u7a7a\u7684volume\u5230\u5bb9\u5668\u4e2d\u7684\u4e00\u4e2a\u76ee\u5f55\uff0c\u6216\u8005\u6587\u4ef6\uff0c\u8fd9\u4e9b\u6587\u4ef6\u6216\u8005\u76ee\u5f55\u5c06\u88ab\u540c\u6b65\u590d\u5236\u5230\u7a7a\u7684\u6570\u636e\u5377\u4e2d\u3002\u542f\u52a8\u5bb9\u5668\u7684\u65f6\u5019\u6307\u5b9a\u4e00\u4e2a\u4e0d\u5b58\u5728\u7684\u6570\u636e\u5377\uff0c\u4e00\u4e2a\u7a7a\u7684\u6570\u636e\u5377\u5efa\u4f1a\u88ab\u521b\u5efa\u3002 2. \u5982\u679cmount\u4e00\u4e2abind mount \u7c7b\u578b\u7684\u6570\u636e\u5377\u6216\u8005\u975e\u7a7a\u7684 volume \u5230\u5bb9\u5668\u4e2d\u7684\u4e00\u4e2a\u76ee\u5f55\uff0c\u5982\u679c\u8fd9\u4e2a\u76ee\u5f55\u4e2d\u5df2\u7ecf\u5b58\u5728\u4e00\u4e9b\u6587\u4ef6\uff0c\u90a3\u4e48\u8fd9\u4e9b\u6587\u4ef6\u5728\u6302\u8f7d\u5916\u90e8\u6570\u636e\u5377\u671f\u95f4\u5c06\u4e0d\u53ef\u89c1\uff0c\u4e5f\u4e0d\u80fd\u88ab\u4fee\u6539\uff0c\u9664\u975e\u79fb\u9664\u6302\u8f7d\u7684\u6570\u636e\u5377\u3002","title":"Storage overview"},{"location":"Docker/2018-05-23-storage-docker/#volumes","text":"Volumes \u5b58\u50a8\u5728\u5bbf\u4e3b\u673a\u5668\u7684\u6587\u4ef6\u7cfb\u7edf\u4e0a\u7684\u4e00\u5757\u533a\u57df\uff0c\u8fd9\u5757\u533a\u57df (/var/lib/docker/volumes) \u88abDocker\u7ba1\u7406\uff0c\u975eDocker\u7684\u8fdb\u7a0b\u4e0d\u80fd\u4fee\u6539\u8fd9\u5757\u533a\u57df\u3002\u5b98\u65b9\u63a8\u8350\u7684\u4e00\u79cd\u5b58\u50a8\u65b9\u5f0f\u3002 \u5178\u578b\u7684\u7528\u4f8b\uff1a - \u5728\u591a\u4e2a\u6b63\u5728\u8fd0\u884c\u7684\u5bb9\u5668\u4e4b\u95f4\u5171\u4eab\u6570\u636e - When the Docker host is not guaranteed to have a given directory or file structure. - \u8fdc\u7a0b\u5b58\u50a8\u5bb9\u5668\u7684\u6570\u636e\uff0c\u6bd4\u5982\u4e91\u63d0\u4f9b\u5546 - \u5907\u4efd\uff0c\u6062\u590d\uff0c\u8fc1\u79fb\u6570\u636e\u4ece\u4e00\u4e2aDocker\u4e3b\u673a\u5230\u53e6\u5916\u4e00\u4e2a\u4e3b\u673a","title":"Volumes"},{"location":"Docker/2018-05-23-storage-docker/#bind-mounts","text":"Bind mounts \u53ef\u4ee5\u5b58\u50a8\u5728\u5bbf\u4e3b\u673a\u5668\u7684\u6587\u4ef6\u7cfb\u7edf\u4e0a\u4efb\u4f55\u4f4d\u7f6e\u3002\u975eDocker\u7ebf\u7a0b\u53ef\u4ee5\u6216\u8005\u4efb\u610f\u4e00\u4e2aDocker \u5bb9\u5668\u53ef\u4ee5\u968f\u610f\u4fee\u6539\u3002\u4e00\u822c\u63a8\u8350\u5728\u5f00\u53d1\u7684\u8fc7\u7a0b\u4e2d\u4f7f\u7528\u8fd9\u4e2dmount \u65b9\u5f0f\u3002 \u5178\u578b\u7684\u7528\u4f8b\uff1a - \u5bbf\u4e3b\u673a\u5668\u4e0e\u5bb9\u5668\u4e4b\u95f4\u5171\u4eab\u914d\u7f6e\u6587\u4ef6 - \u5728\u5f00\u53d1\u73af\u5883\u5bbf\u4e3b\u673a\u5668\u4e0e\u5bb9\u5668\u5171\u4eabsource code\uff0c\u6216\u8005build artifacts - When the file or directory structure of the Docker host is guaranteed to be consistent with the bind mounts the containers require docker run -dt --name tomcat --mount type=bind,source=\"$(pwd)\"/app,target=/usr/local/tomcat/webapps/app -p 8080:8080 tomcat:7.0-alpine","title":"Bind mounts"},{"location":"Docker/2018-05-23-storage-docker/#tmpfs","text":"\u5b58\u50a8\u5728\u5bbf\u4e3b\u673a\u5668\u7684\u5185\u5b58\u4e2d\uff0c\u4e0d\u4f1a\u88ab\u5199\u5165\u5bbf\u4e3b\u7684\u6587\u4ef6\u7cfb\u7edf\u3002 \u5178\u578b\u7684\u7528\u4f8b\uff1a - \u57fa\u4e8e\u5b89\u5168\u8003\u8651\u6216\u8005\u6548\u7387\u7684\u56e0\u7d20\uff0c\u4e0d\u5e0c\u671b\u5c06\u6570\u636e\u4fdd\u5b58\u5230\u5bbf\u4e3b\u673a\u5668\u6216\u8005\u5bb9\u5668\u4e2d","title":"tmpfs"},{"location":"Docker/2018-05-23-storage-docker/#userful-commands","text":"//\u8fdb\u5165\u5bb9\u5668\u7684\u5185\u90e8\u67e5\u770b\u5bb9\u5668 docker exec -it <container-name> /bin/bash //\u5220\u9664\u6240\u6709\u6b63\u5728\u8fd0\u884c\u7684container docker rm $( docker stop $( docker ps -aq )) //\u6784\u5efa\u955c\u50cf docker build -t <image-name> . //\u5220\u9664none\u533f\u540d\u955c\u50cf docker rmi -f $( docker images | grep \"none\" | awk '{print$3}' ) //\u5220\u9664\u4ee5test\u5f00\u5934\u7684\u955c\u50cf docker rmi -f $( docker images | grep \"^test\" | awk '{print$3}' ) //\u5220\u9664\u6240\u6709\u7684\u6570\u636e\u5377 docker volume prune //\u67e5\u770b\u5bb9\u5668\u7684log docker logs -f -t YOUR_CONTAINER_NAME","title":"Userful Commands"},{"location":"Java/2018-01-21-springboot-java/","text":"Springboot handbook \u00b6 How to add custom logic when login success \u00b6 // Implements the ApplicationListener public class MyApplicationListener implements ApplicationListener < AuthenticationSuccessEvent > { // Write your own logic @Override public void onApplicationEvent ( AuthenticationSuccessEvent event ) { //TODO } } How to custom a AuthenticationProvider \u00b6 @Component public class StaticAuthenticationProvider implements AuthenticationProvider { private static final Logger logger = LoggerFactory . getLogger ( StaticAuthenticationProvider . class ); @Autowired private MyUserDetailService userDetailService ; // Override the authenticate function. @Override public Authentication authenticate ( Authentication authentication ) throws AuthenticationException { String name = authentication . getName (); UserDetails userDetails = userDetailService . loadUserByUsername ( name ); if ( Constants . IDA_ADMIN_USER_NAME . equals ( name ) && userDetails . isEnabled ()) { UsernamePasswordAuthenticationToken result = new UsernamePasswordAuthenticationToken ( userDetails , authentication . getCredentials (), userDetails . getAuthorities ()); result . setDetails ( authentication . getDetails ()); return result ; } else { return null ; } } // Override the supports function @Override public boolean supports ( Class <?> authentication ) { return authentication . equals ( UsernamePasswordAuthenticationToken . class ); } } Spring Junit TestCase Clear Context after each test method \u00b6 //put the annotation to class level @DirtiesContext ( classMode = ClassMode . AFTER_EACH_TEST_METHOD ) Springboot mockMvc \u4f7f\u7528HttpSession \u00b6 MockHttpSession httpSession = new MockHttpSession (); httpSession . setAttribute (); MvcResult result = mockMvc . perform ( put ( \"/aaa/bbb\" ). contentType ( MediaType . APPLICATION_JSON_UTF8 ). session ( httpSession ) . content ( json )) . andExpect ( status (). is2xxSuccessful ()). andReturn (); Springboot \u4f7f\u7528 @RequestBody \u63a5\u53d7 Ajax Body\u4e2d\u7684\u590d\u6742\u7c7b\u578b\u53c2\u6570 \u00b6 //\u5b9a\u4e49Controller\u4e2d\u7684@RequestBody\u7684\u53c2\u6570\u7c7b\u578b public class User { private String name ; private List < String > cars ; ... } //Js\u4e2d\u7684Ajax var data = { \"cars\" : [ \"car1\" , \"car2\" ] \uff0c \"name\" : \"tom\" }; $ . ajax ({ url : \"xxx\" , dataType : \"json\" , data : JSON . stringify ( data ), contentType : \"application/json\" , headers : { Accept : \"application/json\" }, success : function (){} }); //3 Controller\u4e2d\u53d6\u5f97Ajax Body\u4e2d\u7684\u6570\u636e public String test ( HttpSession httpSession , @RequestBody User payload ) { payload . getCars (); } Bootstrap Modal \u9047\u5230\u7684\u95ee\u9898 \u00b6 \u5f53\u5173\u95edmodal\u7684\u65f6\u5019\uff0c\u6e05\u9664modal\u4e0a\u7684\u6570\u636e $ ( \"#uploadTestData\" ). on ( 'hidden.bs.modal' , function ( e ) { $ ( this ). removeData (); $ ( \"#input#file\" ). val ( \"\" ) }); \u5f53Modal\u663e\u793a\u7684\u65f6\u5019\uff0c\u7ed9Modal\u4e0a\u7684\u5143\u7d20\u7ed1\u5b9a\u4e8b\u4ef6 $ ( \"#uploadTestData\" ). on ( 'shown.bs.modal' , function ( e ) { // }); Springboot \u56db\u79cd\u5e38\u7528\u7684\u4f20\u9012\u53c2\u6570\u7684\u65b9\u5f0f \u00b6 @PathVariable @RequestMapping ( value = \"/{user}\" , method = RequestMethod . GET ) public User getUser ( @PathVariable Long user ) { // ... } @RequestParam // GET /pets?color=red @RequestMapping ( value = \"/pets\" , method = RequestMethod . GET ) public User getUser ( @RequestParam String color ) { // ... } @MatrixVariable // GET GET /pets/42;q=11;r=22 @RequestMapping ( value = \"/cars\" , method = RequestMethod . GET ) public void findPet ( @PathVariable String petId , @MatrixVariable int q ) { // petId == 42 // q == 11 } @RequestHeader //Given request with headers: Host localhost : 8080 Accept text / html , application / xhtml + xml , application / xml ; q = 0.9 Accept - Language fr , en - gb ; q = 0.7 , en ; q = 0.3 Accept - Encoding gzip , deflate Accept - Charset ISO - 8859 - 1 , utf - 8 ; q = 0.7 ,*; q = 0.7 Keep - Alive 300 @GetMapping ( \"/demo\" ) public void handle ( @RequestHeader ( \"Accept-Encoding\" ) String encoding , @RequestHeader ( \"Keep-Alive\" ) long keepAlive ) { //... } Springboot FileUpload\u914d\u7f6e \u00b6 \u914d\u7f6eMultipartConfigElement @Bean public MultipartConfigElement multipartConfigElement () { MultipartConfigFactory factory = new MultipartConfigFactory (); return factory . createMultipartConfig (); } \u5728profile\u4e2d\u914d\u7f6e\u4e0a\u4f20\u6587\u4ef6\u7684\u5927\u5c0f spring.servlet.multipart.max-file-size: 50M spring.servlet.multipart.max-request-size: 50M \u53ef\u4ee5\u5728\u9875\u9762\u7aef\u9650\u5236\u4e0a\u4f20\u6587\u4ef6\u7684\u683c\u5f0f //\u914d\u7f6e\u6587\u4ef6\u4e0a\u4f20\u7684\u683c\u5f0f\u662fcsv < input type = \"file\" accept = \".csv,application/vnd.ms-excel\" id = \"uploadfile\" /> Springboot with Docker \u00b6 1. Write a docker file: \u00b6 FROM java:8u111-jdk-alpine COPY spring-cloud-eureka-0.0.1-SNAPSHOT.jar /usr/src/myapp/app.jar WORKDIR /usr/src/myapp CMD [ \"java\" , \"-jar\" , \"app.jar\" ] 2. Build an image \u00b6 docker build -f dockerfile -t waitplay/myImage:latest 3. Run the image \u00b6 //-e option \u8bbe\u7f6e\u8fd0\u884c\u65f6\u73af\u5883\u53d8\u91cf docker run -dt --name waitplay-server-1 -e \"spring.profiles.active=srv1\" -p 8761 :8761 waitplay/eureka-server","title":"Springboot Usage"},{"location":"Java/2018-01-21-springboot-java/#springboot-handbook","text":"","title":"Springboot handbook"},{"location":"Java/2018-01-21-springboot-java/#how-to-add-custom-logic-when-login-success","text":"// Implements the ApplicationListener public class MyApplicationListener implements ApplicationListener < AuthenticationSuccessEvent > { // Write your own logic @Override public void onApplicationEvent ( AuthenticationSuccessEvent event ) { //TODO } }","title":"How to add custom logic when login success"},{"location":"Java/2018-01-21-springboot-java/#how-to-custom-a-authenticationprovider","text":"@Component public class StaticAuthenticationProvider implements AuthenticationProvider { private static final Logger logger = LoggerFactory . getLogger ( StaticAuthenticationProvider . class ); @Autowired private MyUserDetailService userDetailService ; // Override the authenticate function. @Override public Authentication authenticate ( Authentication authentication ) throws AuthenticationException { String name = authentication . getName (); UserDetails userDetails = userDetailService . loadUserByUsername ( name ); if ( Constants . IDA_ADMIN_USER_NAME . equals ( name ) && userDetails . isEnabled ()) { UsernamePasswordAuthenticationToken result = new UsernamePasswordAuthenticationToken ( userDetails , authentication . getCredentials (), userDetails . getAuthorities ()); result . setDetails ( authentication . getDetails ()); return result ; } else { return null ; } } // Override the supports function @Override public boolean supports ( Class <?> authentication ) { return authentication . equals ( UsernamePasswordAuthenticationToken . class ); } }","title":"How to custom a AuthenticationProvider"},{"location":"Java/2018-01-21-springboot-java/#spring-junit-testcase-clear-context-after-each-test-method","text":"//put the annotation to class level @DirtiesContext ( classMode = ClassMode . AFTER_EACH_TEST_METHOD )","title":"Spring Junit TestCase Clear Context after each test method"},{"location":"Java/2018-01-21-springboot-java/#springboot-mockmvc-httpsession","text":"MockHttpSession httpSession = new MockHttpSession (); httpSession . setAttribute (); MvcResult result = mockMvc . perform ( put ( \"/aaa/bbb\" ). contentType ( MediaType . APPLICATION_JSON_UTF8 ). session ( httpSession ) . content ( json )) . andExpect ( status (). is2xxSuccessful ()). andReturn ();","title":"Springboot mockMvc \u4f7f\u7528HttpSession"},{"location":"Java/2018-01-21-springboot-java/#springboot-requestbody-ajax-body","text":"//\u5b9a\u4e49Controller\u4e2d\u7684@RequestBody\u7684\u53c2\u6570\u7c7b\u578b public class User { private String name ; private List < String > cars ; ... } //Js\u4e2d\u7684Ajax var data = { \"cars\" : [ \"car1\" , \"car2\" ] \uff0c \"name\" : \"tom\" }; $ . ajax ({ url : \"xxx\" , dataType : \"json\" , data : JSON . stringify ( data ), contentType : \"application/json\" , headers : { Accept : \"application/json\" }, success : function (){} }); //3 Controller\u4e2d\u53d6\u5f97Ajax Body\u4e2d\u7684\u6570\u636e public String test ( HttpSession httpSession , @RequestBody User payload ) { payload . getCars (); }","title":"Springboot \u4f7f\u7528 @RequestBody \u63a5\u53d7 Ajax Body\u4e2d\u7684\u590d\u6742\u7c7b\u578b\u53c2\u6570"},{"location":"Java/2018-01-21-springboot-java/#bootstrap-modal","text":"\u5f53\u5173\u95edmodal\u7684\u65f6\u5019\uff0c\u6e05\u9664modal\u4e0a\u7684\u6570\u636e $ ( \"#uploadTestData\" ). on ( 'hidden.bs.modal' , function ( e ) { $ ( this ). removeData (); $ ( \"#input#file\" ). val ( \"\" ) }); \u5f53Modal\u663e\u793a\u7684\u65f6\u5019\uff0c\u7ed9Modal\u4e0a\u7684\u5143\u7d20\u7ed1\u5b9a\u4e8b\u4ef6 $ ( \"#uploadTestData\" ). on ( 'shown.bs.modal' , function ( e ) { // });","title":"Bootstrap Modal \u9047\u5230\u7684\u95ee\u9898"},{"location":"Java/2018-01-21-springboot-java/#springboot","text":"@PathVariable @RequestMapping ( value = \"/{user}\" , method = RequestMethod . GET ) public User getUser ( @PathVariable Long user ) { // ... } @RequestParam // GET /pets?color=red @RequestMapping ( value = \"/pets\" , method = RequestMethod . GET ) public User getUser ( @RequestParam String color ) { // ... } @MatrixVariable // GET GET /pets/42;q=11;r=22 @RequestMapping ( value = \"/cars\" , method = RequestMethod . GET ) public void findPet ( @PathVariable String petId , @MatrixVariable int q ) { // petId == 42 // q == 11 } @RequestHeader //Given request with headers: Host localhost : 8080 Accept text / html , application / xhtml + xml , application / xml ; q = 0.9 Accept - Language fr , en - gb ; q = 0.7 , en ; q = 0.3 Accept - Encoding gzip , deflate Accept - Charset ISO - 8859 - 1 , utf - 8 ; q = 0.7 ,*; q = 0.7 Keep - Alive 300 @GetMapping ( \"/demo\" ) public void handle ( @RequestHeader ( \"Accept-Encoding\" ) String encoding , @RequestHeader ( \"Keep-Alive\" ) long keepAlive ) { //... }","title":"Springboot \u56db\u79cd\u5e38\u7528\u7684\u4f20\u9012\u53c2\u6570\u7684\u65b9\u5f0f"},{"location":"Java/2018-01-21-springboot-java/#springboot-fileupload","text":"\u914d\u7f6eMultipartConfigElement @Bean public MultipartConfigElement multipartConfigElement () { MultipartConfigFactory factory = new MultipartConfigFactory (); return factory . createMultipartConfig (); } \u5728profile\u4e2d\u914d\u7f6e\u4e0a\u4f20\u6587\u4ef6\u7684\u5927\u5c0f spring.servlet.multipart.max-file-size: 50M spring.servlet.multipart.max-request-size: 50M \u53ef\u4ee5\u5728\u9875\u9762\u7aef\u9650\u5236\u4e0a\u4f20\u6587\u4ef6\u7684\u683c\u5f0f //\u914d\u7f6e\u6587\u4ef6\u4e0a\u4f20\u7684\u683c\u5f0f\u662fcsv < input type = \"file\" accept = \".csv,application/vnd.ms-excel\" id = \"uploadfile\" />","title":"Springboot FileUpload\u914d\u7f6e"},{"location":"Java/2018-01-21-springboot-java/#springboot-with-docker","text":"","title":"Springboot with Docker"},{"location":"Java/2018-01-21-springboot-java/#1-write-a-docker-file","text":"FROM java:8u111-jdk-alpine COPY spring-cloud-eureka-0.0.1-SNAPSHOT.jar /usr/src/myapp/app.jar WORKDIR /usr/src/myapp CMD [ \"java\" , \"-jar\" , \"app.jar\" ]","title":"1. Write a docker file:"},{"location":"Java/2018-01-21-springboot-java/#2-build-an-image","text":"docker build -f dockerfile -t waitplay/myImage:latest","title":"2. Build an image"},{"location":"Java/2018-01-21-springboot-java/#3-run-the-image","text":"//-e option \u8bbe\u7f6e\u8fd0\u884c\u65f6\u73af\u5883\u53d8\u91cf docker run -dt --name waitplay-server-1 -e \"spring.profiles.active=srv1\" -p 8761 :8761 waitplay/eureka-server","title":"3. Run the image"},{"location":"Java/2018-01-21-themeleaf-java/","text":"\u6807\u51c6\u7684\u8868\u8fbe\u5f0f\u8bed\u6cd5 \u00b6 \u7b80\u5355\u7684\u8868\u8fbe\u5f0f \u53d8\u91cf\u8868\u8fbe\u5f0f\uff1a${...} \u9009\u62e9\u53d8\u91cf\u8868\u8fbe\u5f0f: *{...} *{...}\u7528\u6765\u53d6th:object=\"${...}\"\u4e2d\u7684\u53d8\u91cf \u6d88\u606f\u8868\u8fbe\u5f0f: #{...} URL\u8868\u8fbe\u5f0f\uff1a@{...} fragment\u8868\u8fbe\u5f0f:~{...} \u5b57\u9762\u503c \u6587\u672c: 'one', 'two', ... \u6570\u5b57: 0, 34, 3.0, 12.3, ... \u5e03\u5c14: true, false Null: null literal tokens one, sometext, main, ... \u6587\u672c\u8fd0\u7b97 + |The name is ${name}| \u6570\u5b66\u8fd0\u7b97 \u4e8c\u5143\u64cd\u4f5c\u7b26\uff1a +, -, *, /, % \u4e00\u5143\u64cd\u4f5c\u7b26: - \u5e03\u5c14\u8fd0\u7b97 and, or, !, not \u6bd4\u8f83\u8fd0\u7b97 <, >, >=, <= (gt, lt, ge, le), ==, != (eq, ne) \u6761\u4ef6\u8fd0\u7b97 if? then , (if)?(then):(else), \u9ed8\u8ba4\u503c: (value)?: (defaultvalur) Special tokens: No-Operation: _ Using Texts \u00b6 th:text th:utext \u5e38\u7528\u5bf9\u8c61\u7684\u5de5\u5177\u7c7b \u00b6 execInfo: information about the template being processed. \u00b6 messages: methods for obtaining externalized messages inside variables expressions, in the same way as they would be obtained using #{\u2026} syntax. \u00b6 uris: methods for escaping parts of URLs/URIs \u00b6 dates: methods for java.util.Date objects: formatting, component extraction, etc. \u00b6 calendars: analogous to #dates, but for java.util.Calendar objects. \u00b6 numbers: methods for formatting numeric objects. \u00b6 strings: methods for String objects: contains, startsWith, prepending/appending, etc. \u00b6 objects: methods for objects in general. \u00b6 bools: methods for boolean evaluation. \u00b6 arrays: methods for arrays. \u00b6 lists: methods for lists. \u00b6 sets: methods for sets. \u00b6 maps: methods for maps. \u00b6 aggregates: methods for creating aggregates on arrays or collections. \u00b6 ids: methods for dealing with id attributes that might be repeated (for example, as a result of an iteration). \u00b6 Fragment \u00b6 th:include, th:insert \u6761\u4ef6\u8868\u8fbe\u5f0f \u00b6 <tr th:class=\"${row.even}? 'even' : 'odd'\"> ... </tr> \u8fed\u4ee3\u8868\u8fbe\u5f0f (th\uff1aeach) \u00b6 <tr th:each=\"prod : ${prods}\"> <td th:text=\"${prod.name}\">Onions</td> <td th:text=\"${prod.price}\">2.41</td> <td th:text=\"${prod.inStock}? #{true} : #{false}\">yes</td> </tr> \u53ef\u4ee5\u83b7\u53d6\u8fed\u4ee3\u8fc7\u7a0b\u4e2d\u7684\u4e00\u4e9b\u72b6\u6001 \u00b6 The current iteration index, starting with 0. This is the index property. The current iteration index, starting with 1. This is the count property. The total amount of elements in the iterated variable. This is the size property. The iter variable for each iteration. This is the current property. Whether the current iteration is even or odd. These are the even/odd boolean properties. Whether the current iteration is the first one. This is the first boolean property. Whether the current iteration is the last one. This is the last boolean property. <tr th:each=\"prod,iterStat : ${prods}\" th:class=\"${iterStat.odd}? 'odd'\"> <td th:text=\"${prod.name}\">Onions</td> <td th:text=\"${prod.price}\">2.41</td> <td th:text=\"${prod.inStock}? #{true} : #{false}\">yes</td> </tr> \u6761\u4ef6\u8868\u8fbe\u5f0f \u00b6 th:if, th:unless,th:switch \u5bf9\u4e8eth:switch\u8bed\u53e5\uff0c\u4e00\u65e6\u5176\u4e2d\u7684\u4e00\u4e2ath:case\u6ee1\u8db3\u6761\u4ef6\uff0c\u90a3\u4e48\u540e\u7eed\u7684\u6240\u6709th:case\u7684\u503c\u90fd\u5c06\u88ab\u8ba1\u7b97\u4e3afalse,\u9ed8\u8ba4\u7684\u8bed\u53e5\u7528th:case=\"*\"\u8868\u793a\u3002 <div th:switch=\"${user.role}\"> <p th:case=\"'admin'\">User is an administrator</p> <p th:case=\"#{roles.manager}\">User is a manager</p> <p th:case=\"*\">User is some other thing</p> </div> Thymeleaf\u5e03\u5c40 \u00b6 th:insert, th:replace,th:include (\u4ecethymeleaf3.0\u5f00\u59cb\uff0c\u4e0d\u63a8\u8350\u4f7f\u7528) \u00b6 \"{templatename::selector}\" \uff1atemplatename\u6307\u7684\u662fhtml\u7684\u540d\u5b57\uff0cselector\u6307\u7684\u662ffragment\u7684\u540d\u5b57(th:fragment=\"copy\") \u53ef\u4ee5\u901a\u8fc7selector\u9009\u62e9\u5668\u4f7f\u7528th:fragment \u00b6 <div id=\"copy-section\"> &copy; 2011 The Good Thymes Virtual Grocery </div> <body> ... <div th:insert=\"~{footer :: #copy-section}\"></div> </body> th:insert\u548cth:replace,th:include\u7684\u4e0d\u540c\u70b9 \u00b6 th:insert is the simplest: it will simply insert the specified fragment as the body of its host tag. th:replace actually replaces its host tag with the specified fragment. th:include is similar to th:insert, but instead of inserting the fragment it only inserts the contents of this fragment. \u53c2\u8003 \u00b6 Thymeleaf Doc","title":"Themeleaf"},{"location":"Java/2018-01-21-themeleaf-java/#_1","text":"\u7b80\u5355\u7684\u8868\u8fbe\u5f0f \u53d8\u91cf\u8868\u8fbe\u5f0f\uff1a${...} \u9009\u62e9\u53d8\u91cf\u8868\u8fbe\u5f0f: *{...} *{...}\u7528\u6765\u53d6th:object=\"${...}\"\u4e2d\u7684\u53d8\u91cf \u6d88\u606f\u8868\u8fbe\u5f0f: #{...} URL\u8868\u8fbe\u5f0f\uff1a@{...} fragment\u8868\u8fbe\u5f0f:~{...} \u5b57\u9762\u503c \u6587\u672c: 'one', 'two', ... \u6570\u5b57: 0, 34, 3.0, 12.3, ... \u5e03\u5c14: true, false Null: null literal tokens one, sometext, main, ... \u6587\u672c\u8fd0\u7b97 + |The name is ${name}| \u6570\u5b66\u8fd0\u7b97 \u4e8c\u5143\u64cd\u4f5c\u7b26\uff1a +, -, *, /, % \u4e00\u5143\u64cd\u4f5c\u7b26: - \u5e03\u5c14\u8fd0\u7b97 and, or, !, not \u6bd4\u8f83\u8fd0\u7b97 <, >, >=, <= (gt, lt, ge, le), ==, != (eq, ne) \u6761\u4ef6\u8fd0\u7b97 if? then , (if)?(then):(else), \u9ed8\u8ba4\u503c: (value)?: (defaultvalur) Special tokens: No-Operation: _","title":"\u6807\u51c6\u7684\u8868\u8fbe\u5f0f\u8bed\u6cd5"},{"location":"Java/2018-01-21-themeleaf-java/#using-texts","text":"th:text th:utext","title":"Using Texts"},{"location":"Java/2018-01-21-themeleaf-java/#_2","text":"","title":"\u5e38\u7528\u5bf9\u8c61\u7684\u5de5\u5177\u7c7b"},{"location":"Java/2018-01-21-themeleaf-java/#execinfo-information-about-the-template-being-processed","text":"","title":"execInfo: information about the template being processed."},{"location":"Java/2018-01-21-themeleaf-java/#messages-methods-for-obtaining-externalized-messages-inside-variables-expressions-in-the-same-way-as-they-would-be-obtained-using-syntax","text":"","title":"messages: methods for obtaining externalized messages inside variables expressions, in the same way as they would be obtained using #{\u2026} syntax."},{"location":"Java/2018-01-21-themeleaf-java/#uris-methods-for-escaping-parts-of-urlsuris","text":"","title":"uris: methods for escaping parts of URLs/URIs"},{"location":"Java/2018-01-21-themeleaf-java/#dates-methods-for-javautildate-objects-formatting-component-extraction-etc","text":"","title":"dates: methods for java.util.Date objects: formatting, component extraction, etc."},{"location":"Java/2018-01-21-themeleaf-java/#calendars-analogous-to-dates-but-for-javautilcalendar-objects","text":"","title":"calendars: analogous to #dates, but for java.util.Calendar objects."},{"location":"Java/2018-01-21-themeleaf-java/#numbers-methods-for-formatting-numeric-objects","text":"","title":"numbers: methods for formatting numeric objects."},{"location":"Java/2018-01-21-themeleaf-java/#strings-methods-for-string-objects-contains-startswith-prependingappending-etc","text":"","title":"strings: methods for String objects: contains, startsWith, prepending/appending, etc."},{"location":"Java/2018-01-21-themeleaf-java/#objects-methods-for-objects-in-general","text":"","title":"objects: methods for objects in general."},{"location":"Java/2018-01-21-themeleaf-java/#bools-methods-for-boolean-evaluation","text":"","title":"bools: methods for boolean evaluation."},{"location":"Java/2018-01-21-themeleaf-java/#arrays-methods-for-arrays","text":"","title":"arrays: methods for arrays."},{"location":"Java/2018-01-21-themeleaf-java/#lists-methods-for-lists","text":"","title":"lists: methods for lists."},{"location":"Java/2018-01-21-themeleaf-java/#sets-methods-for-sets","text":"","title":"sets: methods for sets."},{"location":"Java/2018-01-21-themeleaf-java/#maps-methods-for-maps","text":"","title":"maps: methods for maps."},{"location":"Java/2018-01-21-themeleaf-java/#aggregates-methods-for-creating-aggregates-on-arrays-or-collections","text":"","title":"aggregates: methods for creating aggregates on arrays or collections."},{"location":"Java/2018-01-21-themeleaf-java/#ids-methods-for-dealing-with-id-attributes-that-might-be-repeated-for-example-as-a-result-of-an-iteration","text":"","title":"ids: methods for dealing with id attributes that might be repeated (for example, as a result of an iteration)."},{"location":"Java/2018-01-21-themeleaf-java/#fragment","text":"th:include, th:insert","title":"Fragment"},{"location":"Java/2018-01-21-themeleaf-java/#_3","text":"<tr th:class=\"${row.even}? 'even' : 'odd'\"> ... </tr>","title":"\u6761\u4ef6\u8868\u8fbe\u5f0f"},{"location":"Java/2018-01-21-themeleaf-java/#theach","text":"<tr th:each=\"prod : ${prods}\"> <td th:text=\"${prod.name}\">Onions</td> <td th:text=\"${prod.price}\">2.41</td> <td th:text=\"${prod.inStock}? #{true} : #{false}\">yes</td> </tr>","title":"\u8fed\u4ee3\u8868\u8fbe\u5f0f (th\uff1aeach)"},{"location":"Java/2018-01-21-themeleaf-java/#_4","text":"The current iteration index, starting with 0. This is the index property. The current iteration index, starting with 1. This is the count property. The total amount of elements in the iterated variable. This is the size property. The iter variable for each iteration. This is the current property. Whether the current iteration is even or odd. These are the even/odd boolean properties. Whether the current iteration is the first one. This is the first boolean property. Whether the current iteration is the last one. This is the last boolean property. <tr th:each=\"prod,iterStat : ${prods}\" th:class=\"${iterStat.odd}? 'odd'\"> <td th:text=\"${prod.name}\">Onions</td> <td th:text=\"${prod.price}\">2.41</td> <td th:text=\"${prod.inStock}? #{true} : #{false}\">yes</td> </tr>","title":"\u53ef\u4ee5\u83b7\u53d6\u8fed\u4ee3\u8fc7\u7a0b\u4e2d\u7684\u4e00\u4e9b\u72b6\u6001"},{"location":"Java/2018-01-21-themeleaf-java/#_5","text":"th:if, th:unless,th:switch \u5bf9\u4e8eth:switch\u8bed\u53e5\uff0c\u4e00\u65e6\u5176\u4e2d\u7684\u4e00\u4e2ath:case\u6ee1\u8db3\u6761\u4ef6\uff0c\u90a3\u4e48\u540e\u7eed\u7684\u6240\u6709th:case\u7684\u503c\u90fd\u5c06\u88ab\u8ba1\u7b97\u4e3afalse,\u9ed8\u8ba4\u7684\u8bed\u53e5\u7528th:case=\"*\"\u8868\u793a\u3002 <div th:switch=\"${user.role}\"> <p th:case=\"'admin'\">User is an administrator</p> <p th:case=\"#{roles.manager}\">User is a manager</p> <p th:case=\"*\">User is some other thing</p> </div>","title":"\u6761\u4ef6\u8868\u8fbe\u5f0f"},{"location":"Java/2018-01-21-themeleaf-java/#thymeleaf","text":"","title":"Thymeleaf\u5e03\u5c40"},{"location":"Java/2018-01-21-themeleaf-java/#thinsert-threplacethinclude-thymeleaf30","text":"\"{templatename::selector}\" \uff1atemplatename\u6307\u7684\u662fhtml\u7684\u540d\u5b57\uff0cselector\u6307\u7684\u662ffragment\u7684\u540d\u5b57(th:fragment=\"copy\")","title":"th:insert,  th:replace,th:include (\u4ecethymeleaf3.0\u5f00\u59cb\uff0c\u4e0d\u63a8\u8350\u4f7f\u7528)"},{"location":"Java/2018-01-21-themeleaf-java/#selectorthfragment","text":"<div id=\"copy-section\"> &copy; 2011 The Good Thymes Virtual Grocery </div> <body> ... <div th:insert=\"~{footer :: #copy-section}\"></div> </body>","title":"\u53ef\u4ee5\u901a\u8fc7selector\u9009\u62e9\u5668\u4f7f\u7528th:fragment"},{"location":"Java/2018-01-21-themeleaf-java/#thinsertthreplacethinclude","text":"th:insert is the simplest: it will simply insert the specified fragment as the body of its host tag. th:replace actually replaces its host tag with the specified fragment. th:include is similar to th:insert, but instead of inserting the fragment it only inserts the contents of this fragment.","title":"th:insert\u548cth:replace,th:include\u7684\u4e0d\u540c\u70b9"},{"location":"Java/2018-01-21-themeleaf-java/#_6","text":"Thymeleaf Doc","title":"\u53c2\u8003"},{"location":"Java/2018-02-22-basicknowledge-java/","text":"Java common knowledge \u00b6 Java secure coding rules \u00b6 Injection attacks Leaking sensitive data Sensitive data Credit Card or Payment Card Industry (PCI) Information Private Personal Information (PPI) Protected Healthy Information (HIPAA) Private/Confidential data Public data Denial-of-service Attacks (DoS) Resource-exhaustion attacks Remove temporary files before termination Release resources when they are no longer needed Don't let external processes block on IO buffers Perform proper cleanup at program termination Safely extract files from ZipInputStream Don't use finalizers Don't leak memory Don't exhaust heap space Avoid memory and resource leaks during serialization Use thread pool to enable graceful degradation of service during traffic bursts Don't execute interdependent tasks in a bounded thread pool Concurrency-related attacks that include thread deadlock, thread starvation, and race conditions. Use private final lock objects to synchronize classes that may interact with untrusted code. Don't synchronize on objects that may be reused. Avoid deadlock by requesting and releasing locks in the same order Ensure actively held locks are released on exceptional conditions Don't perform operations that can block while holding a lock Avoid client-side locking when using classed that don't commit to their locking strategy Ensure that threads performing blocking operations can be terminated Ensure that tasks submitted to a thread pool are interruptible Algorthmic attacks (such as hash function) inject values that force worst-case conditions to exit Bandwith-consumption attacks that consume all available network bandwith. Prevent XML Injection Basic in small words \u00b6 CountDownLatch, Semaphore VS CyclicBarrier CountDownLatch \u7ef4\u62a4\u4e00\u4e2a\u539f\u5b50\u7684\u8ba1\u6570\u5668\uff0c\u8be5\u8ba1\u6570\u5668\u53ea\u80fd\u51cf\uff0c\u4e0d\u80fd\u88ab\u91cd\u7f6e\u3002\u901a\u8fc7\u5b83\u53ef\u4ee5\u4f7f\u5f53\u524d\u7684\u7ebf\u7a0b\u5904\u4e8eawait\u72b6\u6001\u3002\u76f4\u5230\u5176\u4ed6\u7684\u7ebf\u7a0b\u8c03\u7528countDown\u65b9\u6cd5\u4f7f\u8ba1\u6570\u5668\u53d8\u4e3a0.\u6b64\u65f6\u88ab\u963b\u585e\u7684\u65b9\u6cd5\u4f1a\u7ee7\u7eed\u8fd0\u884c\u3002 CyclicBarrier \u548c CountDownLatch\u7c7b\u4f3c\uff0c\u4e0d\u540c\u4e4b\u5904\u5728\u4e8eCyclicBarrier\u7684\u503c\u88ab\u83b7\u53d6\u4e4b\u540e\u53ef\u4ee5\u91ca\u653e\uff0c\u5e76\u4e0d\u50cfCountDownLatch\u4e00\u6837\u53ea\u80fd\u51cf\u3002\u4e00\u822c\u7528\u4e8e\u9650\u5236\u67d0\u4e9b\u8d44\u6e90\u6700\u591a\u540c\u65f6\u88ab\u591a\u5c11\u4e2a\u7ebf\u7a0b\u8bbf\u95ee\u3002 CyclicBarrier \u548c CountDownLatch\u7c7b\u4f3c\uff0c\u53ea\u662f\u5b83\u7684\u8ba1\u6570\u5668\u53ef\u4ee5\u88ab\u91cd\u7f6e\u3002 Java semaphores - Control and maintain the number of access the thread. Java volatile \u5b9e\u73b0\u539f\u7406 \u7f13\u5b58\u4e00\u81f4\u6027\u534f\u8bae(MESI)\u3002\u5f53CPU\u5728\u5199\u6570\u636e\u65f6\uff0c\u5982\u679c\u53d1\u73b0\u64cd\u4f5c\u7684\u53d8\u91cf\u662f\u5171\u4eab\u53d8\u91cf\uff0c\u5219\u4f1a\u901a\u77e5\u5176\u4ed6\u7684CPU\u8be5\u53d8\u91cf\u7684\u7f13\u5b58\u5df2\u7ecf\u65e0\u6548\u3002\u5176\u4ed6\u7684CPU\u6536\u5230\u8be5\u901a\u77e5\u540e\u5c31\u4f1a\u518d\u6b21\u4ece\u4e3b\u5b58\u540c\u6b65\u6539\u53d8\u91cf\u7684\u503c\u5230\u81ea\u5df1\u7684\u7f13\u5b58\u3002 Display curency NumberFormat Class //Format currency Locale loc = Locale . UK ; NumberFormat nf = NumberFormat . getCurrencyInstance ( loc ); double money = 1_000_000.00d ; nf . format ( money ); Deadlock, Livelock, Starvation Deaklock: A situation where one thread is blocked while waiting for a conditon in a second thread that is waiting on the first thread Livelock: A condition where a thread is locked because of an operation that is continuously failing Starvation: A situation where a thread cann't access a resource because higher priority threads are continually accessing the resource java.util.concurrent collections ConcurrentHashMap -- HashMap ConcurrentSkipListMap -- TreeMap CopyOnWriteArrayList -- ArrayList Deque \u7c7b As is a double-end Queue FIFO (add() and remove()) As is a Stack LIFO (push() and pop()) Comparable \u63a5\u53e3 \u8986\u5199compareTo\u65b9\u6cd5 \u53ea\u80fd\u5305\u542b\u4e00\u79cd\u6bd4\u8f83\u7b56\u7565 Comparator \u63a5\u53e3 \u4f7f\u7528compare\u6765\u6bd4\u8f83 \u53ef\u4ee5\u521b\u5efa\u591a\u4e2aComparator\u7c7b \u521b\u5efa\u591a\u4e2a\u6392\u5e8f\u7684\u9009\u9879 \u63a5\u53e3 \u548c\u62bd\u8c61\u7c7b\u7c7b\u4f3c\uff0c\u53ea\u5305\u542bpublic abstract \u65b9\u6cd5 \u62bd\u8c61\u7684\u65b9\u6cd5\u5fc5\u987b\u88ab\u5b9e\u73b0 \u53ef\u4ee5\u5305\u542bconstant \u5b57\u6bb5 \u53ef\u4ee5\u6307\u5411\u4e00\u4e2a\u5f15\u7528 \u5305\u542bdefault \u65b9\u6cd5 \uff08form java8\uff09 \u63a5\u53e3\u53ef\u4ee5extends\u63a5\u53e3 default \u65b9\u6cd5 in \u63a5\u53e3 \u88abdefault\u4fee\u9970 \u5177\u6709\u65b9\u6cd5\u4f53 static \u65b9\u6cd5 in \u63a5\u53e3 functional \u63a5\u53e3 \u53ea\u5305\u542b\u4e00\u4e2a\u62bd\u8c61\u65b9\u6cd5\u7684\u63a5\u53e3 \u62bd\u8c61\u7c7b \u62bd\u8c61\u7c7b\u4e0d\u80fd\u88ab\u5b9e\u4f8b\u5316 \u62bd\u8c61\u7c7b\u4e2d\u7684\u62bd\u8c61\u65b9\u6cd5\u4e0d\u80fd\u6709\u65b9\u6cd5\u4f53 \u62bd\u8c61\u7c7b\u7684\u65b9\u6cd5\u5728\u5b50\u7c7b\u4e2d\u5fc5\u987b\u88ab\u8986\u76d6 \u62bd\u8c61\u7c7b\u4e2d\u53ef\u4ee5\u5305\u542b\u975e\u62bd\u8c61\u65b9\u6cd5 \u5f53\u4e00\u4e2a\u7c7b\u7ee7\u627f\u4e00\u4e2a\u62bd\u8c61\u7c7b\u7684\u65f6\u5019\uff0c\u8981\u4e48\u8fd9\u4e2a\u7c7b\u4e5f\u662f\u4e00\u4e2a\u62bd\u8c61\u7c7b\uff0c\u8981\u4e48\u5b9e\u73b0\u7236\u7c7b\u4e2d\u7684\u6240\u6709\u62bd\u8c61\u65b9\u6cd5 final \u5173\u952e\u5b57 \u53ef\u4ee5\u4fee\u9970\u7c7b\uff0c\u7c7b\u4e0d\u80fd\u88ab\u7ee7\u627f \u53ef\u4ee5\u4fee\u9970\u65b9\u6cd5\uff0c \u65b9\u6cd5\u4e0d\u80fd\u88ab\u8986\u76d6 \u53ef\u4ee5\u4fee\u9970\u672c\u5730\u53d8\u91cf\uff0c\u53d8\u91cf\u7684\u5f15\u7528\u4e0d\u80fd\u88ab\u4fee\u6539\uff0c\u4f46\u662f\u53d8\u91cf\u7684\u5185\u5bb9\u53ef\u4ee5\u4fee\u6539\u3002 \u53ef\u4ee5\u4fee\u9970\u53c2\u6570 public, default, protected, private public - anywhere protected - same class, package and subclass in other package default - same class and package private - same class \u5982\u4f55\u5c06\u4e00\u4e2a\u53ef\u53d8\u7c7b\u8f6c\u5316\u4e3a\u4e0d\u53ef\u53d8\u7684\u7c7b \u53bb\u6389\u6240\u6709\u7684setter\u65b9\u6cd5 \u6240\u6709\u7684\u5b57\u6bb5\u90fd\u7528 private final \u4fee\u9970 \u7c7b\u540d\u7528final\u4fee\u9970 Interface VS Abstract Class An interface is similar to an abstract class, except that: Methods are implicitly abstract(except default methods) A class does not extend it, but implements it A class may implement more than one interface All abstract methods from the interface must be implemented by the class. Exception VS Error Exception are subclasses of Throwable. There are three main types of Throwable\uff1a Error Typically an unrecoverable external error Unchecked RuntimeException Typically caused by a programming mistake Unchecked Exception Recoverable error Checked (Must be caught or thrown) Best Practices \u00b6 Catch the actual exception thrown, not the superclass type. Examine the exception to find out the exact problem so you can recover cleanly. You do not need to catch every exception. A programming mistake should not be handled. It must be fixed. Ask yourself, \"Does this exception represent behavior I want the program to recover from?\" Synchronized\u539f\u7406 \u4fee\u9970\u666e\u901a\u65b9\u6cd5 \u901a\u8fc7 ACC_SYNCHRONIZED\u6807\u8bc6\uff0c\u5982\u679c\u8bbe\u7f6e\u8be5\u6807\u8bc6\uff0c\u5219\u9700\u8981\u5148\u83b7\u53d6monitor\uff0c\u83b7\u53d6\u6210\u529f\u624d\u6267\u884c\u65b9\u6cd5\u3002\u65b9\u6cd5\u6267\u884c\u5b8c\u4e86\u91ca\u653emonitor\u3002 \u4fee\u9970\u9759\u6001\u65b9\u6cd5 \u4fee\u9970\u4ee3\u7801\u5757 JVM\u7684\u4e24\u4e2a\u6307\u4ee4monitorenter\u548cmonitorexit. Synchronized\u7684\u8bed\u4e49\u5e95\u5c42\u662f\u901a\u8fc7\u4e00\u4e2amonitor\u7684\u5bf9\u8c61\u6765\u5b8c\u6210\uff0c\u5176\u5b9ewait/notify\u7b49\u65b9\u6cd5\u4e5f\u4f9d\u8d56\u4e8emonitor\u5bf9\u8c61\uff0c\u53ea\u6709\u5728\u540c\u6b65\u7684\u5757\u6216\u8005\u65b9\u6cd5\u4e2d\u624d\u80fd\u8c03\u7528wait/notify\u7b49\u65b9\u6cd5\uff0c\u5426\u5219\u4f1a\u629b\u51fajava.lang.IllegalMonitorStateException\u7684\u5f02\u5e38. Java \u4e2d\u7684Clone \u514b\u9686\u5bf9\u8c61\u7684\u65f6\u5019\u5982\u679c\u9700\u8981\u6df1\u514b\u9686\uff0c\u90a3\u4e48\u8be5\u5bf9\u8c61\u4e2d\u7684\u5f15\u7528\u7c7b\u578b\u4e5f\u9700\u8981\u5b9e\u73b0Cloneable\u63a5\u53e3\u3002\u5982\u679c\u8be5\u7c7b\u4e2d\u7684\u5f15\u7528\u5bf9\u8c61\u6ca1\u6709\u5b9e\u73b0Cloneable\u63a5\u53e3\uff0c\u90a3\u4e48\u514b\u9686\u7684\u5bf9\u8c61\u4e0e\u539f\u5bf9\u8c61\u62e5\u6709\u76f8\u540c\u7684\u5f15\u7528\u7c7b\u578b\u7684\u5b57\u6bb5\u3002\u53ef\u4ee5\u901a\u8fc7\u5e8f\u5217\u5316\u7684\u624b\u6bb5\u5b9e\u73b0\u5bf9\u8c61\u7684\u6df1\u5ea6\u514b\u9686\u3002 LinkedHashMap\u7684\u5e94\u7528 \u53ef\u4ee5\u4fdd\u8bc1\u904d\u5386\u65f6\u53d6\u6570\u636e\u7684\u987a\u5e8f\u548c\u63d2\u5165\u987a\u5e8f\u662f\u4e00\u81f4\u7684\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\u904d\u5386\u7684\u6548\u7387\u6bd4Hashmap\u4f4e\u3002\u5f53Hashmap\u7684\u5bb9\u91cf\u5f88\u5927\uff0c\u5b9e\u9645\u5b58\u653e\u7684\u6570\u636e\u5f88\u5c11\u65f6\uff0c\u6548\u7387\u6bd4Hashmap\u9ad8\u3002 Java 8 \u4e2d\u57fa\u672c\u7684\u6570\u636e\u7c7b\u578b byte, char, int, float, double, long ,short, boolean Arrays.sort \u4e0e Collections.sort Arrays.sort\u53ef\u4ee5\u5bf9\u57fa\u672c\u7c7b\u578b\u7684\u6570\u7ec4\u8fdb\u884c\u6392\u5e8f\uff0c\u4e5f\u53ef\u4ee5\u5bf9\u5b9e\u73b0Comparable\u63a5\u53e3\u7684\u96c6\u5408\u8fdb\u884c\u6392\u5e8f\u3002 Arrays\u53ef\u4ee5\u4f7f\u7528sort\u65b9\u6cd5\u4ee5\u53caparallelSort\u65b9\u6cd5\u5bf9\u96c6\u5408\u8fdb\u884c\u6392\u5e8f\u3002\u4f7f\u7528DualPivotQuicksort(\u53cc\u8f74\u53cc\u5411)\u6392\u5e8f\uff0c\u57fa\u672c\u601d\u8def\u662f\u8bbe\u7f6e\u4e24\u4e2a\u53c2\u8003\u70b9pivot1\uff0cpivot2\uff0c\u5176\u4e2dpivot1\u4e00\u5b9a\u8981\u5c0f\u4e8epivot2\uff0c\u7136\u540e\u5c06\u5f85\u6392\u5e8f\u7684\u6570\u7ec4\u5206\u4e3a4\u90e8\u5206 [x<=pivot1], [pivot1 =pivot2], [\u672a\u6392\u5e8f]\uff0c\u7136\u540e\u5bf9\u524d\u4e09\u4e2a\u533a\u95f4\u5206\u522b\u9012\u5f52\u6392\u5e8f\u3002 Collections.sort\u53ea\u80fd\u5bf9\u5b9e\u73b0Comparable\u63a5\u53e3\u7684\u96c6\u5408\u8fdb\u884c\u6392\u5e8f\u3002 Java\u7684\u7c7b\u52a0\u8f7d\u673a\u5236 Bootstrap ClassLoader \u6700\u9876\u5c42\u7684\u52a0\u8f7d\u7c7b\uff0c\u4e3b\u8981\u52a0\u8f7d\u6838\u5fc3\u7c7b\u5e93\uff0c%JRE_HOME%\\lib\u4e0b\u7684rt.jar\u3001resources.jar\u3001charsets.jar\u548cclass\u7b49\u3002\u53e6\u5916\u9700\u8981\u6ce8\u610f\u7684\u662f\u53ef\u4ee5\u901a\u8fc7\u542f\u52a8jvm\u65f6\u6307\u5b9a-Xbootclasspath\u548c\u8def\u5f84\u6765\u6539\u53d8Bootstrap ClassLoader\u7684\u52a0\u8f7d\u76ee\u5f55\u3002\u901a\u8fc7\u73af\u5883\u53d8\u91cfsun.boot.class.path\u67e5\u627e\u5bf9\u5e94\u7684\u6587\u4ef6\u3002 Extension ClassLoader \u6269\u5c55\u7684\u7c7b\u52a0\u8f7d\u5668\uff0c\u52a0\u8f7d\u76ee\u5f55%JRE_HOME%\\lib\\ext\u76ee\u5f55\u4e0b\u7684jar\u5305\u548cclass\u6587\u4ef6\u3002\u8fd8\u53ef\u4ee5\u52a0\u8f7d-D java.ext.dirs\u9009\u9879\u6307\u5b9a\u7684\u76ee\u5f55\u3002\u901a\u8fc7\u73af\u5883\u53d8\u91cfsun.boot.class.path\u67e5\u627e\u5bf9\u5e94\u7684\u6587\u4ef6\u3002\u901a\u8fc7\u73af\u5883\u53d8\u91cfjava.ext.dirs \u67e5\u627e\u5bf9\u5e94\u7684\u6587\u4ef6\u3002 App ClassLoader \u4e5f\u79f0\u4e3aSystemAppClass \u8d1f\u8d23\u52a0\u8f7d\u5f53\u524d\u5e94\u7528\u7684classpath\u7684\u6240\u6709\u7c7b\u3002 \u901a\u8fc7\u73af\u5883\u53d8\u91cfjava.ext.dirs \u67e5\u627e\u5bf9\u5e94\u7684\u6587\u4ef6\u3002 Custom ClassLoader \u4e00\u770b\u4f60\u5c31\u61c2\uff0c\u8d85\u8be6\u7ec6java\u4e2d\u7684ClassLoader\u8be6\u89e3 Java\u52a0\u8f7d\u7c7b\u7684\u65b9\u6cd5 \u4ece\u672c\u5730\u7cfb\u7edf\u76f4\u63a5\u83b7\u5f97 \u901a\u8fc7\u7f51\u7edc\u4e0b\u8f7d.class\u6587\u4ef6 \u4ecezip\uff0cjar\u4e2d\u52a0\u8f7d.class\u6587\u4ef6 \u4ece\u6570\u636e\u5e93\u4e2d\u63d0\u53d6.class\u6587\u4ef6 \u5c06java\u6e90\u7801\u52a8\u6001\u7f16\u8bd1\u4e3a.class\u6587\u4ef6 \u547d\u4ee4\u884c\u542f\u52a8\u5e94\u7528\u7684\u65f6\u5019\u7531JVM\u521d\u59cb\u5316\u52a0\u8f7d \u901a\u8fc7Class.forName() \u901a\u8fc7ClassLoader.loadClass() Java\u7c7b\u4ec0\u4e48\u65f6\u5019\u4f1a\u88ab\u521d\u59cb\u5316 new \u8be5\u7c7b\u4e00\u4e2a\u5b9e\u4f8b \u8bbf\u95ee\u67d0\u4e2a\u7c7b\u6216\u8005\u63a5\u53e3\u7684\u9759\u6001\u53d8\u91cf \u8c03\u7528\u7c7b\u7684\u9759\u6001\u65b9\u6cd5 \u53cd\u5c04 \u521d\u59cb\u5316\u5b50\u7c7b JVM\u542f\u52a8\u65f6\u6307\u660e\u7684\u542f\u52a8\u7c7b \u5f3a\u5f15\u7528\uff0c\u8f6f\u5f15\u7528\uff0c\u5f31\u5f15\u7528\uff0c\u865a\u5f15\u7528 \u5f3a\u5f15\u7528\u7684\u5bf9\u8c61\u5982\u679c\u4e0d\u4e3anull\uff0c\u90a3\u4e48GC\u4e0d\u4f1a\u53bb\u56de\u6536\u6b64\u5bf9\u8c61 \u8f6f\u5f15\u7528\u7684\u5bf9\u8c61\u5f53jvm\u5185\u5b58\u4e0d\u8db3\u7684\u65f6\u5019\uff0cGC\u4f1a\u53bb\u56de\u6536\u8fd9\u4e9b\u5bf9\u8c61 \u5f31\u5f15\u7528\u7684\u5bf9\u8c61\u65e0\u8bbajvm\u662f\u5426\u5145\u8db3\uff0c\u5728GC\u7684\u65f6\u5019\u5747\u4f1a\u88ab\u56de\u6536 \u865a\u5f15\u7528\u4e5f\u79f0\u5e7d\u7075\u5f15\u7528\uff0c\u4e00\u4e2a\u5bf9\u8c61\u662f\u5426\u6709\u865a\u5f15\u7528\uff0c\u4e0d\u4f1a\u5bf9\u5176\u751f\u547d\u5468\u671f\u6709\u5f71\u54cd\u3002\u4e3a\u4e00\u4e2a\u5bf9\u8c61\u8bbe\u7f6e\u4e00\u4e2a\u865a\u5f15\u7528\u5173\u8054\u7684\u552f\u4e00\u76ee\u7684\u662f\u5e0c\u671b\u8be5\u5bf9\u8c61\u88ab\u6536\u96c6\u5668\u56de\u6536\u7684\u65f6\u5019\u6536\u5230\u4e00\u4e2a\u7cfb\u7edf\u901a\u77e5\u3002 final, finally\u4e0efinalize final \u4fee\u9970\u7c7b\uff0c\u53d8\u91cf\uff0c\u65b9\u6cd5\u3002\u4fee\u9970\u7c7b\u7684\u65f6\u5019\uff0c\u8868\u660e\u8fd9\u4e2a\u7c7b\u4e0d\u5141\u8bb8\u88ab\u7ee7\u627f\uff0c\u4f8b\u5982String\u7c7b\u3002\u4fee\u9970\u65b9\u6cd5\u7684\u65f6\u5019\u8868\u793a\u5728\u5b50\u7c7b\u4e2d\u4e0d\u5141\u8bb8\u88ab\u8986\u5199\uff0cprivate\u5173\u952e\u5b57\u4fee\u9970\u7684\u65b9\u6cd5\u9ed8\u8ba4\u662ffinal\u7684\u3002\u4fee\u9970\u53d8\u91cf\u7684\u65f6\u5019\u5206\u4e24\u79cd\u60c5\u51b5\uff0c\u4fee\u9970\u57fa\u672c\u7c7b\u578b\u7684\u65f6\u5019\uff0c\u8868\u793a\u5176\u6570\u503c\u4e00\u65e6\u521d\u59cb\u5316\u5c31\u4e0d\u5141\u8bb8\u4fee\u6539\u3002\u4fee\u9970\u5f15\u7528\u7c7b\u578b\u7684\u65f6\u5019\uff0c\u8868\u793a\u5176\u521d\u59cb\u5316\u4e4b\u540e\u4e0d\u80fd\u518d\u6307\u5411\u53e6\u5916\u4e00\u4e2a\u5bf9\u8c61\u3002 finally \u4e00\u822c\u4e0etry\uff0ccatch,finally \u505a\u5f02\u5e38\u5904\u7406\u3002\u4f46\u662ffinally\u5757\u4e2d\u7684\u8bed\u53e5\u4e0d\u4e00\u5b9a\u4f1a\u6267\u884c\u3002\u6709\u4ee5\u4e0b\u51e0\u79cd\u60c5\u51b5\uff1a try\u4e2d\u7684\u4ee3\u7801\u8fd8\u672a\u6267\u884c\u5230\u7a0b\u5e8f\u5c31\u9000\u51fa\u3002 try\u4e2d\u7684\u4ee3\u7801\u6267\u884c\u4e4b\u540e\uff0c\u865a\u62df\u673a\u505c\u6b62\u3002\u4f8b\u5982\u8c03\u7528 java System.exit(0); . \u7a0b\u5e8f\u6267\u884c\u5230try\u6216\u8005catch\u5757\u7684\u65f6\u5019\uff0c\u7ebf\u7a0b\u88ab\u4e2d\u65ad\u6216\u8005\u7ec8\u6b62\u3002 finalize\u662fObject\u7684\u65b9\u6cd5, \u53ef\u4ee5\u5728\u5783\u573e\u6536\u96c6\u5668\u5bf9\u6b64\u5bf9\u8c61\u8fdb\u884c\u56de\u6536\u7684\u65f6\u5019\u505a\u4e00\u4e9b\u5904\u7406\u5de5\u4f5c\u3002 protected void finalize () throws Throwable { } HashMap \u4e0e Hashtable HashMap\u975e\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c HashMap\u7684key\u548cvalue\u90fd\u53ef\u4ee5\u662fnull\u3002 /* Parameters: hash hash for key key the key value the value to put onlyIfAbsent if true, don't change existing value evict if false, the table is in creation mode. Returns: previous value, or null if none */ final V putVal ( int hash , K key , V value , boolean onlyIfAbsent , boolean evict ) { Node < K , V >[] tab ; Node < K , V > p ; int n , i ; // \u5982\u679ctable\u4e3a\u7a7a\uff0c\u6216\u8005\u8fd8\u6ca1\u6709\u5143\u7d20\u65f6\uff0c\u5219\u6269\u5bb9 if (( tab = table ) == null || ( n = tab . length ) == 0 ) n = ( tab = resize ()). length ; // \u5982\u679c\u9996\u7ed3\u70b9\u503c\u4e3a\u7a7a\uff0c\u5219\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u9996\u7ed3\u70b9\u3002 // \u6ce8\u610f\uff1a(n - 1) & hash\u624d\u662f\u771f\u6b63\u7684hash\u503c\uff0c\u4e5f\u5c31\u662f\u5b58\u50a8\u5728table\u4f4d\u7f6e\u7684index\u3002\u57281.6\u4e2d\u662f\u5c01\u88c5\u6210indexFor\u51fd\u6570\u3002 if (( p = tab [ i = ( n - 1 ) & hash ]) == null ) tab [ i ] = newNode ( hash , key , value , null ); else { // \u5230\u8fd9\u513f\u4e86\uff0c\u5c31\u8bf4\u660e\u78b0\u649e\u4e86\uff0c\u90a3\u4e48\u5c31\u8981\u5f00\u59cb\u5904\u7406\u78b0\u649e\u3002 Node < K , V > e ; K k ; // \u5982\u679c\u5728\u9996\u7ed3\u70b9\u4e0e\u6211\u4eec\u5f85\u63d2\u5165\u7684\u5143\u7d20\u6709\u76f8\u540c\u7684hash\u548ckey\u503c\uff0c\u5219\u5148\u8bb0\u5f55\u3002 if ( p . hash == hash && (( k = p . key ) == key || ( key != null && key . equals ( k )))) e = p ; else if ( p instanceof TreeNode ) // \u5982\u679c\u9996\u7ed3\u70b9\u7684\u7c7b\u578b\u662f\u7ea2\u9ed1\u6811\u7c7b\u578b\uff0c\u5219\u6309\u7167\u7ea2\u9ed1\u6811\u65b9\u6cd5\u6dfb\u52a0\u8be5\u5143\u7d20 e = (( TreeNode < K , V >) p ). putTreeVal ( this , tab , hash , key , value ); else { // \u5230\u8fd9\u4e00\u6b65\uff0c\u8bf4\u660e\u9996\u7ed3\u70b9\u7c7b\u578b\u4e3a\u94fe\u8868\u7c7b\u578b\u3002 for ( int binCount = 0 ; ; ++ binCount ) { // \u5982\u679c\u904d\u5386\u5230\u672b\u5c3e\u65f6\uff0c\u5148\u5728\u5c3e\u90e8\u8ffd\u52a0\u8be5\u5143\u7d20\u7ed3\u70b9\u3002 if (( e = p . next ) == null ) { p . next = newNode ( hash , key , value , null ); // \u5f53\u904d\u5386\u7684\u7ed3\u70b9\u6570\u76ee\u5927\u4e8e8\u65f6\uff0c\u5219\u91c7\u53d6\u6811\u5316\u7ed3\u6784\u3002 if ( binCount >= TREEIFY_THRESHOLD - 1 ) // -1 for 1st treeifyBin ( tab , hash ); break ; } // \u5982\u679c\u627e\u5230\u4e0e\u6211\u4eec\u5f85\u63d2\u5165\u7684\u5143\u7d20\u5177\u6709\u76f8\u540c\u7684hash\u548ckey\u503c\u7684\u7ed3\u70b9\uff0c\u5219\u505c\u6b62\u904d\u5386\u3002\u6b64\u65f6e\u5df2\u7ecf\u8bb0\u5f55\u4e86\u8be5\u7ed3\u70b9 if ( e . hash == hash && (( k = e . key ) == key || ( key != null && key . equals ( k )))) break ; p = e ; } } // \u8868\u660e\uff0c\u8bb0\u5f55\u5230\u5177\u6709\u76f8\u540c\u5143\u7d20\u7684\u7ed3\u70b9 if ( e != null ) { // existing mapping for key V oldValue = e . value ; if (! onlyIfAbsent || oldValue == null ) //\u5224\u65ad\u662f\u5426\u7528\u65b0\u503c\u8986\u76d6\u65e7\u503c e . value = value ; afterNodeAccess ( e ); // \u8fd9\u4e2a\u662f\u7a7a\u51fd\u6570\uff0c\u53ef\u4ee5\u7531\u7528\u6237\u6839\u636e\u9700\u8981\u8986\u76d6 return oldValue ; } } ++ modCount ; // \u5f53\u7ed3\u70b9\u6570+1\u5927\u4e8ethreshold\u65f6\uff0c\u5219\u8fdb\u884c\u6269\u5bb9 if (++ size > threshold ) resize (); afterNodeInsertion ( evict ); // \u8fd9\u4e2a\u662f\u7a7a\u51fd\u6570\uff0c\u53ef\u4ee5\u7531\u7528\u6237\u6839\u636e\u9700\u8981\u8986\u76d6 return null ; } Hashtable \u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0cHashtable\u7684key\u6216\u8005value\u4e0d\u80fd\u662fnull\u3002 /* * \u6dfb\u52a0\u5143\u7d20\u7684\u65f6\u5019\u4f7f\u7528synchronized\u9501 * \u8fd4\u56de\u4e4b\u524d\u5bf9\u5e94\u4f4d\u7f6e\u7684\u503c\uff0c\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u8fd4\u56denull */ public synchronized V put ( K key , V value ) { // Make sure the value is not null if ( value == null ) { throw new NullPointerException (); } // Makes sure the key is not already in the hashtable. Entry <?,?> tab [] = table ; int hash = key . hashCode (); int index = ( hash & 0x7FFFFFFF ) % tab . length ; @SuppressWarnings ( \"unchecked\" ) Entry < K , V > entry = ( Entry < K , V >) tab [ index ]; //\u904d\u5386\u6574\u4e2atable\uff0c\u770b\u662f\u5426\u5b58\u5728 for (; entry != null ; entry = entry . next ) { if (( entry . hash == hash ) && entry . key . equals ( key )) { V old = entry . value ; entry . value = value ; return old ; } } //\u4e0d\u5b58\u5728\u5219\u63d2\u5165\u5143\u7d20 addEntry ( hash , key , value , index ); return null ; } List\u4e0eSet\u7684\u533a\u522b List\u4e2d\u7684\u5143\u7d20\u662f\u6709\u5e8f\u7684\uff0c\u53ef\u4ee5\u901a\u8fc7index\u51c6\u786e\u7684\u67e5\u627e\u5185\u90e8\u7684\u5143\u7d20\u3002 List\u4e2d\u7684\u5143\u7d20\u53ef\u4ee5\u91cd\u590d\uff0cSet\u4e2d\u7684\u5143\u7d20\u4e0d\u80fd\u91cd\u590d\u3002List\u4e2d\u53ef\u4ee5\u5141\u8bb8\u6dfb\u52a0\u591a\u4e2anull\u5143\u7d20\u3002Set\u4e2d\u81f3\u591a\u53ef\u4ee5\u6709\u4e00\u4e2anull\u5143\u7d20\u3002 List\u63d0\u4f9b\u4e00\u4e2a\u7279\u6b8a\u7684\u8fed\u4ee3ListIterator\uff0c\u53ef\u4ee5\u63d2\u5165\uff0c\u4fee\u6539\uff0c\u4ee5\u53ca\u63d0\u4f9b\u53cc\u5411\u904d\u5386\u7684\u80fd\u529b\u3002 HashSet\u662f\u5982\u4f55\u4fdd\u8bc1\u4e0d\u91cd\u590d\u7684 HashSet\u7528HashMap\u5b58\u50a8\u5143\u7d20 \u5c06\u5143\u7d20\u4e2d\u4f5c\u4e3aHashMap\u7684key \u4e0d\u662f\u7ebf\u7a0b\u5b89\u5168\u7684 // Dummy value to associate with an Object in the backing Map private static final Object PRESENT = new Object (); public boolean add ( E e ) { return map . put ( e , PRESENT )== null ; } Use condition in ant script <!-- Execute task by different operation system --> <project name= \"My Project\" default= \"package_designer_without_report_v3\" basedir= \".\" > <condition property= \"isWindows\" > <os family= \"windows\" /> </condition> <condition property= \"isLinux\" > <os family= \"unix\" /> </condition> <target name= \"operateInWindows\" if= \"isWindows\" > <echo message= \"operate in windows\" /> </target> <target name= \"operateInLinux\" if= \"isLinux\" > <echo message= \"operate in linux\" /> </target> </project> Java\u4e2dequals()\u65b9\u6cd5\u4e0e\"==\"\u7684\u533a\u522b? \"==\" \u5bf9\u4e8e\u5f15\u7528\u7c7b\u578b\uff0c\u6bd4\u8f83\u7684\u662f\u5bf9\u8c61\u7684\u5730\u5740\uff0c\u5bf9\u4e8e\u57fa\u672c\u7c7b\u578b\uff0c\u6bd4\u8f83\u7684\u662f\u5b57\u9762\u503c\u3002 equals\u65b9\u6cd5\u662fObject\u57fa\u7c7b\u7684\u65b9\u6cd5\uff0c\u5982\u679c\u5b50\u7c7b\u6ca1\u6709\u8986\u5199\u8be5\u65b9\u6cd5\uff0c\u9ed8\u8ba4\u7684\u662f\u6bd4\u8f83\u5bf9\u8c61\u7684\u5730\u5740\u3002\u4e00\u822c\u8986\u5199\u6b64\u65b9\u6cd5\u7684\u65f6\u5019\u540c\u65f6\u8986\u5199hashCode\u65b9\u6cd5\u3002 Java\u62bd\u8c61\u7c7b\u53ef\u4ee5\u6709\u5b9e\u4f53\u65b9\u6cd5\u4e48\uff1f \u53ef\u4ee5. \u5217\u4e3eJava\u4e2d\u62bd\u8c61\u7c7b\u548c\u63a5\u53e3\u7684\u76f8\u540c\u70b9\uff1f \u90fd\u662f\u4e0a\u5c42\u7684\u62bd\u8c61 \u90fd\u53ef\u4ee5\u5305\u542b\u62bd\u8c61\u65b9\u6cd5 \u90fd\u4e0d\u80fd\u88ab\u5b9e\u4f8b\u5316 \u5217\u4e3eJava\u4e2d\u62bd\u8c61\u7c7b\u548c\u63a5\u53e3\u7684\u4e0d\u540c\u70b9\uff1f \u62bd\u8c61\u7c7b\u4e2d\u53ef\u4ee5\u5305\u542b\u62bd\u8c61\u65b9\u6cd5\u548c\u5b9e\u4f53\u65b9\u6cd5\uff0c\u63a5\u53e3\u4e2d\u53ea\u80fd\u5305\u542b\u62bd\u8c61\u65b9\u6cd5, \u4ecejdk1.8\u5f00\u59cb\uff0c\u63a5\u53e3\u4e2d\u4e5f\u53ef\u4ee5\u5305\u542bstatic\u548cdefault\u65b9\u6cd5 public interface MyImpl { /** * by default, abstract */ public void move (); public abstract void drink (); /** * From jdk1.8 */ public static void say () { } /** * From jdk1.8 */ public default void eat () { } } \u4e00\u4e2a\u7c7b\u53ea\u80fd\u7ee7\u627f\u4e00\u4e2a\u62bd\u8c61\u7c7b\uff0c\u4f46\u662f\u53ef\u4ee5\u5b9e\u73b0\u591a\u4e2a\u63a5\u53e3 \u5982\u679c\u4e00\u4e2a\u7c7b\u4e0d\u80fd\u5b9e\u73b0\u7236\u7c7b\u4e2d\u6240\u6709\u7684\u62bd\u8c61\u65b9\u6cd5\uff0c\u90a3\u4e48\u5b83\u672c\u8eab\u5fc5\u987b\u662f\u62bd\u8c61\u7c7b Java\u63a5\u53e3\u4e2d\u58f0\u660e\u7684\u53d8\u91cf\u9ed8\u8ba4\u90fd\u662ffinal\u7684\uff0c\u62bd\u8c61\u7c7b\u53ef\u4ee5\u5305\u542b\u975efinal\u7684\u53d8\u91cf Java\u63a5\u53e3\u4e2d\u7684\u6210\u5458\u51fd\u6570\u9ed8\u8ba4\u662fpublic\u7684\uff0c\u62bd\u8c61\u7c7b\u7684\u6210\u5458\u51fd\u6570\u53ef\u4ee5\u662fprivate\uff0cprotected\u6216\u8005\u662fpublic ArrayList\u548cLinkedlist\u7684\u533a\u522b\uff1f ArrayList\u67e5\u627e\u901f\u5ea6\u5feb\uff0cLinked\u5728\u5217\u8868\u4e2d\u63d2\u5165\uff0c\u5220\u9664\u64cd\u4f5c\u901f\u5ea6\u5feb ArrayList\u5360\u636e\u7684\u7a7a\u95f4\u66f4\u5c11 Comparable\u548cComparator\u63a5\u53e3\u662f\u5e72\u4ec0\u4e48\u7684\uff1f Comparable\u63a5\u53e3\u53ea\u63d0\u4f9b\u4e00\u4e2acompareTo\u65b9\u6cd5 Comparator\u63a5\u53e3\u63d0\u4f9bcompare\uff08\uff09\u548cequals\uff08\uff09\u4e24\u4e2a\u65b9\u6cd5 Thread.sleep()\u65b9\u6cd5\u548cThread.yield()\uff0cObject.wait()\u65b9\u6cd5\u7684\u76f8\u540c\u70b9\u548c\u533a\u522b\uff1f \u4e00\u4e2a\u7ebf\u7a0b\u8c03\u7528yield()\u65b9\u6cd5\u8868\u660e\u8fd9\u4e2a\u7ebf\u7a0b\u76ee\u524d\u6ca1\u6709\u7279\u522b\u91cd\u8981\u7684\u4e8b\u60c5\u505a\u4e86\uff0c\u5982\u679c\u6709\u5176\u4ed6\u7684\u7ebf\u7a0b\u6216\u8005\u8fdb\u7a0b\u9700\u8981\u8fd0\u884c\uff0c\u4f18\u5148\u4ed6\u4eec\u8fd0\u884c\uff0c\u5982\u679c\u6ca1\u6709\u5176\u4ed6\u7684\u7ebf\u7a0b\u6216\u8005\u8fdb\u7a0b\u9700\u8981\u8fd0\u884c\uff0c\u90a3\u4e48\u8c03\u7528yield()\u65b9\u6cd5\u7684\u7ebf\u7a0b\u5c31\u7ee7\u7eed\u8fd0\u884c\u3002 \u4e00\u4e2a\u7ebf\u7a0b\u8c03\u7528sleep()\u65b9\u6cd5\u4f1a\u4f7f\u8be5\u7ebf\u7a0b\u4f11\u7720\u6307\u5b9a\u7684\u65f6\u95f4\uff0c\u5728\u6b64\u671f\u95f4\uff0c\u4e0d\u4f1a\u4e22\u5931\u4efb\u4f55\u76d1\u89c6\u5668(\u9501)\u7684\u4fe1\u606f\uff0c\u5982\u679c\u6709\u5176\u4ed6\u7684\u7ebf\u7a0b\u6216\u8005\u8fdb\u7a0b\u9700\u8981\u8fd0\u884c\uff0c\u4ed6\u4eec\u53ef\u4ee5\u83b7\u5f97\u7cfb\u7edf\u8d44\u6e90\u8fd0\u884c\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u90a3\u4e48CPU\u6709\u53ef\u80fd\u5904\u4e8e\u7a7a\u95f2\u72b6\u6001\u3002 \u5f53\u8c03\u7528wait()\u65b9\u6cd5\u7684\u65f6\u5019\uff0c\u7ebf\u7a0b\u4f1a\u4e22\u5f03\u5bf9\u8c61\u9501\uff0c\u8fdb\u5165\u8be5\u5bf9\u8c61\u6c60\u7684\u7b49\u5f85\u6c60\u4e2d\uff0c\u5f53\u5176\u4ed6\u7684\u7ebf\u7a0b\u8c03\u7528nofity()\u6216\u5219notifyAll()\u7684\u65f6\u5019\u91cd\u65b0\u53bb\u7ade\u4e89\u8be5\u5bf9\u8c61\u7684\u9501\u3002 notify()\u65b9\u6cd5\u548cnotifyAll()\u65b9\u6cd5\u7684\u533a\u522b \u9501\u6c60\uff1a\u5047\u8bbe\u7ebf\u7a0bA\u5df2\u7ecf\u62e5\u6709\u67d0\u4e2a\u5bf9\u8c61\u7684\u9501\uff0c\u800c\u5176\u4ed6\u7ebf\u7a0b\u60f3\u8c03\u7528\u8be5\u5bf9\u8c61\u7684\u67d0\u4e2asynchronized\u65b9\u6cd5\uff0c\u90a3\u4e48\u5fc5\u987b\u5148\u83b7\u5f97\u8be5\u5bf9\u8c61\u7684\u9501\u624d\u53ef\u4ee5\uff0c\u7531\u4e8e\u6b64\u65f6\u9501\u5df2\u7ecf\u88ab\u7ebf\u7a0bA\u5360\u6709\uff0c\u6240\u4ee5\u8fd9\u4e9b\u7ebf\u7a0b\u4f1a\u8fdb\u5165\u8be5\u5bf9\u8c61\u7684\u9501\u6c60\u4e2d\u3002 \u7b49\u5f85\u6c60: \u5047\u8bbe\u7ebf\u7a0bA\u8c03\u7528\u67d0\u4e2a\u5bf9\u8c61\u7684wait()\u65b9\u6cd5\uff0c\u7ebf\u7a0bA\u5c31\u4f1a\u91ca\u653e\u8be5\u5bf9\u8c61\u7684\u9501\uff0c\u8fdb\u5165\u5bf9\u8c61\u7684\u7b49\u5f85\u6c60\u3002\u7b49\u5f85\u6c60\u4e2d\u7684\u7ebf\u7a0b\u4e0d\u4f1a\u53c2\u4e0e\u7ade\u4e89\u8be5\u5bf9\u8c61\u7684\u9501\u3002 notify()\u65b9\u6cd5\u53ea\u4f1a\u5524\u9192\u4e00\u4e2a\u7ebf\u7a0b\u8fdb\u5165\u9501\u6c60\uff0c\u5047\u5982\u6709\u591a\u4e2a\u7ebf\u7a0b\u90fd\u5728\u7b49\u5f85\u83b7\u53d6\u67d0\u4e2a\u5bf9\u8c61\u7684\u9501\uff0c\u90a3\u4e48\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u6839\u636e\u5b9e\u73b0\u6311\u9009\u4e00\u4e2a\u7ebf\u7a0b\u6765\u5524\u9192\u3002\u800cnotifyAll()\u4f1a\u5524\u9192\u6240\u6709\u7684\u7b49\u5f85\u7ebf\u7a0b\u8fdb\u5165\u9501\u6c60\uff0c\u8fd9\u4e9b\u7ebf\u7a0b\u4e4b\u95f4\u5f7c\u6b64\u7ade\u4e89\u53bb\u83b7\u53d6\u5bf9\u8c61\u4e0a\u7684\u9501\u3002notify()\u65b9\u6cd5\u4f1a\u5bfc\u81f4\u6b7b\u9501\uff0c\u800cnotifyAll()\u65b9\u6cd5\u4e0d\u4f1a\u3002 public void productFood () { synchronized ( this . lock ) { while ( this . foodTotal == 5 ) { try { this . lock . wait (); } catch ( InterruptedException e ) { e . printStackTrace (); } } /* * \u6b64\u65f6\u6240\u6709\u7684\u7ebf\u7a0b\u90fd\u5904\u4e8e\u7b49\u5f85\u72b6\u6001\uff0c\u5982\u679c\u73b0\u5728foodTotal = 4\uff0c * \u6267\u884c\u8fc7\u4e0b\u4e00\u53e5\u540efoodTotal=5,\u5982\u679c\u4f7f\u7528notify\u65b9\u6cd5\u6b63\u597d\u5524\u9192\u7684\u662f\u4e00\u4e2a\u7ebf\u7a0b\u8c03\u7528productFood()\u65b9\u6cd5\uff0c\u90a3\u4e48\u8be5\u7ebf\u7a0b\u5c31\u4f1a\u8fdb\u5165wait()\u72b6\u6001\u3002\u6b64\u65f6\u6ca1\u6709\u5176\u4ed6\u7684\u7ebf\u7a0b\u662frunning\u72b6\u6001\uff0c\u53ef\u4ee5\u8c03\u7528nofify()\u65b9\u6cd5\u5524\u9192\u5176\u4ed6\u7ebf\u7a0b\uff0c\u4e8e\u662f\u5c31\u53d1\u751f\u4e86\u6b7b\u9501\u3002 */ foodTotal = foodTotal + 1 ; //this.lock.notifyAll(); this . lock . notify (); } } \u8fde\u7eed\u8c03\u7528\u591a\u6b21Thread\u7684start()\u65b9\u6cd5\u4f1a\u600e\u4e48\u6837\uff1f \u4f1a\u629b\u51faThread\u7684\u72b6\u6001\u5f02\u5e38 public synchronized void start () { /** *A zero status value corresponds to state \"NEW\". \u65b0\u521b\u5efa\u7684Thread\u7684status==0 */ if ( threadStatus != 0 ) throw new IllegalThreadStateException (); ... } \u53c2\u8003\u94fe\u63a5 \u00b6 \u53c2\u8003\u94fe\u63a51","title":"Java Common Knowledge"},{"location":"Java/2018-02-22-basicknowledge-java/#java-common-knowledge","text":"","title":"Java common knowledge"},{"location":"Java/2018-02-22-basicknowledge-java/#java-secure-coding-rules","text":"Injection attacks Leaking sensitive data Sensitive data Credit Card or Payment Card Industry (PCI) Information Private Personal Information (PPI) Protected Healthy Information (HIPAA) Private/Confidential data Public data Denial-of-service Attacks (DoS) Resource-exhaustion attacks Remove temporary files before termination Release resources when they are no longer needed Don't let external processes block on IO buffers Perform proper cleanup at program termination Safely extract files from ZipInputStream Don't use finalizers Don't leak memory Don't exhaust heap space Avoid memory and resource leaks during serialization Use thread pool to enable graceful degradation of service during traffic bursts Don't execute interdependent tasks in a bounded thread pool Concurrency-related attacks that include thread deadlock, thread starvation, and race conditions. Use private final lock objects to synchronize classes that may interact with untrusted code. Don't synchronize on objects that may be reused. Avoid deadlock by requesting and releasing locks in the same order Ensure actively held locks are released on exceptional conditions Don't perform operations that can block while holding a lock Avoid client-side locking when using classed that don't commit to their locking strategy Ensure that threads performing blocking operations can be terminated Ensure that tasks submitted to a thread pool are interruptible Algorthmic attacks (such as hash function) inject values that force worst-case conditions to exit Bandwith-consumption attacks that consume all available network bandwith. Prevent XML Injection","title":"Java secure coding rules"},{"location":"Java/2018-02-22-basicknowledge-java/#basic-in-small-words","text":"CountDownLatch, Semaphore VS CyclicBarrier CountDownLatch \u7ef4\u62a4\u4e00\u4e2a\u539f\u5b50\u7684\u8ba1\u6570\u5668\uff0c\u8be5\u8ba1\u6570\u5668\u53ea\u80fd\u51cf\uff0c\u4e0d\u80fd\u88ab\u91cd\u7f6e\u3002\u901a\u8fc7\u5b83\u53ef\u4ee5\u4f7f\u5f53\u524d\u7684\u7ebf\u7a0b\u5904\u4e8eawait\u72b6\u6001\u3002\u76f4\u5230\u5176\u4ed6\u7684\u7ebf\u7a0b\u8c03\u7528countDown\u65b9\u6cd5\u4f7f\u8ba1\u6570\u5668\u53d8\u4e3a0.\u6b64\u65f6\u88ab\u963b\u585e\u7684\u65b9\u6cd5\u4f1a\u7ee7\u7eed\u8fd0\u884c\u3002 CyclicBarrier \u548c CountDownLatch\u7c7b\u4f3c\uff0c\u4e0d\u540c\u4e4b\u5904\u5728\u4e8eCyclicBarrier\u7684\u503c\u88ab\u83b7\u53d6\u4e4b\u540e\u53ef\u4ee5\u91ca\u653e\uff0c\u5e76\u4e0d\u50cfCountDownLatch\u4e00\u6837\u53ea\u80fd\u51cf\u3002\u4e00\u822c\u7528\u4e8e\u9650\u5236\u67d0\u4e9b\u8d44\u6e90\u6700\u591a\u540c\u65f6\u88ab\u591a\u5c11\u4e2a\u7ebf\u7a0b\u8bbf\u95ee\u3002 CyclicBarrier \u548c CountDownLatch\u7c7b\u4f3c\uff0c\u53ea\u662f\u5b83\u7684\u8ba1\u6570\u5668\u53ef\u4ee5\u88ab\u91cd\u7f6e\u3002 Java semaphores - Control and maintain the number of access the thread. Java volatile \u5b9e\u73b0\u539f\u7406 \u7f13\u5b58\u4e00\u81f4\u6027\u534f\u8bae(MESI)\u3002\u5f53CPU\u5728\u5199\u6570\u636e\u65f6\uff0c\u5982\u679c\u53d1\u73b0\u64cd\u4f5c\u7684\u53d8\u91cf\u662f\u5171\u4eab\u53d8\u91cf\uff0c\u5219\u4f1a\u901a\u77e5\u5176\u4ed6\u7684CPU\u8be5\u53d8\u91cf\u7684\u7f13\u5b58\u5df2\u7ecf\u65e0\u6548\u3002\u5176\u4ed6\u7684CPU\u6536\u5230\u8be5\u901a\u77e5\u540e\u5c31\u4f1a\u518d\u6b21\u4ece\u4e3b\u5b58\u540c\u6b65\u6539\u53d8\u91cf\u7684\u503c\u5230\u81ea\u5df1\u7684\u7f13\u5b58\u3002 Display curency NumberFormat Class //Format currency Locale loc = Locale . UK ; NumberFormat nf = NumberFormat . getCurrencyInstance ( loc ); double money = 1_000_000.00d ; nf . format ( money ); Deadlock, Livelock, Starvation Deaklock: A situation where one thread is blocked while waiting for a conditon in a second thread that is waiting on the first thread Livelock: A condition where a thread is locked because of an operation that is continuously failing Starvation: A situation where a thread cann't access a resource because higher priority threads are continually accessing the resource java.util.concurrent collections ConcurrentHashMap -- HashMap ConcurrentSkipListMap -- TreeMap CopyOnWriteArrayList -- ArrayList Deque \u7c7b As is a double-end Queue FIFO (add() and remove()) As is a Stack LIFO (push() and pop()) Comparable \u63a5\u53e3 \u8986\u5199compareTo\u65b9\u6cd5 \u53ea\u80fd\u5305\u542b\u4e00\u79cd\u6bd4\u8f83\u7b56\u7565 Comparator \u63a5\u53e3 \u4f7f\u7528compare\u6765\u6bd4\u8f83 \u53ef\u4ee5\u521b\u5efa\u591a\u4e2aComparator\u7c7b \u521b\u5efa\u591a\u4e2a\u6392\u5e8f\u7684\u9009\u9879 \u63a5\u53e3 \u548c\u62bd\u8c61\u7c7b\u7c7b\u4f3c\uff0c\u53ea\u5305\u542bpublic abstract \u65b9\u6cd5 \u62bd\u8c61\u7684\u65b9\u6cd5\u5fc5\u987b\u88ab\u5b9e\u73b0 \u53ef\u4ee5\u5305\u542bconstant \u5b57\u6bb5 \u53ef\u4ee5\u6307\u5411\u4e00\u4e2a\u5f15\u7528 \u5305\u542bdefault \u65b9\u6cd5 \uff08form java8\uff09 \u63a5\u53e3\u53ef\u4ee5extends\u63a5\u53e3 default \u65b9\u6cd5 in \u63a5\u53e3 \u88abdefault\u4fee\u9970 \u5177\u6709\u65b9\u6cd5\u4f53 static \u65b9\u6cd5 in \u63a5\u53e3 functional \u63a5\u53e3 \u53ea\u5305\u542b\u4e00\u4e2a\u62bd\u8c61\u65b9\u6cd5\u7684\u63a5\u53e3 \u62bd\u8c61\u7c7b \u62bd\u8c61\u7c7b\u4e0d\u80fd\u88ab\u5b9e\u4f8b\u5316 \u62bd\u8c61\u7c7b\u4e2d\u7684\u62bd\u8c61\u65b9\u6cd5\u4e0d\u80fd\u6709\u65b9\u6cd5\u4f53 \u62bd\u8c61\u7c7b\u7684\u65b9\u6cd5\u5728\u5b50\u7c7b\u4e2d\u5fc5\u987b\u88ab\u8986\u76d6 \u62bd\u8c61\u7c7b\u4e2d\u53ef\u4ee5\u5305\u542b\u975e\u62bd\u8c61\u65b9\u6cd5 \u5f53\u4e00\u4e2a\u7c7b\u7ee7\u627f\u4e00\u4e2a\u62bd\u8c61\u7c7b\u7684\u65f6\u5019\uff0c\u8981\u4e48\u8fd9\u4e2a\u7c7b\u4e5f\u662f\u4e00\u4e2a\u62bd\u8c61\u7c7b\uff0c\u8981\u4e48\u5b9e\u73b0\u7236\u7c7b\u4e2d\u7684\u6240\u6709\u62bd\u8c61\u65b9\u6cd5 final \u5173\u952e\u5b57 \u53ef\u4ee5\u4fee\u9970\u7c7b\uff0c\u7c7b\u4e0d\u80fd\u88ab\u7ee7\u627f \u53ef\u4ee5\u4fee\u9970\u65b9\u6cd5\uff0c \u65b9\u6cd5\u4e0d\u80fd\u88ab\u8986\u76d6 \u53ef\u4ee5\u4fee\u9970\u672c\u5730\u53d8\u91cf\uff0c\u53d8\u91cf\u7684\u5f15\u7528\u4e0d\u80fd\u88ab\u4fee\u6539\uff0c\u4f46\u662f\u53d8\u91cf\u7684\u5185\u5bb9\u53ef\u4ee5\u4fee\u6539\u3002 \u53ef\u4ee5\u4fee\u9970\u53c2\u6570 public, default, protected, private public - anywhere protected - same class, package and subclass in other package default - same class and package private - same class \u5982\u4f55\u5c06\u4e00\u4e2a\u53ef\u53d8\u7c7b\u8f6c\u5316\u4e3a\u4e0d\u53ef\u53d8\u7684\u7c7b \u53bb\u6389\u6240\u6709\u7684setter\u65b9\u6cd5 \u6240\u6709\u7684\u5b57\u6bb5\u90fd\u7528 private final \u4fee\u9970 \u7c7b\u540d\u7528final\u4fee\u9970 Interface VS Abstract Class An interface is similar to an abstract class, except that: Methods are implicitly abstract(except default methods) A class does not extend it, but implements it A class may implement more than one interface All abstract methods from the interface must be implemented by the class. Exception VS Error Exception are subclasses of Throwable. There are three main types of Throwable\uff1a Error Typically an unrecoverable external error Unchecked RuntimeException Typically caused by a programming mistake Unchecked Exception Recoverable error Checked (Must be caught or thrown)","title":"Basic in small words"},{"location":"Java/2018-02-22-basicknowledge-java/#best-practices","text":"Catch the actual exception thrown, not the superclass type. Examine the exception to find out the exact problem so you can recover cleanly. You do not need to catch every exception. A programming mistake should not be handled. It must be fixed. Ask yourself, \"Does this exception represent behavior I want the program to recover from?\" Synchronized\u539f\u7406 \u4fee\u9970\u666e\u901a\u65b9\u6cd5 \u901a\u8fc7 ACC_SYNCHRONIZED\u6807\u8bc6\uff0c\u5982\u679c\u8bbe\u7f6e\u8be5\u6807\u8bc6\uff0c\u5219\u9700\u8981\u5148\u83b7\u53d6monitor\uff0c\u83b7\u53d6\u6210\u529f\u624d\u6267\u884c\u65b9\u6cd5\u3002\u65b9\u6cd5\u6267\u884c\u5b8c\u4e86\u91ca\u653emonitor\u3002 \u4fee\u9970\u9759\u6001\u65b9\u6cd5 \u4fee\u9970\u4ee3\u7801\u5757 JVM\u7684\u4e24\u4e2a\u6307\u4ee4monitorenter\u548cmonitorexit. Synchronized\u7684\u8bed\u4e49\u5e95\u5c42\u662f\u901a\u8fc7\u4e00\u4e2amonitor\u7684\u5bf9\u8c61\u6765\u5b8c\u6210\uff0c\u5176\u5b9ewait/notify\u7b49\u65b9\u6cd5\u4e5f\u4f9d\u8d56\u4e8emonitor\u5bf9\u8c61\uff0c\u53ea\u6709\u5728\u540c\u6b65\u7684\u5757\u6216\u8005\u65b9\u6cd5\u4e2d\u624d\u80fd\u8c03\u7528wait/notify\u7b49\u65b9\u6cd5\uff0c\u5426\u5219\u4f1a\u629b\u51fajava.lang.IllegalMonitorStateException\u7684\u5f02\u5e38. Java \u4e2d\u7684Clone \u514b\u9686\u5bf9\u8c61\u7684\u65f6\u5019\u5982\u679c\u9700\u8981\u6df1\u514b\u9686\uff0c\u90a3\u4e48\u8be5\u5bf9\u8c61\u4e2d\u7684\u5f15\u7528\u7c7b\u578b\u4e5f\u9700\u8981\u5b9e\u73b0Cloneable\u63a5\u53e3\u3002\u5982\u679c\u8be5\u7c7b\u4e2d\u7684\u5f15\u7528\u5bf9\u8c61\u6ca1\u6709\u5b9e\u73b0Cloneable\u63a5\u53e3\uff0c\u90a3\u4e48\u514b\u9686\u7684\u5bf9\u8c61\u4e0e\u539f\u5bf9\u8c61\u62e5\u6709\u76f8\u540c\u7684\u5f15\u7528\u7c7b\u578b\u7684\u5b57\u6bb5\u3002\u53ef\u4ee5\u901a\u8fc7\u5e8f\u5217\u5316\u7684\u624b\u6bb5\u5b9e\u73b0\u5bf9\u8c61\u7684\u6df1\u5ea6\u514b\u9686\u3002 LinkedHashMap\u7684\u5e94\u7528 \u53ef\u4ee5\u4fdd\u8bc1\u904d\u5386\u65f6\u53d6\u6570\u636e\u7684\u987a\u5e8f\u548c\u63d2\u5165\u987a\u5e8f\u662f\u4e00\u81f4\u7684\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\u904d\u5386\u7684\u6548\u7387\u6bd4Hashmap\u4f4e\u3002\u5f53Hashmap\u7684\u5bb9\u91cf\u5f88\u5927\uff0c\u5b9e\u9645\u5b58\u653e\u7684\u6570\u636e\u5f88\u5c11\u65f6\uff0c\u6548\u7387\u6bd4Hashmap\u9ad8\u3002 Java 8 \u4e2d\u57fa\u672c\u7684\u6570\u636e\u7c7b\u578b byte, char, int, float, double, long ,short, boolean Arrays.sort \u4e0e Collections.sort Arrays.sort\u53ef\u4ee5\u5bf9\u57fa\u672c\u7c7b\u578b\u7684\u6570\u7ec4\u8fdb\u884c\u6392\u5e8f\uff0c\u4e5f\u53ef\u4ee5\u5bf9\u5b9e\u73b0Comparable\u63a5\u53e3\u7684\u96c6\u5408\u8fdb\u884c\u6392\u5e8f\u3002 Arrays\u53ef\u4ee5\u4f7f\u7528sort\u65b9\u6cd5\u4ee5\u53caparallelSort\u65b9\u6cd5\u5bf9\u96c6\u5408\u8fdb\u884c\u6392\u5e8f\u3002\u4f7f\u7528DualPivotQuicksort(\u53cc\u8f74\u53cc\u5411)\u6392\u5e8f\uff0c\u57fa\u672c\u601d\u8def\u662f\u8bbe\u7f6e\u4e24\u4e2a\u53c2\u8003\u70b9pivot1\uff0cpivot2\uff0c\u5176\u4e2dpivot1\u4e00\u5b9a\u8981\u5c0f\u4e8epivot2\uff0c\u7136\u540e\u5c06\u5f85\u6392\u5e8f\u7684\u6570\u7ec4\u5206\u4e3a4\u90e8\u5206 [x<=pivot1], [pivot1 =pivot2], [\u672a\u6392\u5e8f]\uff0c\u7136\u540e\u5bf9\u524d\u4e09\u4e2a\u533a\u95f4\u5206\u522b\u9012\u5f52\u6392\u5e8f\u3002 Collections.sort\u53ea\u80fd\u5bf9\u5b9e\u73b0Comparable\u63a5\u53e3\u7684\u96c6\u5408\u8fdb\u884c\u6392\u5e8f\u3002 Java\u7684\u7c7b\u52a0\u8f7d\u673a\u5236 Bootstrap ClassLoader \u6700\u9876\u5c42\u7684\u52a0\u8f7d\u7c7b\uff0c\u4e3b\u8981\u52a0\u8f7d\u6838\u5fc3\u7c7b\u5e93\uff0c%JRE_HOME%\\lib\u4e0b\u7684rt.jar\u3001resources.jar\u3001charsets.jar\u548cclass\u7b49\u3002\u53e6\u5916\u9700\u8981\u6ce8\u610f\u7684\u662f\u53ef\u4ee5\u901a\u8fc7\u542f\u52a8jvm\u65f6\u6307\u5b9a-Xbootclasspath\u548c\u8def\u5f84\u6765\u6539\u53d8Bootstrap ClassLoader\u7684\u52a0\u8f7d\u76ee\u5f55\u3002\u901a\u8fc7\u73af\u5883\u53d8\u91cfsun.boot.class.path\u67e5\u627e\u5bf9\u5e94\u7684\u6587\u4ef6\u3002 Extension ClassLoader \u6269\u5c55\u7684\u7c7b\u52a0\u8f7d\u5668\uff0c\u52a0\u8f7d\u76ee\u5f55%JRE_HOME%\\lib\\ext\u76ee\u5f55\u4e0b\u7684jar\u5305\u548cclass\u6587\u4ef6\u3002\u8fd8\u53ef\u4ee5\u52a0\u8f7d-D java.ext.dirs\u9009\u9879\u6307\u5b9a\u7684\u76ee\u5f55\u3002\u901a\u8fc7\u73af\u5883\u53d8\u91cfsun.boot.class.path\u67e5\u627e\u5bf9\u5e94\u7684\u6587\u4ef6\u3002\u901a\u8fc7\u73af\u5883\u53d8\u91cfjava.ext.dirs \u67e5\u627e\u5bf9\u5e94\u7684\u6587\u4ef6\u3002 App ClassLoader \u4e5f\u79f0\u4e3aSystemAppClass \u8d1f\u8d23\u52a0\u8f7d\u5f53\u524d\u5e94\u7528\u7684classpath\u7684\u6240\u6709\u7c7b\u3002 \u901a\u8fc7\u73af\u5883\u53d8\u91cfjava.ext.dirs \u67e5\u627e\u5bf9\u5e94\u7684\u6587\u4ef6\u3002 Custom ClassLoader \u4e00\u770b\u4f60\u5c31\u61c2\uff0c\u8d85\u8be6\u7ec6java\u4e2d\u7684ClassLoader\u8be6\u89e3 Java\u52a0\u8f7d\u7c7b\u7684\u65b9\u6cd5 \u4ece\u672c\u5730\u7cfb\u7edf\u76f4\u63a5\u83b7\u5f97 \u901a\u8fc7\u7f51\u7edc\u4e0b\u8f7d.class\u6587\u4ef6 \u4ecezip\uff0cjar\u4e2d\u52a0\u8f7d.class\u6587\u4ef6 \u4ece\u6570\u636e\u5e93\u4e2d\u63d0\u53d6.class\u6587\u4ef6 \u5c06java\u6e90\u7801\u52a8\u6001\u7f16\u8bd1\u4e3a.class\u6587\u4ef6 \u547d\u4ee4\u884c\u542f\u52a8\u5e94\u7528\u7684\u65f6\u5019\u7531JVM\u521d\u59cb\u5316\u52a0\u8f7d \u901a\u8fc7Class.forName() \u901a\u8fc7ClassLoader.loadClass() Java\u7c7b\u4ec0\u4e48\u65f6\u5019\u4f1a\u88ab\u521d\u59cb\u5316 new \u8be5\u7c7b\u4e00\u4e2a\u5b9e\u4f8b \u8bbf\u95ee\u67d0\u4e2a\u7c7b\u6216\u8005\u63a5\u53e3\u7684\u9759\u6001\u53d8\u91cf \u8c03\u7528\u7c7b\u7684\u9759\u6001\u65b9\u6cd5 \u53cd\u5c04 \u521d\u59cb\u5316\u5b50\u7c7b JVM\u542f\u52a8\u65f6\u6307\u660e\u7684\u542f\u52a8\u7c7b \u5f3a\u5f15\u7528\uff0c\u8f6f\u5f15\u7528\uff0c\u5f31\u5f15\u7528\uff0c\u865a\u5f15\u7528 \u5f3a\u5f15\u7528\u7684\u5bf9\u8c61\u5982\u679c\u4e0d\u4e3anull\uff0c\u90a3\u4e48GC\u4e0d\u4f1a\u53bb\u56de\u6536\u6b64\u5bf9\u8c61 \u8f6f\u5f15\u7528\u7684\u5bf9\u8c61\u5f53jvm\u5185\u5b58\u4e0d\u8db3\u7684\u65f6\u5019\uff0cGC\u4f1a\u53bb\u56de\u6536\u8fd9\u4e9b\u5bf9\u8c61 \u5f31\u5f15\u7528\u7684\u5bf9\u8c61\u65e0\u8bbajvm\u662f\u5426\u5145\u8db3\uff0c\u5728GC\u7684\u65f6\u5019\u5747\u4f1a\u88ab\u56de\u6536 \u865a\u5f15\u7528\u4e5f\u79f0\u5e7d\u7075\u5f15\u7528\uff0c\u4e00\u4e2a\u5bf9\u8c61\u662f\u5426\u6709\u865a\u5f15\u7528\uff0c\u4e0d\u4f1a\u5bf9\u5176\u751f\u547d\u5468\u671f\u6709\u5f71\u54cd\u3002\u4e3a\u4e00\u4e2a\u5bf9\u8c61\u8bbe\u7f6e\u4e00\u4e2a\u865a\u5f15\u7528\u5173\u8054\u7684\u552f\u4e00\u76ee\u7684\u662f\u5e0c\u671b\u8be5\u5bf9\u8c61\u88ab\u6536\u96c6\u5668\u56de\u6536\u7684\u65f6\u5019\u6536\u5230\u4e00\u4e2a\u7cfb\u7edf\u901a\u77e5\u3002 final, finally\u4e0efinalize final \u4fee\u9970\u7c7b\uff0c\u53d8\u91cf\uff0c\u65b9\u6cd5\u3002\u4fee\u9970\u7c7b\u7684\u65f6\u5019\uff0c\u8868\u660e\u8fd9\u4e2a\u7c7b\u4e0d\u5141\u8bb8\u88ab\u7ee7\u627f\uff0c\u4f8b\u5982String\u7c7b\u3002\u4fee\u9970\u65b9\u6cd5\u7684\u65f6\u5019\u8868\u793a\u5728\u5b50\u7c7b\u4e2d\u4e0d\u5141\u8bb8\u88ab\u8986\u5199\uff0cprivate\u5173\u952e\u5b57\u4fee\u9970\u7684\u65b9\u6cd5\u9ed8\u8ba4\u662ffinal\u7684\u3002\u4fee\u9970\u53d8\u91cf\u7684\u65f6\u5019\u5206\u4e24\u79cd\u60c5\u51b5\uff0c\u4fee\u9970\u57fa\u672c\u7c7b\u578b\u7684\u65f6\u5019\uff0c\u8868\u793a\u5176\u6570\u503c\u4e00\u65e6\u521d\u59cb\u5316\u5c31\u4e0d\u5141\u8bb8\u4fee\u6539\u3002\u4fee\u9970\u5f15\u7528\u7c7b\u578b\u7684\u65f6\u5019\uff0c\u8868\u793a\u5176\u521d\u59cb\u5316\u4e4b\u540e\u4e0d\u80fd\u518d\u6307\u5411\u53e6\u5916\u4e00\u4e2a\u5bf9\u8c61\u3002 finally \u4e00\u822c\u4e0etry\uff0ccatch,finally \u505a\u5f02\u5e38\u5904\u7406\u3002\u4f46\u662ffinally\u5757\u4e2d\u7684\u8bed\u53e5\u4e0d\u4e00\u5b9a\u4f1a\u6267\u884c\u3002\u6709\u4ee5\u4e0b\u51e0\u79cd\u60c5\u51b5\uff1a try\u4e2d\u7684\u4ee3\u7801\u8fd8\u672a\u6267\u884c\u5230\u7a0b\u5e8f\u5c31\u9000\u51fa\u3002 try\u4e2d\u7684\u4ee3\u7801\u6267\u884c\u4e4b\u540e\uff0c\u865a\u62df\u673a\u505c\u6b62\u3002\u4f8b\u5982\u8c03\u7528 java System.exit(0); . \u7a0b\u5e8f\u6267\u884c\u5230try\u6216\u8005catch\u5757\u7684\u65f6\u5019\uff0c\u7ebf\u7a0b\u88ab\u4e2d\u65ad\u6216\u8005\u7ec8\u6b62\u3002 finalize\u662fObject\u7684\u65b9\u6cd5, \u53ef\u4ee5\u5728\u5783\u573e\u6536\u96c6\u5668\u5bf9\u6b64\u5bf9\u8c61\u8fdb\u884c\u56de\u6536\u7684\u65f6\u5019\u505a\u4e00\u4e9b\u5904\u7406\u5de5\u4f5c\u3002 protected void finalize () throws Throwable { } HashMap \u4e0e Hashtable HashMap\u975e\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c HashMap\u7684key\u548cvalue\u90fd\u53ef\u4ee5\u662fnull\u3002 /* Parameters: hash hash for key key the key value the value to put onlyIfAbsent if true, don't change existing value evict if false, the table is in creation mode. Returns: previous value, or null if none */ final V putVal ( int hash , K key , V value , boolean onlyIfAbsent , boolean evict ) { Node < K , V >[] tab ; Node < K , V > p ; int n , i ; // \u5982\u679ctable\u4e3a\u7a7a\uff0c\u6216\u8005\u8fd8\u6ca1\u6709\u5143\u7d20\u65f6\uff0c\u5219\u6269\u5bb9 if (( tab = table ) == null || ( n = tab . length ) == 0 ) n = ( tab = resize ()). length ; // \u5982\u679c\u9996\u7ed3\u70b9\u503c\u4e3a\u7a7a\uff0c\u5219\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u9996\u7ed3\u70b9\u3002 // \u6ce8\u610f\uff1a(n - 1) & hash\u624d\u662f\u771f\u6b63\u7684hash\u503c\uff0c\u4e5f\u5c31\u662f\u5b58\u50a8\u5728table\u4f4d\u7f6e\u7684index\u3002\u57281.6\u4e2d\u662f\u5c01\u88c5\u6210indexFor\u51fd\u6570\u3002 if (( p = tab [ i = ( n - 1 ) & hash ]) == null ) tab [ i ] = newNode ( hash , key , value , null ); else { // \u5230\u8fd9\u513f\u4e86\uff0c\u5c31\u8bf4\u660e\u78b0\u649e\u4e86\uff0c\u90a3\u4e48\u5c31\u8981\u5f00\u59cb\u5904\u7406\u78b0\u649e\u3002 Node < K , V > e ; K k ; // \u5982\u679c\u5728\u9996\u7ed3\u70b9\u4e0e\u6211\u4eec\u5f85\u63d2\u5165\u7684\u5143\u7d20\u6709\u76f8\u540c\u7684hash\u548ckey\u503c\uff0c\u5219\u5148\u8bb0\u5f55\u3002 if ( p . hash == hash && (( k = p . key ) == key || ( key != null && key . equals ( k )))) e = p ; else if ( p instanceof TreeNode ) // \u5982\u679c\u9996\u7ed3\u70b9\u7684\u7c7b\u578b\u662f\u7ea2\u9ed1\u6811\u7c7b\u578b\uff0c\u5219\u6309\u7167\u7ea2\u9ed1\u6811\u65b9\u6cd5\u6dfb\u52a0\u8be5\u5143\u7d20 e = (( TreeNode < K , V >) p ). putTreeVal ( this , tab , hash , key , value ); else { // \u5230\u8fd9\u4e00\u6b65\uff0c\u8bf4\u660e\u9996\u7ed3\u70b9\u7c7b\u578b\u4e3a\u94fe\u8868\u7c7b\u578b\u3002 for ( int binCount = 0 ; ; ++ binCount ) { // \u5982\u679c\u904d\u5386\u5230\u672b\u5c3e\u65f6\uff0c\u5148\u5728\u5c3e\u90e8\u8ffd\u52a0\u8be5\u5143\u7d20\u7ed3\u70b9\u3002 if (( e = p . next ) == null ) { p . next = newNode ( hash , key , value , null ); // \u5f53\u904d\u5386\u7684\u7ed3\u70b9\u6570\u76ee\u5927\u4e8e8\u65f6\uff0c\u5219\u91c7\u53d6\u6811\u5316\u7ed3\u6784\u3002 if ( binCount >= TREEIFY_THRESHOLD - 1 ) // -1 for 1st treeifyBin ( tab , hash ); break ; } // \u5982\u679c\u627e\u5230\u4e0e\u6211\u4eec\u5f85\u63d2\u5165\u7684\u5143\u7d20\u5177\u6709\u76f8\u540c\u7684hash\u548ckey\u503c\u7684\u7ed3\u70b9\uff0c\u5219\u505c\u6b62\u904d\u5386\u3002\u6b64\u65f6e\u5df2\u7ecf\u8bb0\u5f55\u4e86\u8be5\u7ed3\u70b9 if ( e . hash == hash && (( k = e . key ) == key || ( key != null && key . equals ( k )))) break ; p = e ; } } // \u8868\u660e\uff0c\u8bb0\u5f55\u5230\u5177\u6709\u76f8\u540c\u5143\u7d20\u7684\u7ed3\u70b9 if ( e != null ) { // existing mapping for key V oldValue = e . value ; if (! onlyIfAbsent || oldValue == null ) //\u5224\u65ad\u662f\u5426\u7528\u65b0\u503c\u8986\u76d6\u65e7\u503c e . value = value ; afterNodeAccess ( e ); // \u8fd9\u4e2a\u662f\u7a7a\u51fd\u6570\uff0c\u53ef\u4ee5\u7531\u7528\u6237\u6839\u636e\u9700\u8981\u8986\u76d6 return oldValue ; } } ++ modCount ; // \u5f53\u7ed3\u70b9\u6570+1\u5927\u4e8ethreshold\u65f6\uff0c\u5219\u8fdb\u884c\u6269\u5bb9 if (++ size > threshold ) resize (); afterNodeInsertion ( evict ); // \u8fd9\u4e2a\u662f\u7a7a\u51fd\u6570\uff0c\u53ef\u4ee5\u7531\u7528\u6237\u6839\u636e\u9700\u8981\u8986\u76d6 return null ; } Hashtable \u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0cHashtable\u7684key\u6216\u8005value\u4e0d\u80fd\u662fnull\u3002 /* * \u6dfb\u52a0\u5143\u7d20\u7684\u65f6\u5019\u4f7f\u7528synchronized\u9501 * \u8fd4\u56de\u4e4b\u524d\u5bf9\u5e94\u4f4d\u7f6e\u7684\u503c\uff0c\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u8fd4\u56denull */ public synchronized V put ( K key , V value ) { // Make sure the value is not null if ( value == null ) { throw new NullPointerException (); } // Makes sure the key is not already in the hashtable. Entry <?,?> tab [] = table ; int hash = key . hashCode (); int index = ( hash & 0x7FFFFFFF ) % tab . length ; @SuppressWarnings ( \"unchecked\" ) Entry < K , V > entry = ( Entry < K , V >) tab [ index ]; //\u904d\u5386\u6574\u4e2atable\uff0c\u770b\u662f\u5426\u5b58\u5728 for (; entry != null ; entry = entry . next ) { if (( entry . hash == hash ) && entry . key . equals ( key )) { V old = entry . value ; entry . value = value ; return old ; } } //\u4e0d\u5b58\u5728\u5219\u63d2\u5165\u5143\u7d20 addEntry ( hash , key , value , index ); return null ; } List\u4e0eSet\u7684\u533a\u522b List\u4e2d\u7684\u5143\u7d20\u662f\u6709\u5e8f\u7684\uff0c\u53ef\u4ee5\u901a\u8fc7index\u51c6\u786e\u7684\u67e5\u627e\u5185\u90e8\u7684\u5143\u7d20\u3002 List\u4e2d\u7684\u5143\u7d20\u53ef\u4ee5\u91cd\u590d\uff0cSet\u4e2d\u7684\u5143\u7d20\u4e0d\u80fd\u91cd\u590d\u3002List\u4e2d\u53ef\u4ee5\u5141\u8bb8\u6dfb\u52a0\u591a\u4e2anull\u5143\u7d20\u3002Set\u4e2d\u81f3\u591a\u53ef\u4ee5\u6709\u4e00\u4e2anull\u5143\u7d20\u3002 List\u63d0\u4f9b\u4e00\u4e2a\u7279\u6b8a\u7684\u8fed\u4ee3ListIterator\uff0c\u53ef\u4ee5\u63d2\u5165\uff0c\u4fee\u6539\uff0c\u4ee5\u53ca\u63d0\u4f9b\u53cc\u5411\u904d\u5386\u7684\u80fd\u529b\u3002 HashSet\u662f\u5982\u4f55\u4fdd\u8bc1\u4e0d\u91cd\u590d\u7684 HashSet\u7528HashMap\u5b58\u50a8\u5143\u7d20 \u5c06\u5143\u7d20\u4e2d\u4f5c\u4e3aHashMap\u7684key \u4e0d\u662f\u7ebf\u7a0b\u5b89\u5168\u7684 // Dummy value to associate with an Object in the backing Map private static final Object PRESENT = new Object (); public boolean add ( E e ) { return map . put ( e , PRESENT )== null ; } Use condition in ant script <!-- Execute task by different operation system --> <project name= \"My Project\" default= \"package_designer_without_report_v3\" basedir= \".\" > <condition property= \"isWindows\" > <os family= \"windows\" /> </condition> <condition property= \"isLinux\" > <os family= \"unix\" /> </condition> <target name= \"operateInWindows\" if= \"isWindows\" > <echo message= \"operate in windows\" /> </target> <target name= \"operateInLinux\" if= \"isLinux\" > <echo message= \"operate in linux\" /> </target> </project> Java\u4e2dequals()\u65b9\u6cd5\u4e0e\"==\"\u7684\u533a\u522b? \"==\" \u5bf9\u4e8e\u5f15\u7528\u7c7b\u578b\uff0c\u6bd4\u8f83\u7684\u662f\u5bf9\u8c61\u7684\u5730\u5740\uff0c\u5bf9\u4e8e\u57fa\u672c\u7c7b\u578b\uff0c\u6bd4\u8f83\u7684\u662f\u5b57\u9762\u503c\u3002 equals\u65b9\u6cd5\u662fObject\u57fa\u7c7b\u7684\u65b9\u6cd5\uff0c\u5982\u679c\u5b50\u7c7b\u6ca1\u6709\u8986\u5199\u8be5\u65b9\u6cd5\uff0c\u9ed8\u8ba4\u7684\u662f\u6bd4\u8f83\u5bf9\u8c61\u7684\u5730\u5740\u3002\u4e00\u822c\u8986\u5199\u6b64\u65b9\u6cd5\u7684\u65f6\u5019\u540c\u65f6\u8986\u5199hashCode\u65b9\u6cd5\u3002 Java\u62bd\u8c61\u7c7b\u53ef\u4ee5\u6709\u5b9e\u4f53\u65b9\u6cd5\u4e48\uff1f \u53ef\u4ee5. \u5217\u4e3eJava\u4e2d\u62bd\u8c61\u7c7b\u548c\u63a5\u53e3\u7684\u76f8\u540c\u70b9\uff1f \u90fd\u662f\u4e0a\u5c42\u7684\u62bd\u8c61 \u90fd\u53ef\u4ee5\u5305\u542b\u62bd\u8c61\u65b9\u6cd5 \u90fd\u4e0d\u80fd\u88ab\u5b9e\u4f8b\u5316 \u5217\u4e3eJava\u4e2d\u62bd\u8c61\u7c7b\u548c\u63a5\u53e3\u7684\u4e0d\u540c\u70b9\uff1f \u62bd\u8c61\u7c7b\u4e2d\u53ef\u4ee5\u5305\u542b\u62bd\u8c61\u65b9\u6cd5\u548c\u5b9e\u4f53\u65b9\u6cd5\uff0c\u63a5\u53e3\u4e2d\u53ea\u80fd\u5305\u542b\u62bd\u8c61\u65b9\u6cd5, \u4ecejdk1.8\u5f00\u59cb\uff0c\u63a5\u53e3\u4e2d\u4e5f\u53ef\u4ee5\u5305\u542bstatic\u548cdefault\u65b9\u6cd5 public interface MyImpl { /** * by default, abstract */ public void move (); public abstract void drink (); /** * From jdk1.8 */ public static void say () { } /** * From jdk1.8 */ public default void eat () { } } \u4e00\u4e2a\u7c7b\u53ea\u80fd\u7ee7\u627f\u4e00\u4e2a\u62bd\u8c61\u7c7b\uff0c\u4f46\u662f\u53ef\u4ee5\u5b9e\u73b0\u591a\u4e2a\u63a5\u53e3 \u5982\u679c\u4e00\u4e2a\u7c7b\u4e0d\u80fd\u5b9e\u73b0\u7236\u7c7b\u4e2d\u6240\u6709\u7684\u62bd\u8c61\u65b9\u6cd5\uff0c\u90a3\u4e48\u5b83\u672c\u8eab\u5fc5\u987b\u662f\u62bd\u8c61\u7c7b Java\u63a5\u53e3\u4e2d\u58f0\u660e\u7684\u53d8\u91cf\u9ed8\u8ba4\u90fd\u662ffinal\u7684\uff0c\u62bd\u8c61\u7c7b\u53ef\u4ee5\u5305\u542b\u975efinal\u7684\u53d8\u91cf Java\u63a5\u53e3\u4e2d\u7684\u6210\u5458\u51fd\u6570\u9ed8\u8ba4\u662fpublic\u7684\uff0c\u62bd\u8c61\u7c7b\u7684\u6210\u5458\u51fd\u6570\u53ef\u4ee5\u662fprivate\uff0cprotected\u6216\u8005\u662fpublic ArrayList\u548cLinkedlist\u7684\u533a\u522b\uff1f ArrayList\u67e5\u627e\u901f\u5ea6\u5feb\uff0cLinked\u5728\u5217\u8868\u4e2d\u63d2\u5165\uff0c\u5220\u9664\u64cd\u4f5c\u901f\u5ea6\u5feb ArrayList\u5360\u636e\u7684\u7a7a\u95f4\u66f4\u5c11 Comparable\u548cComparator\u63a5\u53e3\u662f\u5e72\u4ec0\u4e48\u7684\uff1f Comparable\u63a5\u53e3\u53ea\u63d0\u4f9b\u4e00\u4e2acompareTo\u65b9\u6cd5 Comparator\u63a5\u53e3\u63d0\u4f9bcompare\uff08\uff09\u548cequals\uff08\uff09\u4e24\u4e2a\u65b9\u6cd5 Thread.sleep()\u65b9\u6cd5\u548cThread.yield()\uff0cObject.wait()\u65b9\u6cd5\u7684\u76f8\u540c\u70b9\u548c\u533a\u522b\uff1f \u4e00\u4e2a\u7ebf\u7a0b\u8c03\u7528yield()\u65b9\u6cd5\u8868\u660e\u8fd9\u4e2a\u7ebf\u7a0b\u76ee\u524d\u6ca1\u6709\u7279\u522b\u91cd\u8981\u7684\u4e8b\u60c5\u505a\u4e86\uff0c\u5982\u679c\u6709\u5176\u4ed6\u7684\u7ebf\u7a0b\u6216\u8005\u8fdb\u7a0b\u9700\u8981\u8fd0\u884c\uff0c\u4f18\u5148\u4ed6\u4eec\u8fd0\u884c\uff0c\u5982\u679c\u6ca1\u6709\u5176\u4ed6\u7684\u7ebf\u7a0b\u6216\u8005\u8fdb\u7a0b\u9700\u8981\u8fd0\u884c\uff0c\u90a3\u4e48\u8c03\u7528yield()\u65b9\u6cd5\u7684\u7ebf\u7a0b\u5c31\u7ee7\u7eed\u8fd0\u884c\u3002 \u4e00\u4e2a\u7ebf\u7a0b\u8c03\u7528sleep()\u65b9\u6cd5\u4f1a\u4f7f\u8be5\u7ebf\u7a0b\u4f11\u7720\u6307\u5b9a\u7684\u65f6\u95f4\uff0c\u5728\u6b64\u671f\u95f4\uff0c\u4e0d\u4f1a\u4e22\u5931\u4efb\u4f55\u76d1\u89c6\u5668(\u9501)\u7684\u4fe1\u606f\uff0c\u5982\u679c\u6709\u5176\u4ed6\u7684\u7ebf\u7a0b\u6216\u8005\u8fdb\u7a0b\u9700\u8981\u8fd0\u884c\uff0c\u4ed6\u4eec\u53ef\u4ee5\u83b7\u5f97\u7cfb\u7edf\u8d44\u6e90\u8fd0\u884c\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u90a3\u4e48CPU\u6709\u53ef\u80fd\u5904\u4e8e\u7a7a\u95f2\u72b6\u6001\u3002 \u5f53\u8c03\u7528wait()\u65b9\u6cd5\u7684\u65f6\u5019\uff0c\u7ebf\u7a0b\u4f1a\u4e22\u5f03\u5bf9\u8c61\u9501\uff0c\u8fdb\u5165\u8be5\u5bf9\u8c61\u6c60\u7684\u7b49\u5f85\u6c60\u4e2d\uff0c\u5f53\u5176\u4ed6\u7684\u7ebf\u7a0b\u8c03\u7528nofity()\u6216\u5219notifyAll()\u7684\u65f6\u5019\u91cd\u65b0\u53bb\u7ade\u4e89\u8be5\u5bf9\u8c61\u7684\u9501\u3002 notify()\u65b9\u6cd5\u548cnotifyAll()\u65b9\u6cd5\u7684\u533a\u522b \u9501\u6c60\uff1a\u5047\u8bbe\u7ebf\u7a0bA\u5df2\u7ecf\u62e5\u6709\u67d0\u4e2a\u5bf9\u8c61\u7684\u9501\uff0c\u800c\u5176\u4ed6\u7ebf\u7a0b\u60f3\u8c03\u7528\u8be5\u5bf9\u8c61\u7684\u67d0\u4e2asynchronized\u65b9\u6cd5\uff0c\u90a3\u4e48\u5fc5\u987b\u5148\u83b7\u5f97\u8be5\u5bf9\u8c61\u7684\u9501\u624d\u53ef\u4ee5\uff0c\u7531\u4e8e\u6b64\u65f6\u9501\u5df2\u7ecf\u88ab\u7ebf\u7a0bA\u5360\u6709\uff0c\u6240\u4ee5\u8fd9\u4e9b\u7ebf\u7a0b\u4f1a\u8fdb\u5165\u8be5\u5bf9\u8c61\u7684\u9501\u6c60\u4e2d\u3002 \u7b49\u5f85\u6c60: \u5047\u8bbe\u7ebf\u7a0bA\u8c03\u7528\u67d0\u4e2a\u5bf9\u8c61\u7684wait()\u65b9\u6cd5\uff0c\u7ebf\u7a0bA\u5c31\u4f1a\u91ca\u653e\u8be5\u5bf9\u8c61\u7684\u9501\uff0c\u8fdb\u5165\u5bf9\u8c61\u7684\u7b49\u5f85\u6c60\u3002\u7b49\u5f85\u6c60\u4e2d\u7684\u7ebf\u7a0b\u4e0d\u4f1a\u53c2\u4e0e\u7ade\u4e89\u8be5\u5bf9\u8c61\u7684\u9501\u3002 notify()\u65b9\u6cd5\u53ea\u4f1a\u5524\u9192\u4e00\u4e2a\u7ebf\u7a0b\u8fdb\u5165\u9501\u6c60\uff0c\u5047\u5982\u6709\u591a\u4e2a\u7ebf\u7a0b\u90fd\u5728\u7b49\u5f85\u83b7\u53d6\u67d0\u4e2a\u5bf9\u8c61\u7684\u9501\uff0c\u90a3\u4e48\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u6839\u636e\u5b9e\u73b0\u6311\u9009\u4e00\u4e2a\u7ebf\u7a0b\u6765\u5524\u9192\u3002\u800cnotifyAll()\u4f1a\u5524\u9192\u6240\u6709\u7684\u7b49\u5f85\u7ebf\u7a0b\u8fdb\u5165\u9501\u6c60\uff0c\u8fd9\u4e9b\u7ebf\u7a0b\u4e4b\u95f4\u5f7c\u6b64\u7ade\u4e89\u53bb\u83b7\u53d6\u5bf9\u8c61\u4e0a\u7684\u9501\u3002notify()\u65b9\u6cd5\u4f1a\u5bfc\u81f4\u6b7b\u9501\uff0c\u800cnotifyAll()\u65b9\u6cd5\u4e0d\u4f1a\u3002 public void productFood () { synchronized ( this . lock ) { while ( this . foodTotal == 5 ) { try { this . lock . wait (); } catch ( InterruptedException e ) { e . printStackTrace (); } } /* * \u6b64\u65f6\u6240\u6709\u7684\u7ebf\u7a0b\u90fd\u5904\u4e8e\u7b49\u5f85\u72b6\u6001\uff0c\u5982\u679c\u73b0\u5728foodTotal = 4\uff0c * \u6267\u884c\u8fc7\u4e0b\u4e00\u53e5\u540efoodTotal=5,\u5982\u679c\u4f7f\u7528notify\u65b9\u6cd5\u6b63\u597d\u5524\u9192\u7684\u662f\u4e00\u4e2a\u7ebf\u7a0b\u8c03\u7528productFood()\u65b9\u6cd5\uff0c\u90a3\u4e48\u8be5\u7ebf\u7a0b\u5c31\u4f1a\u8fdb\u5165wait()\u72b6\u6001\u3002\u6b64\u65f6\u6ca1\u6709\u5176\u4ed6\u7684\u7ebf\u7a0b\u662frunning\u72b6\u6001\uff0c\u53ef\u4ee5\u8c03\u7528nofify()\u65b9\u6cd5\u5524\u9192\u5176\u4ed6\u7ebf\u7a0b\uff0c\u4e8e\u662f\u5c31\u53d1\u751f\u4e86\u6b7b\u9501\u3002 */ foodTotal = foodTotal + 1 ; //this.lock.notifyAll(); this . lock . notify (); } } \u8fde\u7eed\u8c03\u7528\u591a\u6b21Thread\u7684start()\u65b9\u6cd5\u4f1a\u600e\u4e48\u6837\uff1f \u4f1a\u629b\u51faThread\u7684\u72b6\u6001\u5f02\u5e38 public synchronized void start () { /** *A zero status value corresponds to state \"NEW\". \u65b0\u521b\u5efa\u7684Thread\u7684status==0 */ if ( threadStatus != 0 ) throw new IllegalThreadStateException (); ... }","title":"Best Practices"},{"location":"Java/2018-02-22-basicknowledge-java/#_1","text":"\u53c2\u8003\u94fe\u63a51","title":"\u53c2\u8003\u94fe\u63a5"},{"location":"Java/2018-02-22-designpattern-java/","text":"Java design pattern \u00b6 Design Pattern","title":"Java design pattern"},{"location":"Java/2018-02-22-designpattern-java/#java-design-pattern","text":"Design Pattern","title":"Java design pattern"},{"location":"Java/2018-03-22-concurrent-java/","text":"1. \u8ba1\u7b97\u673a\u786c\u4ef6\u67b6\u6784\u7684\u7b80\u5355\u56fe\u793a \u00b6 \u4e00\u4e2a\u5178\u578b\u7684CPU\u67b6\u6784 \u7279\u70b9\u5982\u4e0b\uff1a - \u591a\u4e2aCPU - CPU\u5bc4\u5b58\u5668 - \u9ad8\u901f\u7f13\u5b58Cache - \u5185\u5b58 \u7531\u4e8e\u8ba1\u7b97\u673a\u7684\u5b58\u50a8\u8bbe\u5907\u4e0e\u5904\u7406\u5668\u7684\u8fd0\u7b97\u80fd\u529b\u4e4b\u95f4\u6709\u51e0\u4e2a\u6570\u91cf\u7ea7\u7684\u5dee\u8ddd\uff0c\u6240\u4ee5\u73b0\u4ee3\u8ba1\u7b97\u673a\u7cfb\u7edf\u90fd\u4e0d\u5f97\u4e0d\u52a0\u5165\u4e00\u5c42\u8bfb\u5199\u901f\u5ea6\u5c3d\u53ef\u80fd\u63a5\u8fd1\u5904\u7406\u5668\u8fd0\u7b97\u901f\u5ea6\u7684\u9ad8\u901f\u7f13\u5b58(cache)\u6765\u4f5c\u4e3a\u5185\u5b58\u4e0e\u5904\u7406\u5668\u4e4b\u95f4\u7684\u7f13\u51b2\uff1a\u5c06\u8fd0\u7b97\u9700\u8981\u4f7f\u7528\u5230\u7684\u6570\u636e\u590d\u5236\u5230\u7f13\u5b58\u4e2d\uff0c\u8ba9\u8fd0\u7b97\u80fd\u5feb\u901f\u8fdb\u884c\uff0c\u5f53\u8fd0\u7b97\u7ed3\u675f\u540e\u518d\u4ece\u7f13\u5b58\u540c\u6b65\u56de\u5185\u5b58\u4e4b\u4e2d\uff0c\u8fd9\u6837\u5904\u7406\u5668\u5c31\u65e0\u9700\u7b49\u5f85\u7f13\u6162\u7684\u5185\u5b58\u8bfb\u5199\u4e86\u3002 \u57fa\u4e8e\u9ad8\u901f\u7f13\u5b58\u7684\u5b58\u50a8\u4ea4\u4e92\u5f88\u597d\u5730\u89e3\u51b3\u4e86\u5904\u7406\u5668\u4e0e\u5185\u5b58\u7684\u901f\u5ea6\u77db\u76fe\uff0c\u4f46\u662f\u5f15\u5165\u4e86\u4e00\u4e2a\u65b0\u7684\u95ee\u9898\uff1a\u7f13\u5b58\u4e00\u81f4\u6027\uff08Cache Coherence\uff09\u3002\u5728\u591a\u5904\u7406\u5668\u7cfb\u7edf\u4e2d\uff0c\u6bcf\u4e2a\u5904\u7406\u5668\u90fd\u6709\u81ea\u5df1\u7684\u9ad8\u901f\u7f13\u5b58\uff0c\u800c\u4ed6\u4eec\u53c8\u5171\u4eab\u540c\u4e00\u4e3b\u5b58\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a\u591a\u4e2a\u5904\u7406\u5668\u8fd0\u7b97\u4efb\u52a1\u90fd\u6d89\u53ca\u540c\u4e00\u5757\u4e3b\u5b58\uff0c\u9700\u8981\u4e00\u79cd\u534f\u8bae\u53ef\u4ee5\u4fdd\u969c\u6570\u636e\u7684\u4e00\u81f4\u6027\uff0c\u8fd9\u7c7b\u534f\u8bae\u6709MSI\u3001MESI\u3001MOSI\u53caDragon Protocol\u7b49\u3002 \u9664\u6b64\u4e4b\u5916\uff0c\u4e3a\u4e86\u4f7f\u5f97\u5904\u7406\u5668\u5185\u90e8\u7684\u8fd0\u7b97\u5355\u5143\u80fd\u5c3d\u53ef\u80fd\u88ab\u5145\u5206\u5229\u7528\uff0c\u5904\u7406\u5668\u53ef\u80fd\u4f1a\u5bf9\u8f93\u5165\u4ee3\u7801\u8fdb\u884c\u4e71\u5e8f\u6267\u884c\uff08Out-Of-Order Execution\uff09\u4f18\u5316\uff0c\u5904\u7406\u5668\u4f1a\u5728\u8ba1\u7b97\u4e4b\u540e\u5c06\u5bf9\u4e71\u5e8f\u6267\u884c\u7684\u4ee3\u7801\u8fdb\u884c\u7ed3\u679c\u91cd\u7ec4\uff0c\u4fdd\u8bc1\u7ed3\u679c\u51c6\u786e\u6027\u3002\u4e0e\u5904\u7406\u5668\u7684\u4e71\u5e8f\u6267\u884c\u4f18\u5316\u7c7b\u4f3c\uff0cJava\u865a\u62df\u673a\u7684\u5373\u65f6\u7f16\u8bd1\u5668\u4e2d\u4e5f\u6709\u7c7b\u4f3c\u7684\u6307\u4ee4\u91cd\u6392\u5e8f\uff08Instruction Recorder\uff09\u4f18\u5316\u3002 2. Java\u5185\u5b58\u6a21\u578b(Java Memory Model, JMM) \u00b6 Java\u865a\u62df\u673a\u89c4\u8303\u4e2d\u5b9a\u4e49\u4e86Java\u5185\u5b58\u6a21\u578b(Java Memory Model\uff0cJMM),\u7528\u4e8e\u5c4f\u853d\u6389\u5404\u79cd\u786c\u4ef6\u548c\u64cd\u4f5c\u7cfb\u7edf\u7684\u5185\u5b58\u8bbf\u95ee\u5dee\u5f02\uff0c\u4ee5\u5b9e\u73b0\u8ba9Java\u7a0b\u5e8f\u5728\u5404\u79cd\u5e73\u53f0\u4e0b\u90fd\u80fd\u8fbe\u5230\u4e00\u81f4\u7684\u5e76\u53d1\u6548\u679c\uff0cJMM\u89c4\u8303\u4e86Java\u865a\u62df\u673a\u4e0e\u8ba1\u7b97\u673a\u5185\u5b58\u662f\u5982\u4f55\u534f\u540c\u5de5\u4f5c\u7684\uff1a\u89c4\u5b9a\u4e86\u4e00\u4e2a\u7ebf\u7a0b\u5982\u4f55\u548c\u4f55\u65f6\u53ef\u4ee5\u770b\u5230\u7531\u5176\u4ed6\u7ebf\u7a0b\u4fee\u6539\u8fc7\u540e\u7684\u5171\u4eab\u53d8\u91cf\u7684\u503c\uff0c\u4ee5\u53ca\u5728\u5fc5\u987b\u65f6\u5982\u4f55\u540c\u6b65\u7684\u8bbf\u95ee\u5171\u4eab\u53d8\u91cf. Java\u5185\u5b58\u6a21\u578b\u901a\u8fc7\u56fe\u4e2d\u7684\u516b\u79cd\u64cd\u4f5c\u6765\u5b8c\u6210\u53d8\u91cf\u4ece\u4e3b\u5185\u5b58\u52a0\u8f7d\u5230\u5de5\u4f5c\u5185\u5b58\uff0c\u7136\u540e\u4ece\u5de5\u4f5c\u5185\u5b58\u540c\u6b65\u5230\u4e3b\u5185\u5b58\u3002 Lock --> Read --> Load --> Use --> Assign --> Store --> Write --> Unlock JMM \u8981\u6c42\u8fd9\u4e2a\u8fc7\u7a0b\u5fc5\u987b\u6309\u987a\u5e8f\u6267\u884c\uff0c\u4f46\u662f\u53ef\u4ee5\u4e0d\u5fc5\u8fde\u7eed\u6267\u884c\uff01\u4e3e\u4e2a\u6817\u5b50\uff1a\uff08Read A\uff0cRead B, Load B, Load A, Store B, Write B, Store A, Write A\uff09\u3002 \u6b64\u5916\uff0cJMM\u8fd8\u89c4\u5b9a\u4e86\u6267\u884c\u4e0a\u8ff08\u4e2a\u64cd\u4f5c\u5fc5\u987b\u6ee1\u8db3\u4ee5\u4e0b\u89c4\u5219\uff1a - \u4e0d\u5141\u8bb8read\u548cload\u3001store\u548cwrite\u64cd\u4f5c\u4e4b\u4e00\u5355\u72ec\u51fa\u73b0 - \u4e0d\u5141\u8bb8\u4e00\u4e2a\u7ebf\u7a0b\u4e22\u5f03\u5b83\u7684\u6700\u8fd1assign\u7684\u64cd\u4f5c\uff0c\u5373\u53d8\u91cf\u5728\u5de5\u4f5c\u5185\u5b58\u4e2d\u6539\u53d8\u4e86\u4e4b\u540e\u5fc5\u987b\u540c\u6b65\u5230\u4e3b\u5185\u5b58\u4e2d - \u4e0d\u5141\u8bb8\u4e00\u4e2a\u7ebf\u7a0b\u65e0\u539f\u56e0\u5730\uff08\u6ca1\u6709\u53d1\u751f\u8fc7\u4efb\u4f55assign\u64cd\u4f5c\uff09\u628a\u6570\u636e\u4ece\u5de5\u4f5c\u5185\u5b58\u540c\u6b65\u56de\u4e3b\u5185\u5b58\u4e2d - \u4e00\u4e2a\u65b0\u7684\u53d8\u91cf\u53ea\u80fd\u5728\u4e3b\u5185\u5b58\u4e2d\u8bde\u751f\uff0c\u4e0d\u5141\u8bb8\u5728\u5de5\u4f5c\u5185\u5b58\u4e2d\u76f4\u63a5\u4f7f\u7528\u4e00\u4e2a\u672a\u88ab\u521d\u59cb\u5316\uff08load\u6216assign\uff09\u7684\u53d8\u91cf\u3002\u5373\u5c31\u662f\u5bf9\u4e00\u4e2a\u53d8\u91cf\u5b9e\u65bduse\u548cstore\u64cd\u4f5c\u4e4b\u524d\uff0c\u5fc5\u987b\u5148\u6267\u884c\u8fc7\u4e86assign\u548cload\u64cd\u4f5c - \u4e00\u4e2a\u53d8\u91cf\u5728\u540c\u4e00\u65f6\u523b\u53ea\u5141\u8bb8\u4e00\u6761\u7ebf\u7a0b\u5bf9\u5176\u8fdb\u884clock\u64cd\u4f5c\uff0clock\u548cunlock\u5fc5\u987b\u6210\u5bf9\u51fa\u73b0 - \u5982\u679c\u5bf9\u4e00\u4e2a\u53d8\u91cf\u6267\u884clock\u64cd\u4f5c\uff0c\u5c06\u4f1a\u6e05\u7a7a\u5de5\u4f5c\u5185\u5b58\u4e2d\u6b64\u53d8\u91cf\u7684\u503c\uff0c\u5728\u6267\u884c\u5f15\u64ce\u4f7f\u7528\u8fd9\u4e2a\u53d8\u91cf\u524d\u9700\u8981\u91cd\u65b0\u6267\u884cload\u6216assign\u64cd\u4f5c\u521d\u59cb\u5316\u53d8\u91cf\u7684\u503c - \u5982\u679c\u4e00\u4e2a\u53d8\u91cf\u4e8b\u5148\u6ca1\u6709\u88ablock\u64cd\u4f5c\u9501\u5b9a\uff0c\u5219\u4e0d\u5141\u8bb8\u5bf9\u5b83\u6267\u884cunlock\u64cd\u4f5c\uff1b\u4e5f\u4e0d\u5141\u8bb8\u53bbunlock\u4e00\u4e2a\u88ab\u5176\u4ed6\u7ebf\u7a0b\u9501\u5b9a\u7684\u53d8\u91cf - \u5bf9\u4e00\u4e2a\u53d8\u91cf\u6267\u884cunlock\u64cd\u4f5c\u4e4b\u524d\uff0c\u5fc5\u987b\u5148\u628a\u6b64\u53d8\u91cf\u540c\u6b65\u5230\u4e3b\u5185\u5b58\u4e2d\uff08\u6267\u884cstore\u548cwrite\u64cd\u4f5c\uff09 JMM \u4f7f\u7528\u5148\u884c\u53d1\u751f\uff08happens-before\uff09\u539f\u5219\u6765\u786e\u5b9a\u4e00\u4e2a\u5185\u5b58\u8bbf\u95ee\u5728\u5e76\u53d1\u73af\u5883\u4e2d\u662f\u5426\u5b89\u5168 2.1 \u5148\u884c\u53d1\u751f\uff08happens-before\uff09 \u6982\u5ff5 \u00b6 \u4e00\u53e5\u8bdd\u6982\u62ec\uff1a\u64cd\u4f5cA\u5148\u884c\u53d1\u751f\u4e8e\u64cd\u4f5cB\uff0c\u64cd\u4f5cA\u7684\u5f71\u54cd\u4f1a\u88ab\u64cd\u4f5cB\u89c2\u5bdf\u5230 \u4e3b\u8981\u5305\u62ec\u4ee5\u4e0b\u60c5\u51b5\uff1a - \u7a0b\u5e8f\u6b21\u5e8f\u89c4\u5219(Program Order Rule)\uff1a \u5728\u540c\u4e00\u4e2a\u7ebf\u7a0b\u4e2d\uff0c\u6309\u7167\u7a0b\u5e8f\u4ee3\u7801\u987a\u5e8f\uff0c\u4e66\u5199\u5728\u524d\u9762\u7684\u64cd\u4f5c\u5148\u884c\u53d1\u751f\u4e8e\u4e66\u5199\u5728\u540e\u9762\u7684\u64cd\u7eb5\u3002\u51c6\u786e\u7684\u8bf4\u662f\u7a0b\u5e8f\u7684\u63a7\u5236\u6d41\u987a\u5e8f\uff0c\u8003\u8651\u5206\u652f\u548c\u5faa\u73af\u7b49\u3002 - \u7ba1\u7406\u9501\u5b9a\u89c4\u5219(Monitor Lock Rule)\uff1a\u4e00\u4e2aunlock\u64cd\u4f5c\u5148\u884c\u53d1\u751f\u4e8e\u540e\u9762\uff08\u65f6\u95f4\u4e0a\u7684\u987a\u5e8f\uff09\u5bf9\u540c\u4e00\u4e2a\u9501\u7684lock\u64cd\u4f5c\u3002 - volatile\u53d8\u91cf\u89c4\u5219(Volatile Variable Rule)\uff1a\u5bf9\u4e00\u4e2avolatile\u53d8\u91cf\u7684\u5199\u64cd\u4f5c\u5148\u884c\u53d1\u751f\u4e8e\u540e\u9762\uff08\u65f6\u95f4\u4e0a\u7684\u987a\u5e8f\uff09\u5bf9\u8be5\u53d8\u91cf\u7684\u8bfb\u64cd\u4f5c\u3002 - \u7ebf\u7a0b\u542f\u52a8\u89c4\u5219(Thread Start Rule)\uff1aThread\u5bf9\u8c61\u7684start()\u65b9\u6cd5\u5148\u884c\u53d1\u751f\u4e8e\u6b64\u7ebf\u7a0b\u7684\u6bcf\u4e00\u4e2a\u52a8\u4f5c\u3002 - \u7ebf\u7a0b\u7ec8\u6b62\u89c4\u5219(Thread Termination Rule)\uff1a\u7ebf\u7a0b\u7684\u6240\u6709\u64cd\u4f5c\u90fd\u5148\u884c\u53d1\u751f\u4e8e\u5bf9\u6b64\u7ebf\u7a0b\u7684\u7ec8\u6b62\u68c0\u6d4b\uff0c\u53ef\u4ee5\u901a\u8fc7Thread.join()\u65b9\u6cd5\u7ed3\u675f\u3001Thread.isAlive()\u7684\u8fd4\u56de\u503c\u7b49\u624b\u6bb5\u68c0\u6d4b\u5230\u7ebf\u7a0b\u5df2\u7ecf\u7ec8\u6b62\u6267\u884c\u3002 - \u7ebf\u7a0b\u4e2d\u65ad\u89c4\u5219(Thread Interruption Rule)\uff1a\u5bf9\u7ebf\u7a0binterrupt()\u65b9\u6cd5\u7684\u8c03\u7528\u5148\u884c\u53d1\u751f\u4e8e\u88ab\u4e2d\u65ad\u7ebf\u7a0b\u7684\u4ee3\u7801\u68c0\u6d4b\u5230\u4e2d\u65ad\u65f6\u4e8b\u4ef6\u7684\u53d1\u751f\u3002Thread.interrupted()\u53ef\u4ee5\u68c0\u6d4b\u662f\u5426\u6709\u4e2d\u65ad\u53d1\u751f\u3002 - \u5bf9\u8c61\u7ec8\u7ed3\u89c4\u5219(Finilizer Rule)\uff1a\u4e00\u4e2a\u5bf9\u8c61\u7684\u521d\u59cb\u5316\u5b8c\u6210\uff08\u6784\u9020\u51fd\u6570\u6267\u884c\u7ed3\u675f\uff09\u5148\u884c\u53d1\u751f\u4e8e\u5b83\u7684finalize()\u7684\u5f00\u59cb\u3002 - \u4f20\u9012\u6027(Transitivity)\uff1a\u5982\u679c\u64cd\u4f5cA \u5148\u884c\u53d1\u751f\u4e8e\u64cd\u4f5cB\uff0c\u64cd\u4f5cB \u5148\u884c\u53d1\u751f\u4e8e\u64cd\u4f5cC\uff0c\u90a3\u4e48\u53ef\u4ee5\u5f97\u51faA \u5148\u884c\u53d1\u751f\u4e8e\u64cd\u4f5cC\u3002 \u6572\u9ed1\u677f!!! \u4e0d\u540c\u64cd\u4f5c\u65f6\u95f4\u5148\u540e\u987a\u5e8f\u4e0e\u5148\u884c\u53d1\u751f\u539f\u5219\u4e4b\u95f4\u6ca1\u6709\u5173\u7cfb\uff0c\u4e8c\u8005\u4e0d\u80fd\u76f8\u4e92\u63a8\u65ad\uff0c\u8861\u91cf\u5e76\u53d1\u5b89\u5168\u95ee\u9898\u4e0d\u80fd\u53d7\u5230\u65f6\u95f4\u987a\u5e8f\u7684\u5e72\u6270\uff0c\u4e00\u5207\u90fd\u8981\u4ee5happens-before\u539f\u5219\u4e3a\u51c6. \u6572\u9ed1\u677f!!! 2.2 Volatile \u53d8\u91cf\u7684\u4e24\u79cd\u7279\u6027 \u00b6 \u4fdd\u6301\u53d8\u91cf\u7684\u53ef\u89c1\u6027 \u5c4f\u853d\u6307\u4ee4\u91cd\u6392\u5e8f 2.3 long/double\u975e\u539f\u5b50\u534f\u5b9a \u00b6 \u5141\u8bb8\u865a\u62df\u673a\u5c06\u6ca1\u6709\u88abvolatile\u4fee\u9970\u768464\u4f4d\u6570\u636e\u7684\u8bfb\u5199\u64cd\u4f5c\u5212\u5206\u4e3a2\u6b2132\u4f4d\u64cd\u4f5c\u8fdb\u884c 3. JMM\u7684\u56db\u4e2a\u7279\u6027 \u00b6 3.1 \u539f\u5b50\u6027 \u00b6 JMM\u4fdd\u8bc1\u7684\u539f\u5b50\u6027\u53d8\u91cf\u64cd\u4f5c\u5305\u62ecread\u3001load\u3001use\u3001assign\u3001store\u3001write\uff0c\u800clong\u3001double\u975e\u539f\u5b50\u534f\u5b9a\u5bfc\u81f4\u7684\u975e\u539f\u5b50\u6027\u64cd\u4f5c\u57fa\u672c\u53ef\u4ee5\u5ffd\u7565\u3002 3.2 \u53ef\u89c1\u6027 \u00b6 \u53ef\u89c1\u6027\u662f\u6307\u5f53\u4e00\u4e2a\u7ebf\u7a0b\u4fee\u6539\u4e86\u5171\u4eab\u53d8\u91cf\u7684\u503c\uff0c\u5176\u4ed6\u7ebf\u7a0b\u80fd\u591f\u7acb\u5373\u5f97\u77e5\u8fd9\u4e2a\u4fee\u6539\u3002JMM\u5728\u53d8\u91cf\u4fee\u6539\u540e\u5c06\u65b0\u503c\u540c\u6b65\u56de\u4e3b\u5185\u5b58\uff0c\u4f9d\u8d56\u4e3b\u5185\u5b58\u4f5c\u4e3a\u5a92\u4ecb\uff0c\u5728\u53d8\u91cf\u88ab\u7ebf\u7a0b\u8bfb\u53d6\u524d\u4ece\u5185\u5b58\u5237\u65b0\u53d8\u91cf\u65b0\u503c\uff0c\u4fdd\u8bc1\u53d8\u91cf\u7684\u53ef\u89c1\u6027\u3002\u666e\u901a\u53d8\u91cf\u548cvolatile\u53d8\u91cf\u90fd\u662f\u5982\u6b64\uff0c\u53ea\u4e0d\u8fc7volatile\u7684\u7279\u6b8a\u89c4\u5219\u4fdd\u8bc1\u4e86\u8fd9\u79cd\u53ef\u89c1\u6027\u662f\u7acb\u5373\u5f97\u77e5\u7684\uff0c\u800c\u666e\u901a\u53d8\u91cf\u5e76\u4e0d\u5177\u5907\u8fd9\u79cd\u4e25\u683c\u7684\u53ef\u89c1\u6027\u3002\u9664\u4e86volatile\u5916\uff0csynchronized\u548cfinal\u4e5f\u80fd\u4fdd\u8bc1\u53ef\u89c1\u6027\u3002 3.3 \u6709\u5e8f\u6027 \u00b6 JVM\u7684\u6709\u5e8f\u6027\u8868\u73b0\u4e3a\uff1a\u5982\u679c\u5728\u672c\u7ebf\u7a0b\u5185\u89c2\u5bdf\uff0c\u6240\u6709\u7684\u64cd\u4f5c\u90fd\u662f\u6709\u5e8f\u7684\uff1b\u5982\u679c\u5728\u4e00\u4e2a\u7ebf\u7a0b\u4e2d\u89c2\u5bdf\u53e6\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u6240\u6709\u7684\u64cd\u4f5c\u90fd\u662f\u65e0\u5e8f\u7684\u3002 3.4 \u91cd\u6392\u5e8f \u00b6 \u5728\u6267\u884c\u7a0b\u5e8f\u65f6\u4e3a\u4e86\u63d0\u9ad8\u6027\u80fd\uff0c\u7f16\u8bd1\u5668\u548c\u5904\u7406\u5668\u7ecf\u5e38\u4f1a\u5bf9\u6307\u4ee4\u8fdb\u884c\u91cd\u6392\u5e8f\u3002\u4ece\u786c\u4ef6\u67b6\u6784\u4e0a\u6765\u8bf4\uff0c\u6307\u4ee4\u91cd\u6392\u5e8f\u662f\u6307CPU\u91c7\u7528\u4e86\u5141\u8bb8\u5c06\u591a\u6761\u6307\u4ee4\u4e0d\u6309\u7167\u7a0b\u5e8f\u89c4\u5b9a\u7684\u987a\u5e8f\uff0c\u5206\u5f00\u53d1\u9001\u7ed9\u5404\u4e2a\u76f8\u5e94\u7535\u8def\u5355\u5143\u5904\u7406\uff0c\u800c\u4e0d\u662f\u6307\u4ee4\u4efb\u610f\u91cd\u6392\u3002 - \u7f16\u8bd1\u5668\u4f18\u5316\u7684\u91cd\u6392\u5e8f - \u6307\u4ee4\u7ea7\u5e76\u884c\u7684\u91cd\u6392\u5e8f - \u5185\u5b58\u7cfb\u7edf\u7684\u91cd\u6392\u5e8f \u6e90\u4ee3\u7801 --> \u7f16\u8bd1\u5668\u4f18\u5316\u7684\u91cd\u6392\u5e8f --> \u6307\u4ee4\u7ea7\u5e76\u884c\u7684\u91cd\u6392\u5e8f --> \u5185\u5b58\u7cfb\u7edf\u7684\u91cd\u6392\u5e8f --> \u6700\u7ec8\u6267\u884c 4. Java\u4e2d\u7684ReentrantLock \u00b6 \u4e00\u4e2a\u7ebf\u7a0b\u5982\u679c\u5df2\u7ecf\u83b7\u5f97\u4e00\u4e2a\u5bf9\u8c61\u7684\u9501\uff0c\u90a3\u4e48\u8be5\u7ebf\u7a0b\u5728\u6301\u6709\u9501\u7684\u671f\u95f4\u53ef\u4ee5\u91cd\u590d\u591a\u6b21\u83b7\u5f97\u6539\u5bf9\u8c61\u7684\u9501\u3002Java\u4e2d\u7684synchronized\u5757\u662f\u53ef\u4ee5\u88ab\u91cd\u5165\u7684\u3002\u5f53\u591a\u4e2a\u7ebf\u7a0b\u5bf9\u5171\u4eab\u8d44\u6e90\u6fc0\u70c8\u7ade\u4e89\u7684\u65f6\u5019\uff0c\u4f7fCPU\u51cf\u5c11\u9891\u7e41\u7684\u7ebf\u7a0b\u8c03\u5ea6\uff0c\u662f\u7ebf\u7a0b\u7684\u6267\u884c\u6548\u7387\u66f4\u9ad8\u3002 ReentrantLock\u6709\u4e24\u79cd\u5b9e\u73b0\uff0c\u4e00\u79cd\u662f\u516c\u5e73\u9501\uff0c\u53e6\u5916\u4e00\u79cd\u662f\u975e\u516c\u5e73\u9501\u3002\u516c\u5e73\u9501\u5c31\u662f\u4e00\u4e2a\u7ebf\u7a0b\u7b49\u5f85\u83b7\u53d6\u67d0\u4e2a\u9501\u7684\u65f6\u95f4\u6700\u957f\uff0c\u90a3\u4e48\u8be5\u7ebf\u7a0b\u6700\u5148\u83b7\u5f97\u9501\u3002\u800c\u975e\u516c\u5e73\u9501\u5219\u4e0d\u4e00\u5b9a\u3002 4.1 \u5982\u4f55\u4f7f\u7528 \u00b6 {% highlight Java %} //\u516c\u5e73\u9501new ReentrantLock(true),\u975e\u516c\u5e73\u9501new ReentrantLock(false)[\u63a8\u8350] Lock lock = new ReentrantLock(false); lock.lock(); try { //\u5bf9\u5171\u4eab\u8d44\u6e90\u7684\u64cd\u4f5c } finally { lock.unlock(); } {% endhighlight %} 4.2 \u901a\u8fc7\u4ee3\u7801\u6765\u770b\u5982\u4f55\u5b9e\u73b0 \u00b6 \u975e\u516c\u5e73\u9501: {% highlight Java %} static final class NonfairSync extends Sync { final void lock() { //\u5982\u679cCAS\u6210\u529f\uff0c\u5c06\u5f53\u524d\u7ebf\u7a0b\u8bbe\u7f6e\u4e3a\u8d44\u6e90\u7684\u6301\u6709\u8005 if (compareAndSetState(0, 1)) setExclusiveOwnerThread(Thread.currentThread()); else //\u5426\u5219\uff0c\u5c1d\u8bd5\u7533\u8bf7\u8d44\u6e90 acquire(1); } protected final boolean tryAcquire(int acquires) { //\u4f7f\u7528\u975e\u516c\u5e73\u9501\u7684\u673a\u5236\u53bb\u83b7\u53d6\u8d44\u6e90 return nonfairTryAcquire(acquires); } } final boolean nonfairTryAcquire(int acquires) { final Thread current = Thread.currentThread(); int c = getState(); //\u5982\u679c\u5177\u5907\u83b7\u53d6\u8d44\u6e90\u7684\u6761\u4ef6\uff0c\u8bbe\u7f6e\u5f53\u524d\u7ebf\u7a0b\u4e3a\u8d44\u6e90\u7684\u6301\u6709\u8005\uff0c\u8fd4\u56de if (c == 0) { if (compareAndSetState(0, acquires)) { setExclusiveOwnerThread(current); return true; } } //\u5982\u679c\u53d1\u73b0\u7533\u8bf7\u8d44\u6e90\u7684\u7ebf\u7a0b\u662f\u6301\u6709\u8be5\u8d44\u6e90\u7ebf\u7a0b\u672c\u8eab\uff0c\u5219\u5c06\u72b6\u6001\u52a01,\u8fd4\u56de else if (current == getExclusiveOwnerThread()) { int nextc = c + acquires; if (nextc < 0) // overflow throw new Error(\"Maximum lock count exceeded\"); setState(nextc); return true; } return false; } {% endhighlight %} \u516c\u5e73\u9501: {% highlight Java %} static final class FairSync extends Sync { private static final long serialVersionUID = -3000897897090466540L; final void lock() { acquire(1); } /** * Fair version of tryAcquire. Don't grant access unless * recursive call or no waiters or is first. */ protected final boolean tryAcquire(int acquires) { final Thread current = Thread.currentThread(); int c = getState(); if (c == 0) { //\u6b64\u5904\u591a\u4e00\u4e2a\u6761\u4ef6\uff0c\u8be5\u7ebf\u7a0b\u524d\u9762\u6ca1\u6709\u5176\u4ed6\u7684\u7ebf\u7a0b\u5728\u7b49\u5f85\u83b7\u53d6\u5171\u4eab\u8d44\u6e90\u7684\u9501 if (!hasQueuedPredecessors() && compareAndSetState(0, acquires)) { setExclusiveOwnerThread(current); return true; } } else if (current == getExclusiveOwnerThread()) { int nextc = c + acquires; if (nextc < 0) throw new Error(\"Maximum lock count exceeded\"); setState(nextc); return true; } return false; } } {% endhighlight %} 5. Read / Write Locks \u00b6 ReentrantReadWriteLock\u662fReadWriteLock\u7684\u4e00\u79cd\u5b9e\u73b0\uff0c\u8be5\u7c7b\u5305\u542b\u4e24\u4e2a\u9501\uff0c\u4e00\u4e2a\u662f\u8bfb\u9501\uff0c\u4e00\u4e2a\u662f\u5199\u9501\u3002 {% highlight Java %} public ReentrantReadWriteLock(boolean fair) { sync = fair ? new FairSync() : new NonfairSync(); //\u8bfb\u9501 readerLock = new ReadLock(this); //\u5199\u9501 writerLock = new WriteLock(this); } {% endhighlight %} \u5199\u9501\u7684\u7533\u8bf7\u6761\u4ef6: {% highlight Java %} / * \u7533\u8bf7\u5199\u9501. * * 1.\u8be5\u7ebf\u7a0b\u7533\u8bf7\u7684\u65f6\u523b\u6ca1\u6709\u5176\u4ed6\u7684\u7ebf\u7a0b\u6301\u6709\u8bfb\u9501\u6216\u8005\u5199\u9501\uff0c\u7533\u8bf7\u6210\u529f\u540e\u5c06\u5199\u9501\u7684\u6301\u6709\u6570\u76ee\u66f4\u65b0\u4e3a1. * 2.\u5982\u679c\u8be5\u7ebf\u7a0b\u7533\u8bf7\u7684\u65f6\u523b\u5df2\u7ecf\u6301\u6709\u5199\u9501\uff0c\u4ec5\u4ec5\u5c06\u6301\u6709\u7684\u6570\u76ee+1. * 3.\u8be5\u7ebf\u7a0b\u7533\u8bf7\u7684\u65f6\u523b\u5982\u679c\u6709\u5176\u4ed6\u7684\u7ebf\u7a0b\u6b63\u5728\u6301\u6709\u5199\u9501\uff0c\u5219\u5f53\u524d\u7684\u7ebf\u7a0b\u5c06\u4e0d\u4f1a\u88ab\u7ebf\u7a0b\u8c03\u5ea6\u5668\u8c03\u5ea6\u5c06\u4f1a\u8fdb\u5165lies dormant\u72b6\u6001\uff0c\u53ea\u81f3\u8be5\u7ebf\u7a0b\u83b7\u5f97\u5199\u9501. * \u6210\u529f\u540e\u5c06\u5199\u9501\u7684\u6301\u6709\u6570\u76ee\u66f4\u65b0\u4e3a1. */ public void lock() { sync.acquire(1); } {% endhighlight%} \u8bfb\u9501\u7684\u7533\u8bf7\u6761\u4ef6: {% highlight Java %} / * \u7533\u8bf7\u8bfb\u9501. * * 1.\u8be5\u7ebf\u7a0b\u7533\u8bf7\u65f6\u523b\u6ca1\u6709\u5176\u4ed6\u7ebf\u7a0b\u6301\u6709\u5199\u9501\u3002 * 2.\u8be5\u7ebf\u7a0b\u7533\u8bf7\u7684\u65f6\u523b\u5982\u679c\u6709\u5176\u4ed6\u7684\u7ebf\u7a0b\u6b63\u5728\u6301\u6709\u5199\u9501\uff0c\u5219\u5f53\u524d\u7684\u7ebf\u7a0b\u5c06\u4e0d\u4f1a\u88ab\u7ebf\u7a0b\u8c03\u5ea6\u5668\u8c03\u5ea6\u5c06\u4f1a\u8fdb\u5165lies dormant\u72b6\u6001\uff0c\u53ea\u81f3\u8be5\u7ebf\u7a0b\u83b7\u5f97\u8bfb\u9501. */ public void lock() { sync.acquireShared(1); } {% endhighlight %} 6. ExecutorService \u00b6 {% highlight Java %} ExecutorService fixedThreadPool =Executors.newFixedThreadPool(9); fixedThreadPool.execute(new Thread() {public void run() { //operation }}); ExecutorService singleThreadPool =Executors.newSingleThreadExecutor(); ExecutorService cachedThreadPool =Executors.newCachedThreadPool(); {% endhighlight %} 7. CountDownLatch \u00b6 \u4e00\u822c\u7528\u4e8e\u4e3b\u7ebf\u7a0b\u6267\u884c\u67d0\u4e9b\u6307\u4ee4\u4e4b\u524d\uff0c\u9700\u8981\u7b49\u5f85\u5176\u4ed6\u7684\u51e0\u4e2a\u7ebf\u7a0b\u5168\u90e8\u5b8c\u6210. {% highlight Java %} public class Test { public static void main(String[] args) { //\u4e3b\u7ebf\u7a0b\u4e2d\u521b\u5efa\u4e00\u4e2aCountDownLatch\u5bf9\u8c61,\u6784\u9020\u51fd\u6570\u7684\u53c2\u6570\u8868\u793a\u7ebf\u7a0b\u7684\u6570\u76ee CountDownLatch countDownLatch = new CountDownLatch(5); for (int i = 0; i < 5; i++) { Thread thread = new MyThread(countDownLatch); thread.setName(\"Thread \" + i); thread.start(); } try { //\u8c03\u7528await\u65b9\u6cd5\u7b49\u5f85\u5176\u4ed6\u7ebf\u7a0b\u7684\u5de5\u4f5c\u5168\u90e8\u5b8c\u6210 countDownLatch.await(); } catch (InterruptedException e) { } System.out.println(\"All pre Job are done.\"); } } class MyThread extends Thread { private CountDownLatch countDownLatch; public MyThread(CountDownLatch countDownLatch) { this.countDownLatch = countDownLatch; } public void run() { System.out.println(getName() + \" is Done!\"); //\u4f7f\u7528CountDownLatch\u5bf9\u8c61\u9012\u51cf\u5df2\u7ecf\u5b8c\u6210\u7684\u7ebf\u7a0b\u6570\u91cf countDownLatch.countDown(); } } {% endhighlight %} 8. Future\u7c7b\u7684\u4f7f\u7528 \u00b6 Future \u662f\u4e00\u4e2a\u63a5\u53e3\uff0c\u901a\u8fc7\u5b83\u53ef\u4ee5\u83b7\u5f97\u7ebf\u7a0b\u6267\u884c\u5b8c\u6210\u4e4b\u540e\u7684\u8fd4\u56de\u503c. Future\u6ca1\u6709\u63d0\u4f9b\u7ebf\u7a0b\u5b8c\u6210\u901a\u77e5\u7684\u673a\u5236\uff0c\u53ea\u80fd\u901a\u8fc7\u8f6e\u8be2\u8c03\u7528isDone()\u65b9\u6cd5\u6216\u8005\u8c03\u7528get()\u65b9\u6cd5\u963b\u585e\u7ebf\u7a0b\u6765\u83b7\u5f97\u7ed3\u679c\u3002 {% highlight Java %} boolean cancel(boolean mayInterruptIfRunning); boolean isCancelled(); boolean isDone(); V get() throws InterruptedException, ExecutionException; V get(long timeout, TimeUnit unit) throws InterruptedException, ExecutionException, TimeoutException; {% endhighlight %} Java8 \u63d0\u4f9b\u7684CompletableFuture\u53ef\u4ee5\u5f25\u8865Future\u7684\u4e0d\u8db3,\u8ba9Java\u62e5\u6709\u4e86\u5b8c\u6574\u7684\u975e\u963b\u585e\u7f16\u7a0b\u6a21\u578b. public class CompletableFuture < T > implements Future < T >, CompletionStage < T > {} 9. Java\u4e2d\u7684CAS \u00b6 CAS\u662fcompare and swap \u7684\u7f29\u5199\u3002\u968f\u7740Java\u7684\u53d1\u5c55\uff0cJava\u672c\u5730\u65b9\u6cd5\u8c03\u7528(JNI)\u7684\u51fa\u73b0\uff0c\u4f7f\u5f97Java\u7a0b\u5e8f\u53ef\u4ee5\u8d8a\u8fc7JVM\u800c\u76f4\u63a5\u8c03\u7528\u672c\u5730\u65b9\u6cd5\uff0c\u8fd9\u4e3aJava\u5b9e\u73b0\u5e76\u53d1\u62d3\u5c55\u4e00\u6761\u65b0\u7684\u9014\u5f84\u3002CAS\u7406\u8bba\u662fjava concurrent\u5305\u7684\u7406\u8bba\u57fa\u77f3\u3002 Java\u53ef\u4ee5\u901a\u8fc7synchronized\u5b9e\u73b0\u7ebf\u7a0b\u4e4b\u95f4\u540c\u6b65\uff0c\u4f46\u662f\u8fd9\u79cd\u65b9\u6cd5\u6709\u4ee5\u4e0b\u5f0a\u7aef: - \u5728\u591a\u7ebf\u7a0b\u73af\u5883\u4e0b\uff0c\u52a0\u9501\u548c\u91ca\u653e\u9501\uff0c\u6216\u5bfc\u81f4CPU\u6bd4\u8f83\u591a\u7684\u4e0a\u4e0b\u6587\u5207\u6362\uff0c\u5f71\u54cd\u6027\u80fd\u3002 - \u4e00\u4e2a\u7ebf\u7a0b\u6301\u6709\u9501\uff0c\u4f1a\u5bfc\u81f4\u5176\u4ed6\u9700\u8981\u6b64\u9501\u7684\u7ebf\u7a0b\u6302\u8d77\u3002 - \u5982\u679c\u4e00\u4e2a\u7ebf\u7a0b\u4f18\u5148\u7ea7\u9ad8\u7684\u53bb\u957f\u65f6\u95f4\u7b49\u5f85\u4f18\u5148\u7ea7\u6bd4\u8f83\u4f4e\u7684\u7ebf\u7a0b\u91ca\u653e\u9501\uff0c\u4e5f\u4f1a\u5f15\u8d77\u6027\u80fd\u98ce\u9669\u3002 Synchronized\u5c31\u662f\u4e00\u79cd\u72ec\u5360\u9501\u6216\u8005\u662f\u60b2\u89c2\u9501\uff0c\u4e50\u89c2\u9501\u5c31\u662f\u6bcf\u6b21\u64cd\u4f5c\u90fd\u4e0d\u52a0\u9501\u800c\u662f\u5047\u8bbe\u8be5\u7ebf\u7a0b\u6ca1\u6709\u548c\u5176\u4ed6\u7ebf\u7a0b\u51b2\u7a81\uff0c\u5982\u679c\u6709\u51b2\u7a81\u5931\u8d25\u5c31\u91cd\u8bd5\uff0c\u76f4\u5230\u6210\u529f\u4e3a\u6b62\uff0c\u901a\u8fc7CAS\u53ef\u4ee5\u5b9e\u73b0\u4e50\u89c2\u9501\u3002 CAS\u5305\u542b\u4e09\u4e2a\u64cd\u4f5c\u6570:\u5185\u5b58\u4f4d\u7f6e(V), \u9884\u671f\u539f\u503c(A)\u548c\u65b0\u503c(B)\u3002\u5982\u679c\u5185\u5b58\u4f4d\u7f6e\u7684\u5f53\u524d\u503c\u4e0e\u9884\u671f\u539f\u503c\u4e00\u6837\uff0c\u90a3\u4e48\u5904\u7406\u5668\u5c31\u4f1a\u5c06\u65b0\u503c\u66f4\u65b0\u5185\u5b58\u4f4d\u7f6e(V)\u7684\u503c\u3002\u5426\u5219\uff0c\u4e0d\u505a\u4efb\u4f55\u64cd\u4f5c\uff0c\u53ea\u9700\u8981\u544a\u8bc9\u6211\u5185\u5b58\u4f4d\u7f6e(V)\u7684\u503c\u5c31\u597d\u4e86\u3002\u65e0\u8bba\u54ea\u79cd\u60c5\u51b5\uff0c\u5b83\u90fd\u4f1a\u5728 CAS\u6307\u4ee4\u4e4b\u524d\u8fd4\u56de\u8be5\u4f4d\u7f6e\u7684\u503c\u3002 10. JVM\u5185\u5b58\u6a21\u578b (jdk1.8) \u00b6 \u7a0b\u5e8f\u8ba1\u6570\u5668 \u6bcf\u4e2aJVM\u7ebf\u7a0b\u90fd\u6709\u72ec\u81ea\u7684\u7a0b\u5e8f\u8ba1\u6570\u5668\uff0cJVM\u7ebf\u7a0b\u6b63\u5728Running\u7684\u65b9\u6cd5\u79f0\u4e3acurrent method.\u5982\u679c\u8be5\u65b9\u6cd5\u4e0d\u662f\u4e00\u4e2anative\u65b9\u6cd5\uff0c\u7a0b\u5e8f\u8ba1\u6570\u5668\u6307\u5411\u6b63\u5728\u6267\u884c\u7684\u8bed\u53e5\u7684\u5730\u5740\uff0c\u5982\u679c\u8be5\u65b9\u6cd5\u662f\u4e00\u4e2a\u672c\u5730\u65b9\u6cd5\uff0c\u90a3\u4e48\u7a0b\u5e8f\u8ba1\u6570\u5668\u7684\u503c\u662fundefined. Java\u865a\u62df\u673a\u6808 \u6bcf\u4e2aJVM\u7ebf\u7a0b\u90fd\u6709\u72ec\u81ea\u7684Java\u865a\u62df\u673a\u6808\uff0c\u968f\u7740\u7ebf\u7a0b\u7684\u521b\u5efa\u800c\u521b\u5efa\u3002\u4fdd\u5b58\u672c\u5730\u53d8\u91cf\u7684\u503c\u548c\u65b9\u6cd5\u7684\u90e8\u5206\u8fd4\u56de\u503c\uff0c\u4f5c\u4e3a\u65b9\u6cd5\u8c03\u7528\u548creturn\u7684\u4e00\u90e8\u5206\u3002\u4e00\u822c\u60c5\u51b5\u4e0b\u4e0d\u4f1a\u5bf9Java\u865a\u62df\u673a\u6808\u76f4\u63a5\u64cd\u4f5c\uff0c\u9664\u4e86\u5bf9\u5e27\u8fdb\u884cpop\u548cpush\u64cd\u4f5c\uff0c\u56e0\u6b64\u8fd9\u5757\u5185\u5b58\u4e00\u822c\u4e0d\u662f\u8fde\u7eed\u7684\u3002 \u5806 \u5806\u88abJava\u865a\u62df\u673a\u4e2d\u7684\u6240\u6709\u7ebf\u7a0b\u5171\u4eab\uff0c\u662f\u8fd0\u884c\u65f6\u7684\u6570\u636e\u533a\uff0c\u5b58\u653e\u7c7b\u7684\u5b9e\u4f8b\uff0c\u4ee5\u53ca\u5b58\u653e\u6570\u7ec4\u6570\u636e\u3002\u5806\u4e0a\u7684\u6570\u636e\u88ab\u5783\u573e\u56de\u6536\u5668\u56de\u6536\u6e05\u7406\u3002\u5806\u7684\u5927\u5c0f\u53ef\u4ee5\u662f\u56fa\u5b9a\u7684\u6216\u8005\u53ef\u4ee5\u88ab\u6269\u5c55\u3002\u5982\u679c\u7a0b\u5e8f\u5728\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u6240\u9700\u7684\u5806\u7684\u5927\u5c0f\u8d85\u51fa\u53ef\u63d0\u4f9b\u7684\u5bf9\u5927\u5c0f\uff0c\u5c06\u4f1a\u629b\u51faOOM\u5f02\u5e38\u3002 \u672c\u5730\u65b9\u6cd5\u533a Java\u865a\u62df\u673a\u53ef\u4ee5\u8c03\u7528\u672c\u5730\u65b9\u6cd5\u7684\u4e00\u79cd\u5b9e\u73b0\u3002\u8fd9\u4e9b\u672c\u5730\u65b9\u6cd5\u53ef\u80fd\u901a\u8fc7\u5176\u4ed6\u7684\u8bed\u8a00\u5b9e\u73b0\uff0c\u6bd4\u5982C\uff0cC++.\u672c\u5730\u65b9\u6cd5\u6808\u4e5f\u7528\u6765\u5b9e\u73b0\u4e00\u4e9b\u7528C\u8bed\u8a00\u5b9e\u73b0\u7684JVM\u6307\u4ee4\u3002\u672c\u5730\u65b9\u6cd5\u6808\u7684\u5927\u5c0f\u53ef\u4ee5\u662f\u56fa\u5b9a\u7684\uff0c\u4e5f\u53ef\u4ee5\u88ab\u52a8\u6001\u6269\u5c55\u3002 \u5e27 \u5e27\u88ab\u5206\u914d\u5728\u6bcf\u4e2aJVM\u7ebf\u7a0b\u8fd0\u884c\u65f6\u7684Java\u865a\u62df\u673a\u6808\u4e0a\u3002\u968f\u7740\u65b9\u6cd5\u88ab\u8c03\u7528\u800c\u521b\u5efa\uff0c\u7528\u6765\u5b58\u653e\u65b9\u6cd5\u7684\u672c\u5730\u53d8\u91cf\uff0c\u90e8\u5206\u7684\u8fd4\u56de\u7ed3\u679c\uff0c\u6267\u884c\u52a8\u6001\u94fe\u63a5\uff0c\u6216\u8005\u5206\u53d1\u5f02\u5e38\u3002\u6bcf\u4e00\u4e2a\u5e27\u90fd\u62e5\u6709\u81ea\u5df1\u7684\u672c\u5730\u53d8\u91cf\u6570\u7ec4\uff0c\u64cd\u4f5c\u6808\uff0c\u4ee5\u53ca\u4e00\u4e2a\u5f53\u524d\u65b9\u6cd5\u7684\u5f15\u7528\uff0c\u8fd9\u4e2a\u5f15\u7528\u6307\u5411\u8fd0\u884c\u65f6\u7684\u5e38\u91cf\u6c60\u3002\u7a0b\u5e8f\u7f16\u8bd1\u65f6\u51b3\u5b9a\u4e3a\u8be5\u65b9\u6cd5\u5206\u914d\u7684\u5e27\u5927\u5c0f\u3002\u5e27\u53ea\u80fd\u88ab\u521b\u5efa\u5b83\u7684\u7ebf\u7a0b\u4f7f\u7528\u3002\u4e0d\u80fd\u88ab\u5176\u4ed6\u7ebf\u7a0b\u5171\u4eab\u3002 \u5143\u6570\u636e\u533a jdk1.8\u4e4b\u524d\u4f7f\u7528PermGen\u5b58\u653e\u7c7b\u7684\u5143\u6570\u636e\u4fe1\u606f\uff0c\u5728jdk1.8\u4e2d\u7528\u5143\u6570\u636e\u533a\u5b58\u653e\u7c7b\u7684\u5143\u6570\u636e\u4fe1\u606f\u3002\u5143\u6570\u636e\u533a\u662f\u5c5e\u4e8e\u7cfb\u7edf\u5185\u5b58\u7684\u4e00\u90e8\u5206\uff0c\u53ef\u4ee5\u6700\u5927\u53ef\u5229\u7528\u7a7a\u95f4\u662f\u6574\u4e2a\u7cfb\u7edf\u5185\u5b58\u7684\u53ef\u7528\u7a7a\u95f4\u3002 -XX:MetaspaceSize \u5143\u6570\u636e\u533a\u7684\u521d\u59cb\u7a7a\u95f4\u5927\u5c0f -XX\uff1aMaxMetaspaceSize \u5143\u6570\u636e\u533a\u6700\u5927\u7a7a\u95f4\u5927\u5c0f -XX\uff1aMinMetaspaceFreeRatio \u5728GC\u4e4b\u540e\uff0c\u6700\u5c0f\u7684Metaspace\u5269\u4f59\u7a7a\u95f4\u5bb9\u91cf\u7684\u767e\u5206\u6bd4\uff0c\u51cf\u5c11\u4e3aclass metadata\u5206\u914d\u7a7a\u95f4\u5bfc\u81f4\u7684\u5783\u573e\u6536\u96c6 -XX:MaxMetaspaceFreeRatio,\u5728GC\u4e4b\u540e\uff0c\u6700\u5927\u7684Metaspace\u5269\u4f59\u7a7a\u95f4\u5bb9\u91cf\u7684\u767e\u5206\u6bd4\uff0c\u51cf\u5c11\u4e3aclass metadata\u91ca\u653e\u7a7a\u95f4\u5bfc\u81f4\u7684\u5783\u573e\u6536\u96c6 \u5f15\u7528 \u00b6 \u53c2\u8003\u94fe\u63a51 \u53c2\u8003\u94fe\u63a52 \u53c2\u8003\u94fe\u63a53 \u53c2\u8003\u94fe\u63a54 \u53c2\u8003\u94fe\u63a55 Java Virtual Machine Specification","title":"Java Concurrent"},{"location":"Java/2018-03-22-concurrent-java/#1","text":"\u4e00\u4e2a\u5178\u578b\u7684CPU\u67b6\u6784 \u7279\u70b9\u5982\u4e0b\uff1a - \u591a\u4e2aCPU - CPU\u5bc4\u5b58\u5668 - \u9ad8\u901f\u7f13\u5b58Cache - \u5185\u5b58 \u7531\u4e8e\u8ba1\u7b97\u673a\u7684\u5b58\u50a8\u8bbe\u5907\u4e0e\u5904\u7406\u5668\u7684\u8fd0\u7b97\u80fd\u529b\u4e4b\u95f4\u6709\u51e0\u4e2a\u6570\u91cf\u7ea7\u7684\u5dee\u8ddd\uff0c\u6240\u4ee5\u73b0\u4ee3\u8ba1\u7b97\u673a\u7cfb\u7edf\u90fd\u4e0d\u5f97\u4e0d\u52a0\u5165\u4e00\u5c42\u8bfb\u5199\u901f\u5ea6\u5c3d\u53ef\u80fd\u63a5\u8fd1\u5904\u7406\u5668\u8fd0\u7b97\u901f\u5ea6\u7684\u9ad8\u901f\u7f13\u5b58(cache)\u6765\u4f5c\u4e3a\u5185\u5b58\u4e0e\u5904\u7406\u5668\u4e4b\u95f4\u7684\u7f13\u51b2\uff1a\u5c06\u8fd0\u7b97\u9700\u8981\u4f7f\u7528\u5230\u7684\u6570\u636e\u590d\u5236\u5230\u7f13\u5b58\u4e2d\uff0c\u8ba9\u8fd0\u7b97\u80fd\u5feb\u901f\u8fdb\u884c\uff0c\u5f53\u8fd0\u7b97\u7ed3\u675f\u540e\u518d\u4ece\u7f13\u5b58\u540c\u6b65\u56de\u5185\u5b58\u4e4b\u4e2d\uff0c\u8fd9\u6837\u5904\u7406\u5668\u5c31\u65e0\u9700\u7b49\u5f85\u7f13\u6162\u7684\u5185\u5b58\u8bfb\u5199\u4e86\u3002 \u57fa\u4e8e\u9ad8\u901f\u7f13\u5b58\u7684\u5b58\u50a8\u4ea4\u4e92\u5f88\u597d\u5730\u89e3\u51b3\u4e86\u5904\u7406\u5668\u4e0e\u5185\u5b58\u7684\u901f\u5ea6\u77db\u76fe\uff0c\u4f46\u662f\u5f15\u5165\u4e86\u4e00\u4e2a\u65b0\u7684\u95ee\u9898\uff1a\u7f13\u5b58\u4e00\u81f4\u6027\uff08Cache Coherence\uff09\u3002\u5728\u591a\u5904\u7406\u5668\u7cfb\u7edf\u4e2d\uff0c\u6bcf\u4e2a\u5904\u7406\u5668\u90fd\u6709\u81ea\u5df1\u7684\u9ad8\u901f\u7f13\u5b58\uff0c\u800c\u4ed6\u4eec\u53c8\u5171\u4eab\u540c\u4e00\u4e3b\u5b58\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a\u591a\u4e2a\u5904\u7406\u5668\u8fd0\u7b97\u4efb\u52a1\u90fd\u6d89\u53ca\u540c\u4e00\u5757\u4e3b\u5b58\uff0c\u9700\u8981\u4e00\u79cd\u534f\u8bae\u53ef\u4ee5\u4fdd\u969c\u6570\u636e\u7684\u4e00\u81f4\u6027\uff0c\u8fd9\u7c7b\u534f\u8bae\u6709MSI\u3001MESI\u3001MOSI\u53caDragon Protocol\u7b49\u3002 \u9664\u6b64\u4e4b\u5916\uff0c\u4e3a\u4e86\u4f7f\u5f97\u5904\u7406\u5668\u5185\u90e8\u7684\u8fd0\u7b97\u5355\u5143\u80fd\u5c3d\u53ef\u80fd\u88ab\u5145\u5206\u5229\u7528\uff0c\u5904\u7406\u5668\u53ef\u80fd\u4f1a\u5bf9\u8f93\u5165\u4ee3\u7801\u8fdb\u884c\u4e71\u5e8f\u6267\u884c\uff08Out-Of-Order Execution\uff09\u4f18\u5316\uff0c\u5904\u7406\u5668\u4f1a\u5728\u8ba1\u7b97\u4e4b\u540e\u5c06\u5bf9\u4e71\u5e8f\u6267\u884c\u7684\u4ee3\u7801\u8fdb\u884c\u7ed3\u679c\u91cd\u7ec4\uff0c\u4fdd\u8bc1\u7ed3\u679c\u51c6\u786e\u6027\u3002\u4e0e\u5904\u7406\u5668\u7684\u4e71\u5e8f\u6267\u884c\u4f18\u5316\u7c7b\u4f3c\uff0cJava\u865a\u62df\u673a\u7684\u5373\u65f6\u7f16\u8bd1\u5668\u4e2d\u4e5f\u6709\u7c7b\u4f3c\u7684\u6307\u4ee4\u91cd\u6392\u5e8f\uff08Instruction Recorder\uff09\u4f18\u5316\u3002","title":"1. \u8ba1\u7b97\u673a\u786c\u4ef6\u67b6\u6784\u7684\u7b80\u5355\u56fe\u793a"},{"location":"Java/2018-03-22-concurrent-java/#2-javajava-memory-model-jmm","text":"Java\u865a\u62df\u673a\u89c4\u8303\u4e2d\u5b9a\u4e49\u4e86Java\u5185\u5b58\u6a21\u578b(Java Memory Model\uff0cJMM),\u7528\u4e8e\u5c4f\u853d\u6389\u5404\u79cd\u786c\u4ef6\u548c\u64cd\u4f5c\u7cfb\u7edf\u7684\u5185\u5b58\u8bbf\u95ee\u5dee\u5f02\uff0c\u4ee5\u5b9e\u73b0\u8ba9Java\u7a0b\u5e8f\u5728\u5404\u79cd\u5e73\u53f0\u4e0b\u90fd\u80fd\u8fbe\u5230\u4e00\u81f4\u7684\u5e76\u53d1\u6548\u679c\uff0cJMM\u89c4\u8303\u4e86Java\u865a\u62df\u673a\u4e0e\u8ba1\u7b97\u673a\u5185\u5b58\u662f\u5982\u4f55\u534f\u540c\u5de5\u4f5c\u7684\uff1a\u89c4\u5b9a\u4e86\u4e00\u4e2a\u7ebf\u7a0b\u5982\u4f55\u548c\u4f55\u65f6\u53ef\u4ee5\u770b\u5230\u7531\u5176\u4ed6\u7ebf\u7a0b\u4fee\u6539\u8fc7\u540e\u7684\u5171\u4eab\u53d8\u91cf\u7684\u503c\uff0c\u4ee5\u53ca\u5728\u5fc5\u987b\u65f6\u5982\u4f55\u540c\u6b65\u7684\u8bbf\u95ee\u5171\u4eab\u53d8\u91cf. Java\u5185\u5b58\u6a21\u578b\u901a\u8fc7\u56fe\u4e2d\u7684\u516b\u79cd\u64cd\u4f5c\u6765\u5b8c\u6210\u53d8\u91cf\u4ece\u4e3b\u5185\u5b58\u52a0\u8f7d\u5230\u5de5\u4f5c\u5185\u5b58\uff0c\u7136\u540e\u4ece\u5de5\u4f5c\u5185\u5b58\u540c\u6b65\u5230\u4e3b\u5185\u5b58\u3002 Lock --> Read --> Load --> Use --> Assign --> Store --> Write --> Unlock JMM \u8981\u6c42\u8fd9\u4e2a\u8fc7\u7a0b\u5fc5\u987b\u6309\u987a\u5e8f\u6267\u884c\uff0c\u4f46\u662f\u53ef\u4ee5\u4e0d\u5fc5\u8fde\u7eed\u6267\u884c\uff01\u4e3e\u4e2a\u6817\u5b50\uff1a\uff08Read A\uff0cRead B, Load B, Load A, Store B, Write B, Store A, Write A\uff09\u3002 \u6b64\u5916\uff0cJMM\u8fd8\u89c4\u5b9a\u4e86\u6267\u884c\u4e0a\u8ff08\u4e2a\u64cd\u4f5c\u5fc5\u987b\u6ee1\u8db3\u4ee5\u4e0b\u89c4\u5219\uff1a - \u4e0d\u5141\u8bb8read\u548cload\u3001store\u548cwrite\u64cd\u4f5c\u4e4b\u4e00\u5355\u72ec\u51fa\u73b0 - \u4e0d\u5141\u8bb8\u4e00\u4e2a\u7ebf\u7a0b\u4e22\u5f03\u5b83\u7684\u6700\u8fd1assign\u7684\u64cd\u4f5c\uff0c\u5373\u53d8\u91cf\u5728\u5de5\u4f5c\u5185\u5b58\u4e2d\u6539\u53d8\u4e86\u4e4b\u540e\u5fc5\u987b\u540c\u6b65\u5230\u4e3b\u5185\u5b58\u4e2d - \u4e0d\u5141\u8bb8\u4e00\u4e2a\u7ebf\u7a0b\u65e0\u539f\u56e0\u5730\uff08\u6ca1\u6709\u53d1\u751f\u8fc7\u4efb\u4f55assign\u64cd\u4f5c\uff09\u628a\u6570\u636e\u4ece\u5de5\u4f5c\u5185\u5b58\u540c\u6b65\u56de\u4e3b\u5185\u5b58\u4e2d - \u4e00\u4e2a\u65b0\u7684\u53d8\u91cf\u53ea\u80fd\u5728\u4e3b\u5185\u5b58\u4e2d\u8bde\u751f\uff0c\u4e0d\u5141\u8bb8\u5728\u5de5\u4f5c\u5185\u5b58\u4e2d\u76f4\u63a5\u4f7f\u7528\u4e00\u4e2a\u672a\u88ab\u521d\u59cb\u5316\uff08load\u6216assign\uff09\u7684\u53d8\u91cf\u3002\u5373\u5c31\u662f\u5bf9\u4e00\u4e2a\u53d8\u91cf\u5b9e\u65bduse\u548cstore\u64cd\u4f5c\u4e4b\u524d\uff0c\u5fc5\u987b\u5148\u6267\u884c\u8fc7\u4e86assign\u548cload\u64cd\u4f5c - \u4e00\u4e2a\u53d8\u91cf\u5728\u540c\u4e00\u65f6\u523b\u53ea\u5141\u8bb8\u4e00\u6761\u7ebf\u7a0b\u5bf9\u5176\u8fdb\u884clock\u64cd\u4f5c\uff0clock\u548cunlock\u5fc5\u987b\u6210\u5bf9\u51fa\u73b0 - \u5982\u679c\u5bf9\u4e00\u4e2a\u53d8\u91cf\u6267\u884clock\u64cd\u4f5c\uff0c\u5c06\u4f1a\u6e05\u7a7a\u5de5\u4f5c\u5185\u5b58\u4e2d\u6b64\u53d8\u91cf\u7684\u503c\uff0c\u5728\u6267\u884c\u5f15\u64ce\u4f7f\u7528\u8fd9\u4e2a\u53d8\u91cf\u524d\u9700\u8981\u91cd\u65b0\u6267\u884cload\u6216assign\u64cd\u4f5c\u521d\u59cb\u5316\u53d8\u91cf\u7684\u503c - \u5982\u679c\u4e00\u4e2a\u53d8\u91cf\u4e8b\u5148\u6ca1\u6709\u88ablock\u64cd\u4f5c\u9501\u5b9a\uff0c\u5219\u4e0d\u5141\u8bb8\u5bf9\u5b83\u6267\u884cunlock\u64cd\u4f5c\uff1b\u4e5f\u4e0d\u5141\u8bb8\u53bbunlock\u4e00\u4e2a\u88ab\u5176\u4ed6\u7ebf\u7a0b\u9501\u5b9a\u7684\u53d8\u91cf - \u5bf9\u4e00\u4e2a\u53d8\u91cf\u6267\u884cunlock\u64cd\u4f5c\u4e4b\u524d\uff0c\u5fc5\u987b\u5148\u628a\u6b64\u53d8\u91cf\u540c\u6b65\u5230\u4e3b\u5185\u5b58\u4e2d\uff08\u6267\u884cstore\u548cwrite\u64cd\u4f5c\uff09 JMM \u4f7f\u7528\u5148\u884c\u53d1\u751f\uff08happens-before\uff09\u539f\u5219\u6765\u786e\u5b9a\u4e00\u4e2a\u5185\u5b58\u8bbf\u95ee\u5728\u5e76\u53d1\u73af\u5883\u4e2d\u662f\u5426\u5b89\u5168","title":"2. Java\u5185\u5b58\u6a21\u578b(Java Memory Model, JMM)"},{"location":"Java/2018-03-22-concurrent-java/#21-happens-before","text":"\u4e00\u53e5\u8bdd\u6982\u62ec\uff1a\u64cd\u4f5cA\u5148\u884c\u53d1\u751f\u4e8e\u64cd\u4f5cB\uff0c\u64cd\u4f5cA\u7684\u5f71\u54cd\u4f1a\u88ab\u64cd\u4f5cB\u89c2\u5bdf\u5230 \u4e3b\u8981\u5305\u62ec\u4ee5\u4e0b\u60c5\u51b5\uff1a - \u7a0b\u5e8f\u6b21\u5e8f\u89c4\u5219(Program Order Rule)\uff1a \u5728\u540c\u4e00\u4e2a\u7ebf\u7a0b\u4e2d\uff0c\u6309\u7167\u7a0b\u5e8f\u4ee3\u7801\u987a\u5e8f\uff0c\u4e66\u5199\u5728\u524d\u9762\u7684\u64cd\u4f5c\u5148\u884c\u53d1\u751f\u4e8e\u4e66\u5199\u5728\u540e\u9762\u7684\u64cd\u7eb5\u3002\u51c6\u786e\u7684\u8bf4\u662f\u7a0b\u5e8f\u7684\u63a7\u5236\u6d41\u987a\u5e8f\uff0c\u8003\u8651\u5206\u652f\u548c\u5faa\u73af\u7b49\u3002 - \u7ba1\u7406\u9501\u5b9a\u89c4\u5219(Monitor Lock Rule)\uff1a\u4e00\u4e2aunlock\u64cd\u4f5c\u5148\u884c\u53d1\u751f\u4e8e\u540e\u9762\uff08\u65f6\u95f4\u4e0a\u7684\u987a\u5e8f\uff09\u5bf9\u540c\u4e00\u4e2a\u9501\u7684lock\u64cd\u4f5c\u3002 - volatile\u53d8\u91cf\u89c4\u5219(Volatile Variable Rule)\uff1a\u5bf9\u4e00\u4e2avolatile\u53d8\u91cf\u7684\u5199\u64cd\u4f5c\u5148\u884c\u53d1\u751f\u4e8e\u540e\u9762\uff08\u65f6\u95f4\u4e0a\u7684\u987a\u5e8f\uff09\u5bf9\u8be5\u53d8\u91cf\u7684\u8bfb\u64cd\u4f5c\u3002 - \u7ebf\u7a0b\u542f\u52a8\u89c4\u5219(Thread Start Rule)\uff1aThread\u5bf9\u8c61\u7684start()\u65b9\u6cd5\u5148\u884c\u53d1\u751f\u4e8e\u6b64\u7ebf\u7a0b\u7684\u6bcf\u4e00\u4e2a\u52a8\u4f5c\u3002 - \u7ebf\u7a0b\u7ec8\u6b62\u89c4\u5219(Thread Termination Rule)\uff1a\u7ebf\u7a0b\u7684\u6240\u6709\u64cd\u4f5c\u90fd\u5148\u884c\u53d1\u751f\u4e8e\u5bf9\u6b64\u7ebf\u7a0b\u7684\u7ec8\u6b62\u68c0\u6d4b\uff0c\u53ef\u4ee5\u901a\u8fc7Thread.join()\u65b9\u6cd5\u7ed3\u675f\u3001Thread.isAlive()\u7684\u8fd4\u56de\u503c\u7b49\u624b\u6bb5\u68c0\u6d4b\u5230\u7ebf\u7a0b\u5df2\u7ecf\u7ec8\u6b62\u6267\u884c\u3002 - \u7ebf\u7a0b\u4e2d\u65ad\u89c4\u5219(Thread Interruption Rule)\uff1a\u5bf9\u7ebf\u7a0binterrupt()\u65b9\u6cd5\u7684\u8c03\u7528\u5148\u884c\u53d1\u751f\u4e8e\u88ab\u4e2d\u65ad\u7ebf\u7a0b\u7684\u4ee3\u7801\u68c0\u6d4b\u5230\u4e2d\u65ad\u65f6\u4e8b\u4ef6\u7684\u53d1\u751f\u3002Thread.interrupted()\u53ef\u4ee5\u68c0\u6d4b\u662f\u5426\u6709\u4e2d\u65ad\u53d1\u751f\u3002 - \u5bf9\u8c61\u7ec8\u7ed3\u89c4\u5219(Finilizer Rule)\uff1a\u4e00\u4e2a\u5bf9\u8c61\u7684\u521d\u59cb\u5316\u5b8c\u6210\uff08\u6784\u9020\u51fd\u6570\u6267\u884c\u7ed3\u675f\uff09\u5148\u884c\u53d1\u751f\u4e8e\u5b83\u7684finalize()\u7684\u5f00\u59cb\u3002 - \u4f20\u9012\u6027(Transitivity)\uff1a\u5982\u679c\u64cd\u4f5cA \u5148\u884c\u53d1\u751f\u4e8e\u64cd\u4f5cB\uff0c\u64cd\u4f5cB \u5148\u884c\u53d1\u751f\u4e8e\u64cd\u4f5cC\uff0c\u90a3\u4e48\u53ef\u4ee5\u5f97\u51faA \u5148\u884c\u53d1\u751f\u4e8e\u64cd\u4f5cC\u3002 \u6572\u9ed1\u677f!!! \u4e0d\u540c\u64cd\u4f5c\u65f6\u95f4\u5148\u540e\u987a\u5e8f\u4e0e\u5148\u884c\u53d1\u751f\u539f\u5219\u4e4b\u95f4\u6ca1\u6709\u5173\u7cfb\uff0c\u4e8c\u8005\u4e0d\u80fd\u76f8\u4e92\u63a8\u65ad\uff0c\u8861\u91cf\u5e76\u53d1\u5b89\u5168\u95ee\u9898\u4e0d\u80fd\u53d7\u5230\u65f6\u95f4\u987a\u5e8f\u7684\u5e72\u6270\uff0c\u4e00\u5207\u90fd\u8981\u4ee5happens-before\u539f\u5219\u4e3a\u51c6. \u6572\u9ed1\u677f!!!","title":"2.1 \u5148\u884c\u53d1\u751f\uff08happens-before\uff09 \u6982\u5ff5"},{"location":"Java/2018-03-22-concurrent-java/#22-volatile","text":"\u4fdd\u6301\u53d8\u91cf\u7684\u53ef\u89c1\u6027 \u5c4f\u853d\u6307\u4ee4\u91cd\u6392\u5e8f","title":"2.2 Volatile \u53d8\u91cf\u7684\u4e24\u79cd\u7279\u6027"},{"location":"Java/2018-03-22-concurrent-java/#23-longdouble","text":"\u5141\u8bb8\u865a\u62df\u673a\u5c06\u6ca1\u6709\u88abvolatile\u4fee\u9970\u768464\u4f4d\u6570\u636e\u7684\u8bfb\u5199\u64cd\u4f5c\u5212\u5206\u4e3a2\u6b2132\u4f4d\u64cd\u4f5c\u8fdb\u884c","title":"2.3 long/double\u975e\u539f\u5b50\u534f\u5b9a"},{"location":"Java/2018-03-22-concurrent-java/#3-jmm","text":"","title":"3. JMM\u7684\u56db\u4e2a\u7279\u6027"},{"location":"Java/2018-03-22-concurrent-java/#31","text":"JMM\u4fdd\u8bc1\u7684\u539f\u5b50\u6027\u53d8\u91cf\u64cd\u4f5c\u5305\u62ecread\u3001load\u3001use\u3001assign\u3001store\u3001write\uff0c\u800clong\u3001double\u975e\u539f\u5b50\u534f\u5b9a\u5bfc\u81f4\u7684\u975e\u539f\u5b50\u6027\u64cd\u4f5c\u57fa\u672c\u53ef\u4ee5\u5ffd\u7565\u3002","title":"3.1 \u539f\u5b50\u6027"},{"location":"Java/2018-03-22-concurrent-java/#32","text":"\u53ef\u89c1\u6027\u662f\u6307\u5f53\u4e00\u4e2a\u7ebf\u7a0b\u4fee\u6539\u4e86\u5171\u4eab\u53d8\u91cf\u7684\u503c\uff0c\u5176\u4ed6\u7ebf\u7a0b\u80fd\u591f\u7acb\u5373\u5f97\u77e5\u8fd9\u4e2a\u4fee\u6539\u3002JMM\u5728\u53d8\u91cf\u4fee\u6539\u540e\u5c06\u65b0\u503c\u540c\u6b65\u56de\u4e3b\u5185\u5b58\uff0c\u4f9d\u8d56\u4e3b\u5185\u5b58\u4f5c\u4e3a\u5a92\u4ecb\uff0c\u5728\u53d8\u91cf\u88ab\u7ebf\u7a0b\u8bfb\u53d6\u524d\u4ece\u5185\u5b58\u5237\u65b0\u53d8\u91cf\u65b0\u503c\uff0c\u4fdd\u8bc1\u53d8\u91cf\u7684\u53ef\u89c1\u6027\u3002\u666e\u901a\u53d8\u91cf\u548cvolatile\u53d8\u91cf\u90fd\u662f\u5982\u6b64\uff0c\u53ea\u4e0d\u8fc7volatile\u7684\u7279\u6b8a\u89c4\u5219\u4fdd\u8bc1\u4e86\u8fd9\u79cd\u53ef\u89c1\u6027\u662f\u7acb\u5373\u5f97\u77e5\u7684\uff0c\u800c\u666e\u901a\u53d8\u91cf\u5e76\u4e0d\u5177\u5907\u8fd9\u79cd\u4e25\u683c\u7684\u53ef\u89c1\u6027\u3002\u9664\u4e86volatile\u5916\uff0csynchronized\u548cfinal\u4e5f\u80fd\u4fdd\u8bc1\u53ef\u89c1\u6027\u3002","title":"3.2 \u53ef\u89c1\u6027"},{"location":"Java/2018-03-22-concurrent-java/#33","text":"JVM\u7684\u6709\u5e8f\u6027\u8868\u73b0\u4e3a\uff1a\u5982\u679c\u5728\u672c\u7ebf\u7a0b\u5185\u89c2\u5bdf\uff0c\u6240\u6709\u7684\u64cd\u4f5c\u90fd\u662f\u6709\u5e8f\u7684\uff1b\u5982\u679c\u5728\u4e00\u4e2a\u7ebf\u7a0b\u4e2d\u89c2\u5bdf\u53e6\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u6240\u6709\u7684\u64cd\u4f5c\u90fd\u662f\u65e0\u5e8f\u7684\u3002","title":"3.3 \u6709\u5e8f\u6027"},{"location":"Java/2018-03-22-concurrent-java/#34","text":"\u5728\u6267\u884c\u7a0b\u5e8f\u65f6\u4e3a\u4e86\u63d0\u9ad8\u6027\u80fd\uff0c\u7f16\u8bd1\u5668\u548c\u5904\u7406\u5668\u7ecf\u5e38\u4f1a\u5bf9\u6307\u4ee4\u8fdb\u884c\u91cd\u6392\u5e8f\u3002\u4ece\u786c\u4ef6\u67b6\u6784\u4e0a\u6765\u8bf4\uff0c\u6307\u4ee4\u91cd\u6392\u5e8f\u662f\u6307CPU\u91c7\u7528\u4e86\u5141\u8bb8\u5c06\u591a\u6761\u6307\u4ee4\u4e0d\u6309\u7167\u7a0b\u5e8f\u89c4\u5b9a\u7684\u987a\u5e8f\uff0c\u5206\u5f00\u53d1\u9001\u7ed9\u5404\u4e2a\u76f8\u5e94\u7535\u8def\u5355\u5143\u5904\u7406\uff0c\u800c\u4e0d\u662f\u6307\u4ee4\u4efb\u610f\u91cd\u6392\u3002 - \u7f16\u8bd1\u5668\u4f18\u5316\u7684\u91cd\u6392\u5e8f - \u6307\u4ee4\u7ea7\u5e76\u884c\u7684\u91cd\u6392\u5e8f - \u5185\u5b58\u7cfb\u7edf\u7684\u91cd\u6392\u5e8f \u6e90\u4ee3\u7801 --> \u7f16\u8bd1\u5668\u4f18\u5316\u7684\u91cd\u6392\u5e8f --> \u6307\u4ee4\u7ea7\u5e76\u884c\u7684\u91cd\u6392\u5e8f --> \u5185\u5b58\u7cfb\u7edf\u7684\u91cd\u6392\u5e8f --> \u6700\u7ec8\u6267\u884c","title":"3.4 \u91cd\u6392\u5e8f"},{"location":"Java/2018-03-22-concurrent-java/#4-javareentrantlock","text":"\u4e00\u4e2a\u7ebf\u7a0b\u5982\u679c\u5df2\u7ecf\u83b7\u5f97\u4e00\u4e2a\u5bf9\u8c61\u7684\u9501\uff0c\u90a3\u4e48\u8be5\u7ebf\u7a0b\u5728\u6301\u6709\u9501\u7684\u671f\u95f4\u53ef\u4ee5\u91cd\u590d\u591a\u6b21\u83b7\u5f97\u6539\u5bf9\u8c61\u7684\u9501\u3002Java\u4e2d\u7684synchronized\u5757\u662f\u53ef\u4ee5\u88ab\u91cd\u5165\u7684\u3002\u5f53\u591a\u4e2a\u7ebf\u7a0b\u5bf9\u5171\u4eab\u8d44\u6e90\u6fc0\u70c8\u7ade\u4e89\u7684\u65f6\u5019\uff0c\u4f7fCPU\u51cf\u5c11\u9891\u7e41\u7684\u7ebf\u7a0b\u8c03\u5ea6\uff0c\u662f\u7ebf\u7a0b\u7684\u6267\u884c\u6548\u7387\u66f4\u9ad8\u3002 ReentrantLock\u6709\u4e24\u79cd\u5b9e\u73b0\uff0c\u4e00\u79cd\u662f\u516c\u5e73\u9501\uff0c\u53e6\u5916\u4e00\u79cd\u662f\u975e\u516c\u5e73\u9501\u3002\u516c\u5e73\u9501\u5c31\u662f\u4e00\u4e2a\u7ebf\u7a0b\u7b49\u5f85\u83b7\u53d6\u67d0\u4e2a\u9501\u7684\u65f6\u95f4\u6700\u957f\uff0c\u90a3\u4e48\u8be5\u7ebf\u7a0b\u6700\u5148\u83b7\u5f97\u9501\u3002\u800c\u975e\u516c\u5e73\u9501\u5219\u4e0d\u4e00\u5b9a\u3002","title":"4. Java\u4e2d\u7684ReentrantLock"},{"location":"Java/2018-03-22-concurrent-java/#41","text":"{% highlight Java %} //\u516c\u5e73\u9501new ReentrantLock(true),\u975e\u516c\u5e73\u9501new ReentrantLock(false)[\u63a8\u8350] Lock lock = new ReentrantLock(false); lock.lock(); try { //\u5bf9\u5171\u4eab\u8d44\u6e90\u7684\u64cd\u4f5c } finally { lock.unlock(); } {% endhighlight %}","title":"4.1 \u5982\u4f55\u4f7f\u7528"},{"location":"Java/2018-03-22-concurrent-java/#42","text":"\u975e\u516c\u5e73\u9501: {% highlight Java %} static final class NonfairSync extends Sync { final void lock() { //\u5982\u679cCAS\u6210\u529f\uff0c\u5c06\u5f53\u524d\u7ebf\u7a0b\u8bbe\u7f6e\u4e3a\u8d44\u6e90\u7684\u6301\u6709\u8005 if (compareAndSetState(0, 1)) setExclusiveOwnerThread(Thread.currentThread()); else //\u5426\u5219\uff0c\u5c1d\u8bd5\u7533\u8bf7\u8d44\u6e90 acquire(1); } protected final boolean tryAcquire(int acquires) { //\u4f7f\u7528\u975e\u516c\u5e73\u9501\u7684\u673a\u5236\u53bb\u83b7\u53d6\u8d44\u6e90 return nonfairTryAcquire(acquires); } } final boolean nonfairTryAcquire(int acquires) { final Thread current = Thread.currentThread(); int c = getState(); //\u5982\u679c\u5177\u5907\u83b7\u53d6\u8d44\u6e90\u7684\u6761\u4ef6\uff0c\u8bbe\u7f6e\u5f53\u524d\u7ebf\u7a0b\u4e3a\u8d44\u6e90\u7684\u6301\u6709\u8005\uff0c\u8fd4\u56de if (c == 0) { if (compareAndSetState(0, acquires)) { setExclusiveOwnerThread(current); return true; } } //\u5982\u679c\u53d1\u73b0\u7533\u8bf7\u8d44\u6e90\u7684\u7ebf\u7a0b\u662f\u6301\u6709\u8be5\u8d44\u6e90\u7ebf\u7a0b\u672c\u8eab\uff0c\u5219\u5c06\u72b6\u6001\u52a01,\u8fd4\u56de else if (current == getExclusiveOwnerThread()) { int nextc = c + acquires; if (nextc < 0) // overflow throw new Error(\"Maximum lock count exceeded\"); setState(nextc); return true; } return false; } {% endhighlight %} \u516c\u5e73\u9501: {% highlight Java %} static final class FairSync extends Sync { private static final long serialVersionUID = -3000897897090466540L; final void lock() { acquire(1); } /** * Fair version of tryAcquire. Don't grant access unless * recursive call or no waiters or is first. */ protected final boolean tryAcquire(int acquires) { final Thread current = Thread.currentThread(); int c = getState(); if (c == 0) { //\u6b64\u5904\u591a\u4e00\u4e2a\u6761\u4ef6\uff0c\u8be5\u7ebf\u7a0b\u524d\u9762\u6ca1\u6709\u5176\u4ed6\u7684\u7ebf\u7a0b\u5728\u7b49\u5f85\u83b7\u53d6\u5171\u4eab\u8d44\u6e90\u7684\u9501 if (!hasQueuedPredecessors() && compareAndSetState(0, acquires)) { setExclusiveOwnerThread(current); return true; } } else if (current == getExclusiveOwnerThread()) { int nextc = c + acquires; if (nextc < 0) throw new Error(\"Maximum lock count exceeded\"); setState(nextc); return true; } return false; } } {% endhighlight %}","title":"4.2 \u901a\u8fc7\u4ee3\u7801\u6765\u770b\u5982\u4f55\u5b9e\u73b0"},{"location":"Java/2018-03-22-concurrent-java/#5-read-write-locks","text":"ReentrantReadWriteLock\u662fReadWriteLock\u7684\u4e00\u79cd\u5b9e\u73b0\uff0c\u8be5\u7c7b\u5305\u542b\u4e24\u4e2a\u9501\uff0c\u4e00\u4e2a\u662f\u8bfb\u9501\uff0c\u4e00\u4e2a\u662f\u5199\u9501\u3002 {% highlight Java %} public ReentrantReadWriteLock(boolean fair) { sync = fair ? new FairSync() : new NonfairSync(); //\u8bfb\u9501 readerLock = new ReadLock(this); //\u5199\u9501 writerLock = new WriteLock(this); } {% endhighlight %} \u5199\u9501\u7684\u7533\u8bf7\u6761\u4ef6: {% highlight Java %} / * \u7533\u8bf7\u5199\u9501. * * 1.\u8be5\u7ebf\u7a0b\u7533\u8bf7\u7684\u65f6\u523b\u6ca1\u6709\u5176\u4ed6\u7684\u7ebf\u7a0b\u6301\u6709\u8bfb\u9501\u6216\u8005\u5199\u9501\uff0c\u7533\u8bf7\u6210\u529f\u540e\u5c06\u5199\u9501\u7684\u6301\u6709\u6570\u76ee\u66f4\u65b0\u4e3a1. * 2.\u5982\u679c\u8be5\u7ebf\u7a0b\u7533\u8bf7\u7684\u65f6\u523b\u5df2\u7ecf\u6301\u6709\u5199\u9501\uff0c\u4ec5\u4ec5\u5c06\u6301\u6709\u7684\u6570\u76ee+1. * 3.\u8be5\u7ebf\u7a0b\u7533\u8bf7\u7684\u65f6\u523b\u5982\u679c\u6709\u5176\u4ed6\u7684\u7ebf\u7a0b\u6b63\u5728\u6301\u6709\u5199\u9501\uff0c\u5219\u5f53\u524d\u7684\u7ebf\u7a0b\u5c06\u4e0d\u4f1a\u88ab\u7ebf\u7a0b\u8c03\u5ea6\u5668\u8c03\u5ea6\u5c06\u4f1a\u8fdb\u5165lies dormant\u72b6\u6001\uff0c\u53ea\u81f3\u8be5\u7ebf\u7a0b\u83b7\u5f97\u5199\u9501. * \u6210\u529f\u540e\u5c06\u5199\u9501\u7684\u6301\u6709\u6570\u76ee\u66f4\u65b0\u4e3a1. */ public void lock() { sync.acquire(1); } {% endhighlight%} \u8bfb\u9501\u7684\u7533\u8bf7\u6761\u4ef6: {% highlight Java %} / * \u7533\u8bf7\u8bfb\u9501. * * 1.\u8be5\u7ebf\u7a0b\u7533\u8bf7\u65f6\u523b\u6ca1\u6709\u5176\u4ed6\u7ebf\u7a0b\u6301\u6709\u5199\u9501\u3002 * 2.\u8be5\u7ebf\u7a0b\u7533\u8bf7\u7684\u65f6\u523b\u5982\u679c\u6709\u5176\u4ed6\u7684\u7ebf\u7a0b\u6b63\u5728\u6301\u6709\u5199\u9501\uff0c\u5219\u5f53\u524d\u7684\u7ebf\u7a0b\u5c06\u4e0d\u4f1a\u88ab\u7ebf\u7a0b\u8c03\u5ea6\u5668\u8c03\u5ea6\u5c06\u4f1a\u8fdb\u5165lies dormant\u72b6\u6001\uff0c\u53ea\u81f3\u8be5\u7ebf\u7a0b\u83b7\u5f97\u8bfb\u9501. */ public void lock() { sync.acquireShared(1); } {% endhighlight %}","title":"5. Read / Write Locks"},{"location":"Java/2018-03-22-concurrent-java/#6-executorservice","text":"{% highlight Java %} ExecutorService fixedThreadPool =Executors.newFixedThreadPool(9); fixedThreadPool.execute(new Thread() {public void run() { //operation }}); ExecutorService singleThreadPool =Executors.newSingleThreadExecutor(); ExecutorService cachedThreadPool =Executors.newCachedThreadPool(); {% endhighlight %}","title":"6. ExecutorService"},{"location":"Java/2018-03-22-concurrent-java/#7-countdownlatch","text":"\u4e00\u822c\u7528\u4e8e\u4e3b\u7ebf\u7a0b\u6267\u884c\u67d0\u4e9b\u6307\u4ee4\u4e4b\u524d\uff0c\u9700\u8981\u7b49\u5f85\u5176\u4ed6\u7684\u51e0\u4e2a\u7ebf\u7a0b\u5168\u90e8\u5b8c\u6210. {% highlight Java %} public class Test { public static void main(String[] args) { //\u4e3b\u7ebf\u7a0b\u4e2d\u521b\u5efa\u4e00\u4e2aCountDownLatch\u5bf9\u8c61,\u6784\u9020\u51fd\u6570\u7684\u53c2\u6570\u8868\u793a\u7ebf\u7a0b\u7684\u6570\u76ee CountDownLatch countDownLatch = new CountDownLatch(5); for (int i = 0; i < 5; i++) { Thread thread = new MyThread(countDownLatch); thread.setName(\"Thread \" + i); thread.start(); } try { //\u8c03\u7528await\u65b9\u6cd5\u7b49\u5f85\u5176\u4ed6\u7ebf\u7a0b\u7684\u5de5\u4f5c\u5168\u90e8\u5b8c\u6210 countDownLatch.await(); } catch (InterruptedException e) { } System.out.println(\"All pre Job are done.\"); } } class MyThread extends Thread { private CountDownLatch countDownLatch; public MyThread(CountDownLatch countDownLatch) { this.countDownLatch = countDownLatch; } public void run() { System.out.println(getName() + \" is Done!\"); //\u4f7f\u7528CountDownLatch\u5bf9\u8c61\u9012\u51cf\u5df2\u7ecf\u5b8c\u6210\u7684\u7ebf\u7a0b\u6570\u91cf countDownLatch.countDown(); } } {% endhighlight %}","title":"7. CountDownLatch"},{"location":"Java/2018-03-22-concurrent-java/#8-future","text":"Future \u662f\u4e00\u4e2a\u63a5\u53e3\uff0c\u901a\u8fc7\u5b83\u53ef\u4ee5\u83b7\u5f97\u7ebf\u7a0b\u6267\u884c\u5b8c\u6210\u4e4b\u540e\u7684\u8fd4\u56de\u503c. Future\u6ca1\u6709\u63d0\u4f9b\u7ebf\u7a0b\u5b8c\u6210\u901a\u77e5\u7684\u673a\u5236\uff0c\u53ea\u80fd\u901a\u8fc7\u8f6e\u8be2\u8c03\u7528isDone()\u65b9\u6cd5\u6216\u8005\u8c03\u7528get()\u65b9\u6cd5\u963b\u585e\u7ebf\u7a0b\u6765\u83b7\u5f97\u7ed3\u679c\u3002 {% highlight Java %} boolean cancel(boolean mayInterruptIfRunning); boolean isCancelled(); boolean isDone(); V get() throws InterruptedException, ExecutionException; V get(long timeout, TimeUnit unit) throws InterruptedException, ExecutionException, TimeoutException; {% endhighlight %} Java8 \u63d0\u4f9b\u7684CompletableFuture\u53ef\u4ee5\u5f25\u8865Future\u7684\u4e0d\u8db3,\u8ba9Java\u62e5\u6709\u4e86\u5b8c\u6574\u7684\u975e\u963b\u585e\u7f16\u7a0b\u6a21\u578b. public class CompletableFuture < T > implements Future < T >, CompletionStage < T > {}","title":"8. Future\u7c7b\u7684\u4f7f\u7528"},{"location":"Java/2018-03-22-concurrent-java/#9-javacas","text":"CAS\u662fcompare and swap \u7684\u7f29\u5199\u3002\u968f\u7740Java\u7684\u53d1\u5c55\uff0cJava\u672c\u5730\u65b9\u6cd5\u8c03\u7528(JNI)\u7684\u51fa\u73b0\uff0c\u4f7f\u5f97Java\u7a0b\u5e8f\u53ef\u4ee5\u8d8a\u8fc7JVM\u800c\u76f4\u63a5\u8c03\u7528\u672c\u5730\u65b9\u6cd5\uff0c\u8fd9\u4e3aJava\u5b9e\u73b0\u5e76\u53d1\u62d3\u5c55\u4e00\u6761\u65b0\u7684\u9014\u5f84\u3002CAS\u7406\u8bba\u662fjava concurrent\u5305\u7684\u7406\u8bba\u57fa\u77f3\u3002 Java\u53ef\u4ee5\u901a\u8fc7synchronized\u5b9e\u73b0\u7ebf\u7a0b\u4e4b\u95f4\u540c\u6b65\uff0c\u4f46\u662f\u8fd9\u79cd\u65b9\u6cd5\u6709\u4ee5\u4e0b\u5f0a\u7aef: - \u5728\u591a\u7ebf\u7a0b\u73af\u5883\u4e0b\uff0c\u52a0\u9501\u548c\u91ca\u653e\u9501\uff0c\u6216\u5bfc\u81f4CPU\u6bd4\u8f83\u591a\u7684\u4e0a\u4e0b\u6587\u5207\u6362\uff0c\u5f71\u54cd\u6027\u80fd\u3002 - \u4e00\u4e2a\u7ebf\u7a0b\u6301\u6709\u9501\uff0c\u4f1a\u5bfc\u81f4\u5176\u4ed6\u9700\u8981\u6b64\u9501\u7684\u7ebf\u7a0b\u6302\u8d77\u3002 - \u5982\u679c\u4e00\u4e2a\u7ebf\u7a0b\u4f18\u5148\u7ea7\u9ad8\u7684\u53bb\u957f\u65f6\u95f4\u7b49\u5f85\u4f18\u5148\u7ea7\u6bd4\u8f83\u4f4e\u7684\u7ebf\u7a0b\u91ca\u653e\u9501\uff0c\u4e5f\u4f1a\u5f15\u8d77\u6027\u80fd\u98ce\u9669\u3002 Synchronized\u5c31\u662f\u4e00\u79cd\u72ec\u5360\u9501\u6216\u8005\u662f\u60b2\u89c2\u9501\uff0c\u4e50\u89c2\u9501\u5c31\u662f\u6bcf\u6b21\u64cd\u4f5c\u90fd\u4e0d\u52a0\u9501\u800c\u662f\u5047\u8bbe\u8be5\u7ebf\u7a0b\u6ca1\u6709\u548c\u5176\u4ed6\u7ebf\u7a0b\u51b2\u7a81\uff0c\u5982\u679c\u6709\u51b2\u7a81\u5931\u8d25\u5c31\u91cd\u8bd5\uff0c\u76f4\u5230\u6210\u529f\u4e3a\u6b62\uff0c\u901a\u8fc7CAS\u53ef\u4ee5\u5b9e\u73b0\u4e50\u89c2\u9501\u3002 CAS\u5305\u542b\u4e09\u4e2a\u64cd\u4f5c\u6570:\u5185\u5b58\u4f4d\u7f6e(V), \u9884\u671f\u539f\u503c(A)\u548c\u65b0\u503c(B)\u3002\u5982\u679c\u5185\u5b58\u4f4d\u7f6e\u7684\u5f53\u524d\u503c\u4e0e\u9884\u671f\u539f\u503c\u4e00\u6837\uff0c\u90a3\u4e48\u5904\u7406\u5668\u5c31\u4f1a\u5c06\u65b0\u503c\u66f4\u65b0\u5185\u5b58\u4f4d\u7f6e(V)\u7684\u503c\u3002\u5426\u5219\uff0c\u4e0d\u505a\u4efb\u4f55\u64cd\u4f5c\uff0c\u53ea\u9700\u8981\u544a\u8bc9\u6211\u5185\u5b58\u4f4d\u7f6e(V)\u7684\u503c\u5c31\u597d\u4e86\u3002\u65e0\u8bba\u54ea\u79cd\u60c5\u51b5\uff0c\u5b83\u90fd\u4f1a\u5728 CAS\u6307\u4ee4\u4e4b\u524d\u8fd4\u56de\u8be5\u4f4d\u7f6e\u7684\u503c\u3002","title":"9. Java\u4e2d\u7684CAS"},{"location":"Java/2018-03-22-concurrent-java/#10-jvm-jdk18","text":"\u7a0b\u5e8f\u8ba1\u6570\u5668 \u6bcf\u4e2aJVM\u7ebf\u7a0b\u90fd\u6709\u72ec\u81ea\u7684\u7a0b\u5e8f\u8ba1\u6570\u5668\uff0cJVM\u7ebf\u7a0b\u6b63\u5728Running\u7684\u65b9\u6cd5\u79f0\u4e3acurrent method.\u5982\u679c\u8be5\u65b9\u6cd5\u4e0d\u662f\u4e00\u4e2anative\u65b9\u6cd5\uff0c\u7a0b\u5e8f\u8ba1\u6570\u5668\u6307\u5411\u6b63\u5728\u6267\u884c\u7684\u8bed\u53e5\u7684\u5730\u5740\uff0c\u5982\u679c\u8be5\u65b9\u6cd5\u662f\u4e00\u4e2a\u672c\u5730\u65b9\u6cd5\uff0c\u90a3\u4e48\u7a0b\u5e8f\u8ba1\u6570\u5668\u7684\u503c\u662fundefined. Java\u865a\u62df\u673a\u6808 \u6bcf\u4e2aJVM\u7ebf\u7a0b\u90fd\u6709\u72ec\u81ea\u7684Java\u865a\u62df\u673a\u6808\uff0c\u968f\u7740\u7ebf\u7a0b\u7684\u521b\u5efa\u800c\u521b\u5efa\u3002\u4fdd\u5b58\u672c\u5730\u53d8\u91cf\u7684\u503c\u548c\u65b9\u6cd5\u7684\u90e8\u5206\u8fd4\u56de\u503c\uff0c\u4f5c\u4e3a\u65b9\u6cd5\u8c03\u7528\u548creturn\u7684\u4e00\u90e8\u5206\u3002\u4e00\u822c\u60c5\u51b5\u4e0b\u4e0d\u4f1a\u5bf9Java\u865a\u62df\u673a\u6808\u76f4\u63a5\u64cd\u4f5c\uff0c\u9664\u4e86\u5bf9\u5e27\u8fdb\u884cpop\u548cpush\u64cd\u4f5c\uff0c\u56e0\u6b64\u8fd9\u5757\u5185\u5b58\u4e00\u822c\u4e0d\u662f\u8fde\u7eed\u7684\u3002 \u5806 \u5806\u88abJava\u865a\u62df\u673a\u4e2d\u7684\u6240\u6709\u7ebf\u7a0b\u5171\u4eab\uff0c\u662f\u8fd0\u884c\u65f6\u7684\u6570\u636e\u533a\uff0c\u5b58\u653e\u7c7b\u7684\u5b9e\u4f8b\uff0c\u4ee5\u53ca\u5b58\u653e\u6570\u7ec4\u6570\u636e\u3002\u5806\u4e0a\u7684\u6570\u636e\u88ab\u5783\u573e\u56de\u6536\u5668\u56de\u6536\u6e05\u7406\u3002\u5806\u7684\u5927\u5c0f\u53ef\u4ee5\u662f\u56fa\u5b9a\u7684\u6216\u8005\u53ef\u4ee5\u88ab\u6269\u5c55\u3002\u5982\u679c\u7a0b\u5e8f\u5728\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u6240\u9700\u7684\u5806\u7684\u5927\u5c0f\u8d85\u51fa\u53ef\u63d0\u4f9b\u7684\u5bf9\u5927\u5c0f\uff0c\u5c06\u4f1a\u629b\u51faOOM\u5f02\u5e38\u3002 \u672c\u5730\u65b9\u6cd5\u533a Java\u865a\u62df\u673a\u53ef\u4ee5\u8c03\u7528\u672c\u5730\u65b9\u6cd5\u7684\u4e00\u79cd\u5b9e\u73b0\u3002\u8fd9\u4e9b\u672c\u5730\u65b9\u6cd5\u53ef\u80fd\u901a\u8fc7\u5176\u4ed6\u7684\u8bed\u8a00\u5b9e\u73b0\uff0c\u6bd4\u5982C\uff0cC++.\u672c\u5730\u65b9\u6cd5\u6808\u4e5f\u7528\u6765\u5b9e\u73b0\u4e00\u4e9b\u7528C\u8bed\u8a00\u5b9e\u73b0\u7684JVM\u6307\u4ee4\u3002\u672c\u5730\u65b9\u6cd5\u6808\u7684\u5927\u5c0f\u53ef\u4ee5\u662f\u56fa\u5b9a\u7684\uff0c\u4e5f\u53ef\u4ee5\u88ab\u52a8\u6001\u6269\u5c55\u3002 \u5e27 \u5e27\u88ab\u5206\u914d\u5728\u6bcf\u4e2aJVM\u7ebf\u7a0b\u8fd0\u884c\u65f6\u7684Java\u865a\u62df\u673a\u6808\u4e0a\u3002\u968f\u7740\u65b9\u6cd5\u88ab\u8c03\u7528\u800c\u521b\u5efa\uff0c\u7528\u6765\u5b58\u653e\u65b9\u6cd5\u7684\u672c\u5730\u53d8\u91cf\uff0c\u90e8\u5206\u7684\u8fd4\u56de\u7ed3\u679c\uff0c\u6267\u884c\u52a8\u6001\u94fe\u63a5\uff0c\u6216\u8005\u5206\u53d1\u5f02\u5e38\u3002\u6bcf\u4e00\u4e2a\u5e27\u90fd\u62e5\u6709\u81ea\u5df1\u7684\u672c\u5730\u53d8\u91cf\u6570\u7ec4\uff0c\u64cd\u4f5c\u6808\uff0c\u4ee5\u53ca\u4e00\u4e2a\u5f53\u524d\u65b9\u6cd5\u7684\u5f15\u7528\uff0c\u8fd9\u4e2a\u5f15\u7528\u6307\u5411\u8fd0\u884c\u65f6\u7684\u5e38\u91cf\u6c60\u3002\u7a0b\u5e8f\u7f16\u8bd1\u65f6\u51b3\u5b9a\u4e3a\u8be5\u65b9\u6cd5\u5206\u914d\u7684\u5e27\u5927\u5c0f\u3002\u5e27\u53ea\u80fd\u88ab\u521b\u5efa\u5b83\u7684\u7ebf\u7a0b\u4f7f\u7528\u3002\u4e0d\u80fd\u88ab\u5176\u4ed6\u7ebf\u7a0b\u5171\u4eab\u3002 \u5143\u6570\u636e\u533a jdk1.8\u4e4b\u524d\u4f7f\u7528PermGen\u5b58\u653e\u7c7b\u7684\u5143\u6570\u636e\u4fe1\u606f\uff0c\u5728jdk1.8\u4e2d\u7528\u5143\u6570\u636e\u533a\u5b58\u653e\u7c7b\u7684\u5143\u6570\u636e\u4fe1\u606f\u3002\u5143\u6570\u636e\u533a\u662f\u5c5e\u4e8e\u7cfb\u7edf\u5185\u5b58\u7684\u4e00\u90e8\u5206\uff0c\u53ef\u4ee5\u6700\u5927\u53ef\u5229\u7528\u7a7a\u95f4\u662f\u6574\u4e2a\u7cfb\u7edf\u5185\u5b58\u7684\u53ef\u7528\u7a7a\u95f4\u3002 -XX:MetaspaceSize \u5143\u6570\u636e\u533a\u7684\u521d\u59cb\u7a7a\u95f4\u5927\u5c0f -XX\uff1aMaxMetaspaceSize \u5143\u6570\u636e\u533a\u6700\u5927\u7a7a\u95f4\u5927\u5c0f -XX\uff1aMinMetaspaceFreeRatio \u5728GC\u4e4b\u540e\uff0c\u6700\u5c0f\u7684Metaspace\u5269\u4f59\u7a7a\u95f4\u5bb9\u91cf\u7684\u767e\u5206\u6bd4\uff0c\u51cf\u5c11\u4e3aclass metadata\u5206\u914d\u7a7a\u95f4\u5bfc\u81f4\u7684\u5783\u573e\u6536\u96c6 -XX:MaxMetaspaceFreeRatio,\u5728GC\u4e4b\u540e\uff0c\u6700\u5927\u7684Metaspace\u5269\u4f59\u7a7a\u95f4\u5bb9\u91cf\u7684\u767e\u5206\u6bd4\uff0c\u51cf\u5c11\u4e3aclass metadata\u91ca\u653e\u7a7a\u95f4\u5bfc\u81f4\u7684\u5783\u573e\u6536\u96c6","title":"10. JVM\u5185\u5b58\u6a21\u578b (jdk1.8)"},{"location":"Java/2018-03-22-concurrent-java/#_1","text":"\u53c2\u8003\u94fe\u63a51 \u53c2\u8003\u94fe\u63a52 \u53c2\u8003\u94fe\u63a53 \u53c2\u8003\u94fe\u63a54 \u53c2\u8003\u94fe\u63a55 Java Virtual Machine Specification","title":"\u5f15\u7528"},{"location":"Java/2018-04-02-selenium-java/","text":"Selenium Grid Setup \u00b6 Tips: \u6267\u884c\u811a\u672c\u7684\u65f6\u5019\u5343\u4e07\u4e0d\u8981\u901a\u8fc7\u7cfb\u7edf\u81ea\u5e26\u7684\u8bb0\u4e8b\u672c\u76f4\u63a5\u590d\u5236,\u4f7f\u7528notepadd++,\u6216\u8005sublime\u6587\u672c\u7f16\u8f91\u5de5\u5177!!! \u5982\u4f55\u542f\u52a8selenium grid 1. \u542f\u52a8Hub /** *\u6307\u5b9a\u542f\u52a8\u7684\u89d2\u8272\u662fhub */ java - jar selenium - server - standalone - 3.7.1 . jar - role hub - newSessionWaitTimeout 30 - sessionTimeout 30 2. \u542f\u52a8Node /** *\u6307\u5b9a\u542f\u52a8\u7684\u89d2\u8272\u662fnode *\u6307\u5b9a\u6d4b\u8bd5\u6d4f\u89c8\u5668\u5bf9\u5e94\u7684driver\u8def\u5f84 *chrome driver version: chromedriver_win32_237 *gecko driver version: geckodriver-v0.19.1-win32 *ie driver version: IEDriverServer_x64_3.9.0 *\u6307\u5b9a\u76f8\u5e94\u7684hub */ java - Dwebdriver . gecko . driver = \"./selenium-java-3.7.1/geckodriver.exe\" - Dwebdriver . chrome . driver = \"./selenium-java-3.7.1/chromedriver.exe\" - Dwebdriver . ie . driver = \"./selenium-java-3.7.1/IEDriverServer.exe\" - jar selenium - server - standalone - 3.7.1 . jar - role node - hub http : //localhost:4444/grid/register/ -browserTimeout 60 -sessionTimeout 30 \u67e5\u770bnode\u542f\u52a8\u53c2\u6570\u914d\u7f6e java - jar selenium - server - standalone - 3.7.1 . jar - role node - h","title":"Selenium"},{"location":"Java/2018-04-02-selenium-java/#selenium-grid-setup","text":"Tips: \u6267\u884c\u811a\u672c\u7684\u65f6\u5019\u5343\u4e07\u4e0d\u8981\u901a\u8fc7\u7cfb\u7edf\u81ea\u5e26\u7684\u8bb0\u4e8b\u672c\u76f4\u63a5\u590d\u5236,\u4f7f\u7528notepadd++,\u6216\u8005sublime\u6587\u672c\u7f16\u8f91\u5de5\u5177!!! \u5982\u4f55\u542f\u52a8selenium grid 1. \u542f\u52a8Hub /** *\u6307\u5b9a\u542f\u52a8\u7684\u89d2\u8272\u662fhub */ java - jar selenium - server - standalone - 3.7.1 . jar - role hub - newSessionWaitTimeout 30 - sessionTimeout 30 2. \u542f\u52a8Node /** *\u6307\u5b9a\u542f\u52a8\u7684\u89d2\u8272\u662fnode *\u6307\u5b9a\u6d4b\u8bd5\u6d4f\u89c8\u5668\u5bf9\u5e94\u7684driver\u8def\u5f84 *chrome driver version: chromedriver_win32_237 *gecko driver version: geckodriver-v0.19.1-win32 *ie driver version: IEDriverServer_x64_3.9.0 *\u6307\u5b9a\u76f8\u5e94\u7684hub */ java - Dwebdriver . gecko . driver = \"./selenium-java-3.7.1/geckodriver.exe\" - Dwebdriver . chrome . driver = \"./selenium-java-3.7.1/chromedriver.exe\" - Dwebdriver . ie . driver = \"./selenium-java-3.7.1/IEDriverServer.exe\" - jar selenium - server - standalone - 3.7.1 . jar - role node - hub http : //localhost:4444/grid/register/ -browserTimeout 60 -sessionTimeout 30 \u67e5\u770bnode\u542f\u52a8\u53c2\u6570\u914d\u7f6e java - jar selenium - server - standalone - 3.7.1 . jar - role node - h","title":"Selenium Grid Setup"},{"location":"Java/2019-02-22-algorithm-java/","text":"Common algorithm \u00b6 \u5f52\u5e76\u6392\u5e8f\u7b97\u6cd5 public static void mergeSort ( int array [], int start , int end ) { if ( start == end ) { //\u5206\u89e3\u7684\u6700\u7ec8\u7ed3\u679c\uff0c\u6bcf\u4e2a\u6570\u7ec4\u53ea\u6709\u4e00\u4e2a\u5143\u7d20 return ; } int middle = start + (( end - start ) >> 1 ); mergeSort ( array , start , middle ); mergeSort ( array , middle + 1 , end ); merge ( array , start , middle , end ); } /** * * @param array * @param start * @param middle * @param end * */ private static void merge ( int array [], int start , int middle , int end ) { int [] help = new int [ end - start + 1 ]; int p1 = start ; int p2 = middle + 1 ; int i = 0 ; //\u53e6\u4e2a\u6570\u7ec4\u9010\u6b21\u6bd4\u8f83\uff0c\u5148\u5c06\u8f83\u5c0f\u7684\u6570\u5f52\u4f4d\u3002 \u4f8b\u5982\u4ea7\u751f\u7684\u9012\u589e\u7684\u4e2d\u95f4\u4ea7\u7269\u6570\u7ec4\uff0c[5, 10], [6,7]\uff0c\u7ecf\u8fc7\u8be5\u5faa\u73af\u540ehelp = {5, 6, 7} while ( p1 <= middle && p2 <= end ) { help [ i ++] = array [ p1 ] < array [ p2 ] ? array [ p1 ++] : array [ p2 ++]; } //\u4ee5\u4e0b\u7684\u4e24\u4e2awhile\u53ea\u4f1a\u6267\u884c\u5176\u4e2d\u4e00\u4e2a while ( p1 <= middle ) { help [ i ++] = array [ p1 ++]; } while ( p2 <= end ) { help [ i ++] = array [ p2 ++]; } for ( int j = 0 ; j < help . length ; j ++) { //\u5c06\u6392\u5e8f\u4e86\u7684\u7ed3\u679c\u653e\u5165\u6570\u7ec4 array [ start + j ] = help [ j ]; } } \u5feb\u901f\u6392\u5e8f\u7b97\u6cd5 private int getBasePosition ( int array [], int L , int R ) { int base = array [ L ]; int temp , i , j ; i = L ; j = R ; while ( i < j ) { // 1.\u4ece\u53f3\u8fb9\u627e\u5230\u6bd4base\u5c0f\u7684\u6570 while ( i < j && base <= array [ j ]) j --; // 2.\u4ece\u5de6\u8fb9\u627e\u5230\u6bd4base\u5927\u7684\u6570 while ( i < j && array [ i ] <= base ) i ++; //\u4ea4\u6362\u4f4d\u7f6e if ( i < j ) { temp = array [ i ]; array [ i ] = array [ j ]; array [ j ] = temp ; } } //\u5f53i==j\u65f6\uff0c\u9700\u8981\u5c06array[i]\u7684\u503c\u4e0earray[L]\u7684\u503c\u8fdb\u884c\u4ea4\u6362\uff0c\u56e0\u6b64\u5f15\u5165\u53d8\u91cfi,j\u3002\u5982\u679c\u76f4\u63a5\u4f7f\u7528L\uff0cR\uff0c\u90a3\u4e48\u5f53L==R\u7684\u65f6\u5019\uff0cbase\u5728\u6570\u7ec4\u4e2d\u7684\u521d\u59cb\u4f4d\u7f6eL\u5c31\u4f1a\u4e22\u5931\u3002 temp = array [ i ]; array [ i ] = array [ L ]; array [ L ] = temp ; return i ; } private void quickSort ( int [] array , int start , int end ) { if ( start > end ) { return ; } else { //1.\u627e\u5230basePosition int basePosition = getBasePosition ( array , start , end ); //2.\u9012\u5f52\u6392\u5e8fbase\u5de6\u8fb9\u7684\u5b50\u6570\u7ec4 quickSort ( array , start , basePosition - 1 ); //3.\u9012\u5f52\u6392\u5e8fbase\u53f3\u8fb9\u7684\u5b50\u6570\u7ec4 quickSort ( array , basePosition + 1 , end ); } } \u4e8c\u5206\u67e5\u627e\u7b97\u6cd5 //\u9012\u5f52\u5b9e\u73b0 private int binarySearch ( int arr [], int start , int end , int target ) { int middle = ( start + end ) / 2 ; //\u7b97middle\u7684\u4f4d\u7f6e\u4e00\u5b9a\u8981\u662f(start + end)/2 , \u60f3\u60f3\u4e3a\u4ec0\u4e48\u4e0d\u80fd\u662fend/2? if ( target == arr [ middle ]) { return middle ; } //middle >=1 \u4fdd\u8bc1end\u7684\u6700\u5c0f\u503c\u662f0 if ( target < arr [ middle ] && middle >= 1 ) { return binarySearch ( arr , 0 , middle - 1 , target ); //middle + 1 <=end \u4fdd\u8bc1\u8d77\u59cb\u4f4d\u7f6e\u5e94\u8be5<=\u7ed3\u675f\u4f4d\u7f6e } else if ( middle + 1 <= end ) { return binarySearch ( arr , middle + 1 , end , target ); } else { return - 1 ; } } //\u975e\u9012\u5f52\u5b9e\u73b0 private int binarySearch ( int [] arr , int target ) { int low = 0 ; int hight = arr . length ; while ( low <= hight ) { int middle = ( low + hight ) / 2 ; if ( target == arr [ middle ]) { return middle ; } else if ( target > arr [ middle ]) { low = middle + 1 ; } else { hight = middle - 1 ; } } return - 1 ; } \u4e32\u7684\u67e5\u627e\u7b97\u6cd5 //\u5982\u679ctarget\u5728source\u4e2d, \u8fd4\u56detarget\u5728source\u4e2d\u7684\u8d77\u59cb\u4f4d\u7f6e(\u4ece0\u7b97\u8d77)\uff0c\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u8fd4\u56de-1 public static int strMatch_1 ( char [] source , char [] target ) { int i = 0 , j = 0 ; int sourceLength = source . length ; int targetLength = target . length ; while ( i < sourceLength && j < targetLength ) { if ( source [ i ] == target [ j ]) { if ( j == targetLength - 1 ) { return i - j ; } else { i ++; j ++; } } else { //\u5982\u679csource\u4e2d\u5269\u4f59\u7684\u5b57\u7b26\u4e32\u957f\u5ea6\u5c0f\u4e8etarget\uff0c\u90a3\u4e48\u76f4\u63a5\u8fd4\u56de -1 if ( sourceLength < i + targetLength ) { break ; } else { j = 0 ; //\u4e3b\u4e32\u9700\u8981\u79fb\u52a8\u5230\u4e0b\u4e00\u4f4d\uff0c\u7136\u540e\u548c\u5b57\u4e32\u518d\u6b21\u5339\u914d i = i - j + 1 ; } } } return - 1 ; } /** * \u5b57\u7b26\u4e32\u5339\u914d\u8fd8\u6709KMP\u7b97\u6cd5\uff0cBM\u7b97\u6cd5\u4ee5\u53caSunday\u7b97\u6cd5 */ \u53c2\u8003\u94fe\u63a5 \u00b6","title":"Algorithm"},{"location":"Java/2019-02-22-algorithm-java/#common-algorithm","text":"\u5f52\u5e76\u6392\u5e8f\u7b97\u6cd5 public static void mergeSort ( int array [], int start , int end ) { if ( start == end ) { //\u5206\u89e3\u7684\u6700\u7ec8\u7ed3\u679c\uff0c\u6bcf\u4e2a\u6570\u7ec4\u53ea\u6709\u4e00\u4e2a\u5143\u7d20 return ; } int middle = start + (( end - start ) >> 1 ); mergeSort ( array , start , middle ); mergeSort ( array , middle + 1 , end ); merge ( array , start , middle , end ); } /** * * @param array * @param start * @param middle * @param end * */ private static void merge ( int array [], int start , int middle , int end ) { int [] help = new int [ end - start + 1 ]; int p1 = start ; int p2 = middle + 1 ; int i = 0 ; //\u53e6\u4e2a\u6570\u7ec4\u9010\u6b21\u6bd4\u8f83\uff0c\u5148\u5c06\u8f83\u5c0f\u7684\u6570\u5f52\u4f4d\u3002 \u4f8b\u5982\u4ea7\u751f\u7684\u9012\u589e\u7684\u4e2d\u95f4\u4ea7\u7269\u6570\u7ec4\uff0c[5, 10], [6,7]\uff0c\u7ecf\u8fc7\u8be5\u5faa\u73af\u540ehelp = {5, 6, 7} while ( p1 <= middle && p2 <= end ) { help [ i ++] = array [ p1 ] < array [ p2 ] ? array [ p1 ++] : array [ p2 ++]; } //\u4ee5\u4e0b\u7684\u4e24\u4e2awhile\u53ea\u4f1a\u6267\u884c\u5176\u4e2d\u4e00\u4e2a while ( p1 <= middle ) { help [ i ++] = array [ p1 ++]; } while ( p2 <= end ) { help [ i ++] = array [ p2 ++]; } for ( int j = 0 ; j < help . length ; j ++) { //\u5c06\u6392\u5e8f\u4e86\u7684\u7ed3\u679c\u653e\u5165\u6570\u7ec4 array [ start + j ] = help [ j ]; } } \u5feb\u901f\u6392\u5e8f\u7b97\u6cd5 private int getBasePosition ( int array [], int L , int R ) { int base = array [ L ]; int temp , i , j ; i = L ; j = R ; while ( i < j ) { // 1.\u4ece\u53f3\u8fb9\u627e\u5230\u6bd4base\u5c0f\u7684\u6570 while ( i < j && base <= array [ j ]) j --; // 2.\u4ece\u5de6\u8fb9\u627e\u5230\u6bd4base\u5927\u7684\u6570 while ( i < j && array [ i ] <= base ) i ++; //\u4ea4\u6362\u4f4d\u7f6e if ( i < j ) { temp = array [ i ]; array [ i ] = array [ j ]; array [ j ] = temp ; } } //\u5f53i==j\u65f6\uff0c\u9700\u8981\u5c06array[i]\u7684\u503c\u4e0earray[L]\u7684\u503c\u8fdb\u884c\u4ea4\u6362\uff0c\u56e0\u6b64\u5f15\u5165\u53d8\u91cfi,j\u3002\u5982\u679c\u76f4\u63a5\u4f7f\u7528L\uff0cR\uff0c\u90a3\u4e48\u5f53L==R\u7684\u65f6\u5019\uff0cbase\u5728\u6570\u7ec4\u4e2d\u7684\u521d\u59cb\u4f4d\u7f6eL\u5c31\u4f1a\u4e22\u5931\u3002 temp = array [ i ]; array [ i ] = array [ L ]; array [ L ] = temp ; return i ; } private void quickSort ( int [] array , int start , int end ) { if ( start > end ) { return ; } else { //1.\u627e\u5230basePosition int basePosition = getBasePosition ( array , start , end ); //2.\u9012\u5f52\u6392\u5e8fbase\u5de6\u8fb9\u7684\u5b50\u6570\u7ec4 quickSort ( array , start , basePosition - 1 ); //3.\u9012\u5f52\u6392\u5e8fbase\u53f3\u8fb9\u7684\u5b50\u6570\u7ec4 quickSort ( array , basePosition + 1 , end ); } } \u4e8c\u5206\u67e5\u627e\u7b97\u6cd5 //\u9012\u5f52\u5b9e\u73b0 private int binarySearch ( int arr [], int start , int end , int target ) { int middle = ( start + end ) / 2 ; //\u7b97middle\u7684\u4f4d\u7f6e\u4e00\u5b9a\u8981\u662f(start + end)/2 , \u60f3\u60f3\u4e3a\u4ec0\u4e48\u4e0d\u80fd\u662fend/2? if ( target == arr [ middle ]) { return middle ; } //middle >=1 \u4fdd\u8bc1end\u7684\u6700\u5c0f\u503c\u662f0 if ( target < arr [ middle ] && middle >= 1 ) { return binarySearch ( arr , 0 , middle - 1 , target ); //middle + 1 <=end \u4fdd\u8bc1\u8d77\u59cb\u4f4d\u7f6e\u5e94\u8be5<=\u7ed3\u675f\u4f4d\u7f6e } else if ( middle + 1 <= end ) { return binarySearch ( arr , middle + 1 , end , target ); } else { return - 1 ; } } //\u975e\u9012\u5f52\u5b9e\u73b0 private int binarySearch ( int [] arr , int target ) { int low = 0 ; int hight = arr . length ; while ( low <= hight ) { int middle = ( low + hight ) / 2 ; if ( target == arr [ middle ]) { return middle ; } else if ( target > arr [ middle ]) { low = middle + 1 ; } else { hight = middle - 1 ; } } return - 1 ; } \u4e32\u7684\u67e5\u627e\u7b97\u6cd5 //\u5982\u679ctarget\u5728source\u4e2d, \u8fd4\u56detarget\u5728source\u4e2d\u7684\u8d77\u59cb\u4f4d\u7f6e(\u4ece0\u7b97\u8d77)\uff0c\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u8fd4\u56de-1 public static int strMatch_1 ( char [] source , char [] target ) { int i = 0 , j = 0 ; int sourceLength = source . length ; int targetLength = target . length ; while ( i < sourceLength && j < targetLength ) { if ( source [ i ] == target [ j ]) { if ( j == targetLength - 1 ) { return i - j ; } else { i ++; j ++; } } else { //\u5982\u679csource\u4e2d\u5269\u4f59\u7684\u5b57\u7b26\u4e32\u957f\u5ea6\u5c0f\u4e8etarget\uff0c\u90a3\u4e48\u76f4\u63a5\u8fd4\u56de -1 if ( sourceLength < i + targetLength ) { break ; } else { j = 0 ; //\u4e3b\u4e32\u9700\u8981\u79fb\u52a8\u5230\u4e0b\u4e00\u4f4d\uff0c\u7136\u540e\u548c\u5b57\u4e32\u518d\u6b21\u5339\u914d i = i - j + 1 ; } } } return - 1 ; } /** * \u5b57\u7b26\u4e32\u5339\u914d\u8fd8\u6709KMP\u7b97\u6cd5\uff0cBM\u7b97\u6cd5\u4ee5\u53caSunday\u7b97\u6cd5 */","title":"Common algorithm"},{"location":"Java/2019-02-22-algorithm-java/#_1","text":"","title":"\u53c2\u8003\u94fe\u63a5"},{"location":"Java/2019-05-10-JEE-java/","text":"JEE basic knowledge \u00b6 JPA Entity Class Requirement Must be annotated with @Entity Must have a public or protected no-arg constructor Must be a top-level class The persistent state of an entity is represented by instance fields. Entities support inheritance and must not be final. If an entity instance is to be passed by value as a detached object, the entity class must implement the java.io.Serializable interface Why would you choose persistent properties over persistent filed? If you want to do additional processing in a getter/setter method. Elements belong to persistence unit in persistence.xml provider, jta-data-source DAO methos always throws SQLException Transaction Models - Nested If the main transaction failed, the nested transactions are also rolled back. A failure in a nested transaction doesn't necessarily roll back other nested transactions Transaction Models - Chained If the main transaction failed, the nested transactions are also rolled back. However, a failure in a nested transaction roll back only that transaction. Comparison of Programmatic and Declarative Transactions N/A Programmatic(BMT) Declarative(CMT) Operation Use JTA calls to specify which operations form a single transaction (bean-managed) Specify the transaction properties in the deployment descriptor(container-managed) Available in Sevlets, JSP components, session beans, CDI beans, and messaging-driven bean Session bean, CDI beans, and messaging-driven bean Bean-managed transaction usage Add TransactionManagement(BEAN) on class level. Inject UserTransaction resource ut.begin() ut.commit() ut.rollback() EJB Container-managed transaction usage Add @TransactionAttribute(TransactionAttributeType.REQUIRED) Transaction Attributes REQUIRED The method becomes part of the caller's transaction. If the caller does not have a transaction, the method runs in its own transaction. REQUIRED_NEW The method always runs in its own transaction. Any existing transaction is suspended. NOT_SUPPORTED The method never runs in a transaction. Any existing transaction is suspended. SUPPORTS The method becomes part of the caller's transaction. If the caller does not have a transaction, the method doesn't runs in a transaction. MANDATORY It is an error to call this method outside of a transaction. NEVER It is an error to call this method in a transaction. JEE Concurrency Mechanisms Message-Driven Bean Get a ManagedExecutorService instance which Alternative Should You Use? Message-Driven Bean Don't require a reference to the actual EJB Support fire and forget methods(not return value) Require server administration Asynchronous EJBs Require a reference to the actual EJB that can be injected by using CDI Support return values in methods Don't require server administration Managed Executors Provide maximum control over threads, and are the most native way of executing tasks Require server administration ManageTaskListener events: taskAborted, taskStarting JSR-250 javax.annotaion.security @RunAs(\"admin\"), @RolesAllowed({\"user\", \"admin\"}), @PermitAll, @RolesAllowed, @DenyAll and they are only supported for JAX-WS EJB endpoints, JAX-RS EJB endpoints, JAX-RS POJO endpoints . JAX-WS POJO is not supported. Security annotations can be placed session bean class and method Web service security extensions contains WS-Addressing, WS-Security ejb-jar.xml, @RolesAllowed can restrict resource access by user role. login-config section in XML is used to configured to allow user authentication with the application. JSR-352: Batch Applications API for defining long-running jobs Running batch processes on an Enterprise Server Execution controlled by application server A batch contains the following: Job, Step, JobOperator, JobRepository, Item Reader, Item Writer, Item Processor Timer Service The EJB timer service is a container-managed service that provides a way to allow method to be invoked at specific times or time intervals. The EJB timer may be set to invoke certain EJB method at a specific time, after a specific duration, or at specific recurring intervals. Timers can be created programmatically by interacting with TimerService or automatically through annotations. These Timer tasks apply to the following types of enterprise beans: Stateless and singleton session beans Message-driven beans Timers are intended for long-lived business processes and are by default persistent. Types of Timer Programmatic timers : Created by TimerService AUtomatic timers: created by java.ejb.Schedule and java.ejb.Schedules annotations. Calendar-Based Schedule Timers Seven attributes can be used to define a Schedule second minute hour dayOfMonth dayOfWeek month year MDB (Messaging Driven Bean) Configuring the Message-Driven Bean Message-Driven Bean support configuration by: Annotations Deployment descriptors Annotaion-based configuration is performed by specifying a set of ActivationConfigProperty annotations for the activationConfig property of the @MessageDriven annotation. Every message-driven bean must be configured with a destination. Common configurations are: Destination type Message acknowledgement Message selection API for Topic Subscriptions For unshared durable subscriptions, the clientId must be set and is used to identify the subscription. For shared subscriptions, the clientID is optional. If it is set, it is used to identify the subscription. JMS support two types of messaging PTP (Point-to-point): Messaging by using queues Publish/sunscribe: Messaging by using topics Two types of Administered objects ConnectionFactory Destionation JMS Application is composed of the following parts JMS provider JMS clients Messages Administered objects JMS 2.0 New Features Simplified API Injection of JMSContext object Creating JMS Desination using annotation Delivery Delay Asynchronous Send Standardized Configurations CDI Interceptor can be used bellow lifecycle @AroundInvoke @PostConstruct @PreDestory @PrePassivate @PostActivate Create a qualifier @Qualifier @Retention ( RUNTIME ) @Target ({ METHOD , FIELD , PARAMETER , TYPE }) public @interface YourQualifierName {} CDI Context and Dependency Injection Limitations on CDI Beans A bean cannot be: A non-static inner class Annotated with an EJB component-defining annotation or declared as an EJB bean class in ejb-jar.xml A bean must have an appropriate constructor The class has a constructor with no parameters The class declares a constructor annotated with @Inject EJB 3.0 Annotations Simplification of enterprise bean types Entity persistence through JPA EJB 3.1 Singleton session bean Asynchronous session bean invocations EJB Timer Service Portable global JNDI names Embeddable EJB Container EJB 3.1 Lite Packaging and deployment of EJBs directory in a WAR file JSR-345 EJB 3.2 New Features Enhanced message-driven bean contract with no-method message listener interface Container-provide security role names \"**\" Local asynchronous session bean invocations and no-persistent EJB Timer Service included Support for transactions in SFSB lifecycle callbacks Ability to disable passivation of stateful session beans: Enhanced TimerService API to access all active timer in the EJB module with getAllTimer() Embeddable EJB Container to implement the AutoCloseable interface Removal of restrictions on the javax.ejb.Timer and javax.ejb.TimerHanlder references Relaxed default rules for a session bean to designate its implemented interfaces EJB Components Are managed by an EJB container Provide business and messaging function Are scalable, transactional, multiuser and secure EJB components types Session Beans Stateless Stateful Singleton Message Driven Bean JNDI -> The Java Naming and Directory Interface is an API that provides naming and directory functionality to applications. Independent of any implementation Build on a service provider interface (SPI) JAX-WS JAVA API for XML Web Service WSDL Structure <?xml version=\"1.0\" encoding=\"UTF-8\"?> <definitions> <types/> <message/> <portType/> <binding/> <service/> </definitions> Vendor neutral and Component based [JCP] https://www.jcp.org/en/home/index A EAR file could contains JAR, WAR, RAR and so on. jar cvf myWebApp . war A java bean implements java.io.Serializable or java.io.Externalizable and using XMLEncoder and XMLDecoder make your application portable.","title":"JEE Basic"},{"location":"Java/2019-05-10-JEE-java/#jee-basic-knowledge","text":"JPA Entity Class Requirement Must be annotated with @Entity Must have a public or protected no-arg constructor Must be a top-level class The persistent state of an entity is represented by instance fields. Entities support inheritance and must not be final. If an entity instance is to be passed by value as a detached object, the entity class must implement the java.io.Serializable interface Why would you choose persistent properties over persistent filed? If you want to do additional processing in a getter/setter method. Elements belong to persistence unit in persistence.xml provider, jta-data-source DAO methos always throws SQLException Transaction Models - Nested If the main transaction failed, the nested transactions are also rolled back. A failure in a nested transaction doesn't necessarily roll back other nested transactions Transaction Models - Chained If the main transaction failed, the nested transactions are also rolled back. However, a failure in a nested transaction roll back only that transaction. Comparison of Programmatic and Declarative Transactions N/A Programmatic(BMT) Declarative(CMT) Operation Use JTA calls to specify which operations form a single transaction (bean-managed) Specify the transaction properties in the deployment descriptor(container-managed) Available in Sevlets, JSP components, session beans, CDI beans, and messaging-driven bean Session bean, CDI beans, and messaging-driven bean Bean-managed transaction usage Add TransactionManagement(BEAN) on class level. Inject UserTransaction resource ut.begin() ut.commit() ut.rollback() EJB Container-managed transaction usage Add @TransactionAttribute(TransactionAttributeType.REQUIRED) Transaction Attributes REQUIRED The method becomes part of the caller's transaction. If the caller does not have a transaction, the method runs in its own transaction. REQUIRED_NEW The method always runs in its own transaction. Any existing transaction is suspended. NOT_SUPPORTED The method never runs in a transaction. Any existing transaction is suspended. SUPPORTS The method becomes part of the caller's transaction. If the caller does not have a transaction, the method doesn't runs in a transaction. MANDATORY It is an error to call this method outside of a transaction. NEVER It is an error to call this method in a transaction. JEE Concurrency Mechanisms Message-Driven Bean Get a ManagedExecutorService instance which Alternative Should You Use? Message-Driven Bean Don't require a reference to the actual EJB Support fire and forget methods(not return value) Require server administration Asynchronous EJBs Require a reference to the actual EJB that can be injected by using CDI Support return values in methods Don't require server administration Managed Executors Provide maximum control over threads, and are the most native way of executing tasks Require server administration ManageTaskListener events: taskAborted, taskStarting JSR-250 javax.annotaion.security @RunAs(\"admin\"), @RolesAllowed({\"user\", \"admin\"}), @PermitAll, @RolesAllowed, @DenyAll and they are only supported for JAX-WS EJB endpoints, JAX-RS EJB endpoints, JAX-RS POJO endpoints . JAX-WS POJO is not supported. Security annotations can be placed session bean class and method Web service security extensions contains WS-Addressing, WS-Security ejb-jar.xml, @RolesAllowed can restrict resource access by user role. login-config section in XML is used to configured to allow user authentication with the application. JSR-352: Batch Applications API for defining long-running jobs Running batch processes on an Enterprise Server Execution controlled by application server A batch contains the following: Job, Step, JobOperator, JobRepository, Item Reader, Item Writer, Item Processor Timer Service The EJB timer service is a container-managed service that provides a way to allow method to be invoked at specific times or time intervals. The EJB timer may be set to invoke certain EJB method at a specific time, after a specific duration, or at specific recurring intervals. Timers can be created programmatically by interacting with TimerService or automatically through annotations. These Timer tasks apply to the following types of enterprise beans: Stateless and singleton session beans Message-driven beans Timers are intended for long-lived business processes and are by default persistent. Types of Timer Programmatic timers : Created by TimerService AUtomatic timers: created by java.ejb.Schedule and java.ejb.Schedules annotations. Calendar-Based Schedule Timers Seven attributes can be used to define a Schedule second minute hour dayOfMonth dayOfWeek month year MDB (Messaging Driven Bean) Configuring the Message-Driven Bean Message-Driven Bean support configuration by: Annotations Deployment descriptors Annotaion-based configuration is performed by specifying a set of ActivationConfigProperty annotations for the activationConfig property of the @MessageDriven annotation. Every message-driven bean must be configured with a destination. Common configurations are: Destination type Message acknowledgement Message selection API for Topic Subscriptions For unshared durable subscriptions, the clientId must be set and is used to identify the subscription. For shared subscriptions, the clientID is optional. If it is set, it is used to identify the subscription. JMS support two types of messaging PTP (Point-to-point): Messaging by using queues Publish/sunscribe: Messaging by using topics Two types of Administered objects ConnectionFactory Destionation JMS Application is composed of the following parts JMS provider JMS clients Messages Administered objects JMS 2.0 New Features Simplified API Injection of JMSContext object Creating JMS Desination using annotation Delivery Delay Asynchronous Send Standardized Configurations CDI Interceptor can be used bellow lifecycle @AroundInvoke @PostConstruct @PreDestory @PrePassivate @PostActivate Create a qualifier @Qualifier @Retention ( RUNTIME ) @Target ({ METHOD , FIELD , PARAMETER , TYPE }) public @interface YourQualifierName {} CDI Context and Dependency Injection Limitations on CDI Beans A bean cannot be: A non-static inner class Annotated with an EJB component-defining annotation or declared as an EJB bean class in ejb-jar.xml A bean must have an appropriate constructor The class has a constructor with no parameters The class declares a constructor annotated with @Inject EJB 3.0 Annotations Simplification of enterprise bean types Entity persistence through JPA EJB 3.1 Singleton session bean Asynchronous session bean invocations EJB Timer Service Portable global JNDI names Embeddable EJB Container EJB 3.1 Lite Packaging and deployment of EJBs directory in a WAR file JSR-345 EJB 3.2 New Features Enhanced message-driven bean contract with no-method message listener interface Container-provide security role names \"**\" Local asynchronous session bean invocations and no-persistent EJB Timer Service included Support for transactions in SFSB lifecycle callbacks Ability to disable passivation of stateful session beans: Enhanced TimerService API to access all active timer in the EJB module with getAllTimer() Embeddable EJB Container to implement the AutoCloseable interface Removal of restrictions on the javax.ejb.Timer and javax.ejb.TimerHanlder references Relaxed default rules for a session bean to designate its implemented interfaces EJB Components Are managed by an EJB container Provide business and messaging function Are scalable, transactional, multiuser and secure EJB components types Session Beans Stateless Stateful Singleton Message Driven Bean JNDI -> The Java Naming and Directory Interface is an API that provides naming and directory functionality to applications. Independent of any implementation Build on a service provider interface (SPI) JAX-WS JAVA API for XML Web Service WSDL Structure <?xml version=\"1.0\" encoding=\"UTF-8\"?> <definitions> <types/> <message/> <portType/> <binding/> <service/> </definitions> Vendor neutral and Component based [JCP] https://www.jcp.org/en/home/index A EAR file could contains JAR, WAR, RAR and so on. jar cvf myWebApp . war A java bean implements java.io.Serializable or java.io.Externalizable and using XMLEncoder and XMLDecoder make your application portable.","title":"JEE basic knowledge"},{"location":"JavaScript/2018-01-21-jquery-javascript/","text":"Javascript handbook \u00b6 Bootstrap \u00b6 //\u7981\u6b62bootstrap carousel \u81ea\u52a8\u64ad\u653e $ ( '.carousel' ). carousel ({ interval : false }) Jquery UI Autocomplete \u00b6 // \u5728bootstrap modal \u4e0a\u4e0d\u663e\u793a autocomplete dropdown\u7684\u5185\u5bb9 $ ( \"#company\" ). autocomplete ({ source : availableTags , appendTo : \"#exportOrder\" //\u8fd9\u91cc\u9700\u8981\u6307\u5b9amodal\u5143\u7d20 }); Jquery UI Custom tooltip \u00b6 var buildCustomTooltip = function () { $ ( \"i.statistic-tooltip\" ). each ( function () { $ ( this ). tooltip ({ items : $ ( this ), tooltipClass : \"statistic-tooltip\" , position : { my : \"left bottom\" , at : \"right top\" }, content : function () { var total = $ ( this ). attr ( \"total\" ); return \"<ul class=\\\"list-group\\\">\" + \"<li class=\\\"list-group-item\\\"><span class=\\\"badge\\\">\" + total + \"</span> Total of Executions: </li>\" + \"</ul>\" ; } }); }); $ ( \"i.statistic-tooltip\" ). hover ( function (){ $ ( this ). tooltip ( 'open' ); }, function (){ $ ( this ). tooltip ( 'close' ); }); } Dropzone \u00b6 $ ( \"#id\" ). dropzone ({ autoProcessQueue : false , //\u8bbe\u7f6e\u662f\u5426\u6587\u4ef6\u62d6\u62fd\u4e0a\u53bb\u5c31\u6267\u884c\u4e0a\u4f20 maxFiles : 1 , //\u8bbe\u7f6e\u4e00\u6b21\u4e0a\u4f20\u7684\u6700\u5927\u6587\u4ef6\u6570 ... init : function () { var uploadBtn = $ ( \"#uploadBtn\" ); uploadBtn . on ( \"click\" , function () { //\u6267\u884c\u6587\u4ef6\u4e0a\u4f20 this . processQueue (); }); //\u5f53\u6587\u4ef6\u6570\u7b49\u4e8e\u8bbe\u7f6e\u7684maxFiles\u7684\u4e8b\u4ef6 //file \u6307\u7684\u662f\u5f53\u524d\u521a\u6dfb\u52a0\u7684\u6587\u4ef6 this . on ( \"maxfilesexceeded\" , function ( file ) { if ( this . files . length > 1 ) { //this.removeAllFiles(); //\u5220\u9664\u6240\u6709\u5df2\u4e0a\u4f20\u7684\u6587\u4ef6 //this.addFile(file); //\u5220\u9664\u5f53\u524d\u6587\u4ef6 this . removeFile ( file ); //\u6dfb\u52a0\u5f53\u524d\u6587\u4ef6 }; }); //\u6dfb\u52a0\u6587\u4ef6\u7684\u4e8b\u4ef6 this . on ( \"addedfile\" , function ( file ) { }); //\u6587\u4ef6\u4e0a\u4f20\u6210\u529f\u7684\u4e8b\u4ef6 this . on ( \"success\" , function ( file , resp ) { }); } }); Jquery Unbind \u4e8b\u4ef6 \u00b6 ( \"#id\" ). unbind (); Jquery DataTable \u00b6 1.Multiple checkbox select //Refresh sorting/filter information after dom change. //https://datatables.net/reference/api/cell().invalidate() table . column ( 3 ). invalidate ( 'dom' ). draw ( false ); table . row ( 3 ). invalidate ( 'dom' ). draw ( false ); table . cell ( 3 , 3 ). invalidate ( 'dom' ). draw ( false ); //fetch selected rows number table . rows ( '.selected' ). count (); table . row ( 3 ). data (); table . column ( 3 ). nodes (); //fetch visible rows table . rows ({ page : \"current\" }); CodeMirror \u83b7\u53d6\u5b9e\u4f8b \u00b6 //Get a reference to the CodeMirror editor var editor = $ ( '.CodeMirror' )[ 0 ]. CodeMirror ; //You can then use it as you wish editor . setValue ( 'lorem ipsum yada yada' ); editor . replaceSelection ( 'this is a test' ); Checkbox widget \u00b6 //\u5224\u65ad\u662f\u5426\u9009\u4e2d\uff0c chrome \u9009\u4e2d\u8fd4\u56de\"checked\"\uff0c\u672a\u9009\u4e2d\u8fd4\u56deundefined $ ( \"#Checkbox2\" ). attr ( \"checked\" ) //\u8bbe\u7f6eradio\u9009\u4e2d $ ( \"#Checkbox2\" ). attr ( \"checked\" , \"checked\" ) $ ( \"#Checkbox2\" ). prop ( \"checked\" , \"checked\" ); //\u89e6\u53d1onChanges\u4e8b\u4ef6 $ ( \"#Checkbox2\" ). prop ( \"checked\" , \"checked\" ). change () Radio widget \u00b6 //\u8bbe\u7f6eradio\u9009\u4e2d $ ( \"#radio\" ). prop ( \"checked\" , \"checked\" ); //\u8bbe\u7f6eradio\u4e0d\u9009\u4e2d $ ( \"#radio\" ). prop ( \"checked\" , false ); Select widget \u00b6 //\u8bbe\u7f6eselect\u662fdisable \u4f46\u662f\u6b64\u72b6\u6001form\u63d0\u4ea4\u7684\u65f6\u5019\uff0c\u8be5\u5b57\u6bb5\u7684\u503c\u4e0d\u4f1a\u88ab\u63d0\u4ea4 $ ( \"#select\" ). prop ( \"disable\" , false ); Selec2 \u8bbe\u7f6eselect\u63a7\u4ef6\u53ea\u8bfb \u00b6 //version 4.x $ ( \"select#commandType\" ). prop ( \"disabled\" , true ); Javascript\u5bf9\u8c61\u6216\u8005\u6570\u7ec4\u8f6c\u5316\u4e3a\u5b57\u7b26\u4e32 \u00b6 {% highlight javascript %} //1. Javascript\u5bf9\u8c61\u6216\u8005\u6570\u7ec4\u8f6c\u5316\u4e3a\u5b57\u7b26\u4e32 /* * value: Javascript\u5bf9\u8c61\u6216\u8005\u6570\u7ec4 * replacer[optional]: \u7528\u6765\u505a\u683c\u5f0f\u5316\u8f93\u51fa * space[optional]\uff1a\u503c\u53ef\u4ee5\u662f\u5b57\u7b26\u4e32\u6216\u8005\u6570\u5b57\uff0c\u7528\u6765\u66ff\u6362\u7a7a\u767d\u5b57\u7b26 / JSON.stringify(value[, replacer [, space]]); e.g: JSON.stringify(JSONObject, null , 2); //2. \u5b57\u7b26\u4e32\u8f6c\u5316\u4e3aJSON\u5bf9\u8c61 /* * text: JSON\u5b57\u7b26\u4e32 * reviver[optional]: \u53ef\u4ee5\u64cd\u4f5c\u8f6c\u5316\u7684\u7ed3\u679c / JSON.parse(text[, reviver]) e.g: JSON.parse('{\"p\": 5}', (key, value) => typeof value === 'number' ? value * 2 // return value * 2 for numbers : value // return everything else unchanged ); {% endhighlight %} How to add a HTMLEvent to Html element \u00b6 {% highlight javascript %} var ele = document.getElementById(\"input_1\"); /<strong> <em>\u4e8b\u4ef6\u7c7b\u578b </em>\u4e8b\u4ef6\u88ab\u89e6\u53d1\u540e\u6267\u884c\u7684\u56de\u8c03\u51fd\u6570 *useCapture https://developer.mozilla.org/zh-CN/docs/Web/API/EventTarget/addEventListener </strong>/ ele.addEventListener(\"input\", function(){console.log(this.value)}, false); /<strong> *\u521b\u5efa\u4e00\u4e2aInputEvent https://developer.mozilla.org/en-US/docs/Web/Events </strong>/ var inputEvent = new InputEvent(\"input\"); //\u5206\u53d1\u4e8b\u4ef6 https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/dispatchEvent ele.dispatchEvent(inputEvent);</p> <div class=\"codehilite\"><pre><span></span>//\u89e6\u53d1built-in \u4e8b\u4ef6 https://developer.mozilla.org/en-US/docs/Web/Guide/Events/Creating_and_triggering_events#Triggering_built-in_events </pre></div> <p> {% endhighlight %} Add indicator when ajax call \u00b6 {% highlight javascript %} $(document) .ajaxStart(function () { $loading.show(); }) .ajaxStop(function () { $loading.hide(); }); {% endhighlight %} Html \u4e2d\u53d6\u5f97Iframe\u4e2d\u7684\u5143\u7d20 \u00b6 {% highlight javascript%} var f = document.getElementById(\"#FrameId\"); f.contentDocument.getElementById(\"#ElementId\").value; {% endhighlight%} \u963b\u6b62\u8868\u5355\u901a\u8fc7entry\u63d0\u4ea4 \u00b6 $ ( document ). on ( \"keyup keypress\" , \"form input\" , function ( e ) { if ( e . which == 13 ) { e . preventDefault (); return false ; } });","title":"Javascript handbook"},{"location":"JavaScript/2018-01-21-jquery-javascript/#javascript-handbook","text":"","title":"Javascript handbook"},{"location":"JavaScript/2018-01-21-jquery-javascript/#bootstrap","text":"//\u7981\u6b62bootstrap carousel \u81ea\u52a8\u64ad\u653e $ ( '.carousel' ). carousel ({ interval : false })","title":"Bootstrap"},{"location":"JavaScript/2018-01-21-jquery-javascript/#jquery-ui-autocomplete","text":"// \u5728bootstrap modal \u4e0a\u4e0d\u663e\u793a autocomplete dropdown\u7684\u5185\u5bb9 $ ( \"#company\" ). autocomplete ({ source : availableTags , appendTo : \"#exportOrder\" //\u8fd9\u91cc\u9700\u8981\u6307\u5b9amodal\u5143\u7d20 });","title":"Jquery UI Autocomplete"},{"location":"JavaScript/2018-01-21-jquery-javascript/#jquery-ui-custom-tooltip","text":"var buildCustomTooltip = function () { $ ( \"i.statistic-tooltip\" ). each ( function () { $ ( this ). tooltip ({ items : $ ( this ), tooltipClass : \"statistic-tooltip\" , position : { my : \"left bottom\" , at : \"right top\" }, content : function () { var total = $ ( this ). attr ( \"total\" ); return \"<ul class=\\\"list-group\\\">\" + \"<li class=\\\"list-group-item\\\"><span class=\\\"badge\\\">\" + total + \"</span> Total of Executions: </li>\" + \"</ul>\" ; } }); }); $ ( \"i.statistic-tooltip\" ). hover ( function (){ $ ( this ). tooltip ( 'open' ); }, function (){ $ ( this ). tooltip ( 'close' ); }); }","title":"Jquery UI Custom tooltip"},{"location":"JavaScript/2018-01-21-jquery-javascript/#dropzone","text":"$ ( \"#id\" ). dropzone ({ autoProcessQueue : false , //\u8bbe\u7f6e\u662f\u5426\u6587\u4ef6\u62d6\u62fd\u4e0a\u53bb\u5c31\u6267\u884c\u4e0a\u4f20 maxFiles : 1 , //\u8bbe\u7f6e\u4e00\u6b21\u4e0a\u4f20\u7684\u6700\u5927\u6587\u4ef6\u6570 ... init : function () { var uploadBtn = $ ( \"#uploadBtn\" ); uploadBtn . on ( \"click\" , function () { //\u6267\u884c\u6587\u4ef6\u4e0a\u4f20 this . processQueue (); }); //\u5f53\u6587\u4ef6\u6570\u7b49\u4e8e\u8bbe\u7f6e\u7684maxFiles\u7684\u4e8b\u4ef6 //file \u6307\u7684\u662f\u5f53\u524d\u521a\u6dfb\u52a0\u7684\u6587\u4ef6 this . on ( \"maxfilesexceeded\" , function ( file ) { if ( this . files . length > 1 ) { //this.removeAllFiles(); //\u5220\u9664\u6240\u6709\u5df2\u4e0a\u4f20\u7684\u6587\u4ef6 //this.addFile(file); //\u5220\u9664\u5f53\u524d\u6587\u4ef6 this . removeFile ( file ); //\u6dfb\u52a0\u5f53\u524d\u6587\u4ef6 }; }); //\u6dfb\u52a0\u6587\u4ef6\u7684\u4e8b\u4ef6 this . on ( \"addedfile\" , function ( file ) { }); //\u6587\u4ef6\u4e0a\u4f20\u6210\u529f\u7684\u4e8b\u4ef6 this . on ( \"success\" , function ( file , resp ) { }); } });","title":"Dropzone"},{"location":"JavaScript/2018-01-21-jquery-javascript/#jquery-unbind","text":"( \"#id\" ). unbind ();","title":"Jquery Unbind \u4e8b\u4ef6"},{"location":"JavaScript/2018-01-21-jquery-javascript/#jquery-datatable","text":"1.Multiple checkbox select //Refresh sorting/filter information after dom change. //https://datatables.net/reference/api/cell().invalidate() table . column ( 3 ). invalidate ( 'dom' ). draw ( false ); table . row ( 3 ). invalidate ( 'dom' ). draw ( false ); table . cell ( 3 , 3 ). invalidate ( 'dom' ). draw ( false ); //fetch selected rows number table . rows ( '.selected' ). count (); table . row ( 3 ). data (); table . column ( 3 ). nodes (); //fetch visible rows table . rows ({ page : \"current\" });","title":"Jquery DataTable"},{"location":"JavaScript/2018-01-21-jquery-javascript/#codemirror","text":"//Get a reference to the CodeMirror editor var editor = $ ( '.CodeMirror' )[ 0 ]. CodeMirror ; //You can then use it as you wish editor . setValue ( 'lorem ipsum yada yada' ); editor . replaceSelection ( 'this is a test' );","title":"CodeMirror \u83b7\u53d6\u5b9e\u4f8b"},{"location":"JavaScript/2018-01-21-jquery-javascript/#checkbox-widget","text":"//\u5224\u65ad\u662f\u5426\u9009\u4e2d\uff0c chrome \u9009\u4e2d\u8fd4\u56de\"checked\"\uff0c\u672a\u9009\u4e2d\u8fd4\u56deundefined $ ( \"#Checkbox2\" ). attr ( \"checked\" ) //\u8bbe\u7f6eradio\u9009\u4e2d $ ( \"#Checkbox2\" ). attr ( \"checked\" , \"checked\" ) $ ( \"#Checkbox2\" ). prop ( \"checked\" , \"checked\" ); //\u89e6\u53d1onChanges\u4e8b\u4ef6 $ ( \"#Checkbox2\" ). prop ( \"checked\" , \"checked\" ). change ()","title":"Checkbox widget"},{"location":"JavaScript/2018-01-21-jquery-javascript/#radio-widget","text":"//\u8bbe\u7f6eradio\u9009\u4e2d $ ( \"#radio\" ). prop ( \"checked\" , \"checked\" ); //\u8bbe\u7f6eradio\u4e0d\u9009\u4e2d $ ( \"#radio\" ). prop ( \"checked\" , false );","title":"Radio widget"},{"location":"JavaScript/2018-01-21-jquery-javascript/#select-widget","text":"//\u8bbe\u7f6eselect\u662fdisable \u4f46\u662f\u6b64\u72b6\u6001form\u63d0\u4ea4\u7684\u65f6\u5019\uff0c\u8be5\u5b57\u6bb5\u7684\u503c\u4e0d\u4f1a\u88ab\u63d0\u4ea4 $ ( \"#select\" ). prop ( \"disable\" , false );","title":"Select widget"},{"location":"JavaScript/2018-01-21-jquery-javascript/#selec2-select","text":"//version 4.x $ ( \"select#commandType\" ). prop ( \"disabled\" , true );","title":"Selec2 \u8bbe\u7f6eselect\u63a7\u4ef6\u53ea\u8bfb"},{"location":"JavaScript/2018-01-21-jquery-javascript/#javascript","text":"{% highlight javascript %} //1. Javascript\u5bf9\u8c61\u6216\u8005\u6570\u7ec4\u8f6c\u5316\u4e3a\u5b57\u7b26\u4e32 /* * value: Javascript\u5bf9\u8c61\u6216\u8005\u6570\u7ec4 * replacer[optional]: \u7528\u6765\u505a\u683c\u5f0f\u5316\u8f93\u51fa * space[optional]\uff1a\u503c\u53ef\u4ee5\u662f\u5b57\u7b26\u4e32\u6216\u8005\u6570\u5b57\uff0c\u7528\u6765\u66ff\u6362\u7a7a\u767d\u5b57\u7b26 / JSON.stringify(value[, replacer [, space]]); e.g: JSON.stringify(JSONObject, null , 2); //2. \u5b57\u7b26\u4e32\u8f6c\u5316\u4e3aJSON\u5bf9\u8c61 /* * text: JSON\u5b57\u7b26\u4e32 * reviver[optional]: \u53ef\u4ee5\u64cd\u4f5c\u8f6c\u5316\u7684\u7ed3\u679c / JSON.parse(text[, reviver]) e.g: JSON.parse('{\"p\": 5}', (key, value) => typeof value === 'number' ? value * 2 // return value * 2 for numbers : value // return everything else unchanged ); {% endhighlight %}","title":"Javascript\u5bf9\u8c61\u6216\u8005\u6570\u7ec4\u8f6c\u5316\u4e3a\u5b57\u7b26\u4e32"},{"location":"JavaScript/2018-01-21-jquery-javascript/#how-to-add-a-htmlevent-to-html-element","text":"{% highlight javascript %} var ele = document.getElementById(\"input_1\"); /<strong> <em>\u4e8b\u4ef6\u7c7b\u578b </em>\u4e8b\u4ef6\u88ab\u89e6\u53d1\u540e\u6267\u884c\u7684\u56de\u8c03\u51fd\u6570 *useCapture https://developer.mozilla.org/zh-CN/docs/Web/API/EventTarget/addEventListener </strong>/ ele.addEventListener(\"input\", function(){console.log(this.value)}, false); /<strong> *\u521b\u5efa\u4e00\u4e2aInputEvent https://developer.mozilla.org/en-US/docs/Web/Events </strong>/ var inputEvent = new InputEvent(\"input\"); //\u5206\u53d1\u4e8b\u4ef6 https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/dispatchEvent ele.dispatchEvent(inputEvent);</p> <div class=\"codehilite\"><pre><span></span>//\u89e6\u53d1built-in \u4e8b\u4ef6 https://developer.mozilla.org/en-US/docs/Web/Guide/Events/Creating_and_triggering_events#Triggering_built-in_events </pre></div> <p> {% endhighlight %}","title":"How to add a HTMLEvent to Html element"},{"location":"JavaScript/2018-01-21-jquery-javascript/#add-indicator-when-ajax-call","text":"{% highlight javascript %} $(document) .ajaxStart(function () { $loading.show(); }) .ajaxStop(function () { $loading.hide(); }); {% endhighlight %}","title":"Add indicator when ajax call"},{"location":"JavaScript/2018-01-21-jquery-javascript/#html-iframe","text":"{% highlight javascript%} var f = document.getElementById(\"#FrameId\"); f.contentDocument.getElementById(\"#ElementId\").value; {% endhighlight%}","title":"Html \u4e2d\u53d6\u5f97Iframe\u4e2d\u7684\u5143\u7d20"},{"location":"JavaScript/2018-01-21-jquery-javascript/#entry","text":"$ ( document ). on ( \"keyup keypress\" , \"form input\" , function ( e ) { if ( e . which == 13 ) { e . preventDefault (); return false ; } });","title":"\u963b\u6b62\u8868\u5355\u901a\u8fc7entry\u63d0\u4ea4"},{"location":"JavaScript/2018-06-07-requirejs-javascript/","text":"Project Information \u00b6 An quick start project with requirejs, bootstrap and codemirror.js Project structure \u00b6 www/ html index.html js/ lib/ jquery.1.11.3.min.js bootstrap.min.js bootstrap.bundle.min.js codemirror.js javascript.js scheme.js require.js app/ index.js require-common.js require-index.js - css/ - bootstrap.min.css - bootstrap-grid.min.css - codemirror.css Requirejs configuration \u00b6 index.html < script data-main = \"../js/require-index.js\" src = \"../js/lib/require.js\" ></ script > require-common.js require . config ({ baseUrl : \"../js/lib\" , //\u4eceindex.html\u9875\u9762\u5bfc\u822a\u5230js\u6587\u4ef6\u5939 \"paths\" : { \"jquery\" : \"jquery.1.11.3.min\" , \"codemirror\" : \"codemirror\" , \"javascript\" : \"javascript\" , \"scheme\" : \"scheme\" }, \"shim\" : { \"jquery\" : { exports : \"jquery\" }, \"codemirror\" : { exports : \"codemirror\" }, \"javascript\" : { exports : \"javascript\" }, \"scheme\" : { exports : \"scheme\" } } }); require-index.js require ([ \"./require-common\" ], function ( common ) { require ([ \"../js/app/index.js\" ]); //\u4eceindex.html\u9875\u9762\u5f15\u7528index.js\u6587\u4ef6\u7684\u8def\u5f84 }) index.js define ([ \"jquery\" , \"codemirror\" , \"javascript\" , \"scheme\" ], function ( $ , CodeMirror , javascript , scheme ) { $ ( function () { var ele = $ ( \"#tx1\" )[ 0 ]; var editor = CodeMirror . fromTextArea ( ele , { mode : \"scheme\" , lineNumbers : true }); var looksLikeScheme = function ( code ) { return ! /^\\s*\\(\\s*function\\b/ . test ( code ) && /^\\s*[;\\(]/ . test ( code ); }; var update = function () { editor . setOption ( \"mode\" , looksLikeScheme ( editor . getValue ()) ? \"scheme\" : \"javascript\" ); }; var pending ; editor . on ( \"change\" , function () { clearTimeout ( pending ); pending = setTimeout ( update (), 400 ) }); }); }); Codemirror configuration \u00b6 Because I put the codemirror.js, javascript.js and scheme.js in the same folder. So I need so some customizations in javascript.js and scheme.js. JavaScript.js ( function ( mod ) { if ( typeof exports == \"object\" && typeof module == \"object\" ) // CommonJS mod ( require ( \"../../lib/codemirror\" )); // (\"../../lib/codemirror\") -- > (\"codemirror\") \u4fee\u6539\u76f8\u5bf9\u8def\u5f84 else if ( typeof define == \"function\" && define . amd ) // AMD define ([ \"../../lib/codemirror\" ], mod ); // (\"../../lib/codemirror\") -- > (\"codemirror\") \u4fee\u6539\u76f8\u5bf9\u8def\u5f84 else // Plain browser env mod ( CodeMirror ); })( function ( CodeMirror ) { scheme.js ( function ( mod ) { if ( typeof exports == \"object\" && typeof module == \"object\" ) // CommonJS mod ( require ( \"codemirror\" )); // (\"../../lib/codemirror\") -- > (\"codemirror\") \u4fee\u6539\u76f8\u5bf9\u8def\u5f84 else if ( typeof define == \"function\" && define . amd ) // AMD define ([ \"codemirror\" ], mod ); // (\"../../lib/codemirror\") -- > (\"codemirror\") \u4fee\u6539\u76f8\u5bf9\u8def\u5f84 else // Plain browser env mod ( CodeMirror ); })( function ( CodeMirror ) { \"use strict\" ; Download","title":"RequireJs \u7528\u6cd5"},{"location":"JavaScript/2018-06-07-requirejs-javascript/#project-information","text":"An quick start project with requirejs, bootstrap and codemirror.js","title":"Project Information"},{"location":"JavaScript/2018-06-07-requirejs-javascript/#project-structure","text":"www/ html index.html js/ lib/ jquery.1.11.3.min.js bootstrap.min.js bootstrap.bundle.min.js codemirror.js javascript.js scheme.js require.js app/ index.js require-common.js require-index.js - css/ - bootstrap.min.css - bootstrap-grid.min.css - codemirror.css","title":"Project structure"},{"location":"JavaScript/2018-06-07-requirejs-javascript/#requirejs-configuration","text":"index.html < script data-main = \"../js/require-index.js\" src = \"../js/lib/require.js\" ></ script > require-common.js require . config ({ baseUrl : \"../js/lib\" , //\u4eceindex.html\u9875\u9762\u5bfc\u822a\u5230js\u6587\u4ef6\u5939 \"paths\" : { \"jquery\" : \"jquery.1.11.3.min\" , \"codemirror\" : \"codemirror\" , \"javascript\" : \"javascript\" , \"scheme\" : \"scheme\" }, \"shim\" : { \"jquery\" : { exports : \"jquery\" }, \"codemirror\" : { exports : \"codemirror\" }, \"javascript\" : { exports : \"javascript\" }, \"scheme\" : { exports : \"scheme\" } } }); require-index.js require ([ \"./require-common\" ], function ( common ) { require ([ \"../js/app/index.js\" ]); //\u4eceindex.html\u9875\u9762\u5f15\u7528index.js\u6587\u4ef6\u7684\u8def\u5f84 }) index.js define ([ \"jquery\" , \"codemirror\" , \"javascript\" , \"scheme\" ], function ( $ , CodeMirror , javascript , scheme ) { $ ( function () { var ele = $ ( \"#tx1\" )[ 0 ]; var editor = CodeMirror . fromTextArea ( ele , { mode : \"scheme\" , lineNumbers : true }); var looksLikeScheme = function ( code ) { return ! /^\\s*\\(\\s*function\\b/ . test ( code ) && /^\\s*[;\\(]/ . test ( code ); }; var update = function () { editor . setOption ( \"mode\" , looksLikeScheme ( editor . getValue ()) ? \"scheme\" : \"javascript\" ); }; var pending ; editor . on ( \"change\" , function () { clearTimeout ( pending ); pending = setTimeout ( update (), 400 ) }); }); });","title":"Requirejs configuration"},{"location":"JavaScript/2018-06-07-requirejs-javascript/#codemirror-configuration","text":"Because I put the codemirror.js, javascript.js and scheme.js in the same folder. So I need so some customizations in javascript.js and scheme.js. JavaScript.js ( function ( mod ) { if ( typeof exports == \"object\" && typeof module == \"object\" ) // CommonJS mod ( require ( \"../../lib/codemirror\" )); // (\"../../lib/codemirror\") -- > (\"codemirror\") \u4fee\u6539\u76f8\u5bf9\u8def\u5f84 else if ( typeof define == \"function\" && define . amd ) // AMD define ([ \"../../lib/codemirror\" ], mod ); // (\"../../lib/codemirror\") -- > (\"codemirror\") \u4fee\u6539\u76f8\u5bf9\u8def\u5f84 else // Plain browser env mod ( CodeMirror ); })( function ( CodeMirror ) { scheme.js ( function ( mod ) { if ( typeof exports == \"object\" && typeof module == \"object\" ) // CommonJS mod ( require ( \"codemirror\" )); // (\"../../lib/codemirror\") -- > (\"codemirror\") \u4fee\u6539\u76f8\u5bf9\u8def\u5f84 else if ( typeof define == \"function\" && define . amd ) // AMD define ([ \"codemirror\" ], mod ); // (\"../../lib/codemirror\") -- > (\"codemirror\") \u4fee\u6539\u76f8\u5bf9\u8def\u5f84 else // Plain browser env mod ( CodeMirror ); })( function ( CodeMirror ) { \"use strict\" ; Download","title":"Codemirror configuration"},{"location":"JavaScript/2018-07-02-objectmodel-javascript/","text":"Details of the object model \u00b6 JavaScript\u4e0d\u662f\u57fa\u4e8eclass\uff0c\u800c\u662f\u57fa\u4e8eobject\u7684\u8bed\u8a00\u3002\u7531\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0c\u521b\u5efa\u4e00\u4e2a\u7ee7\u627f\u5173\u7cfb\u5c31\u53d8\u5f97\u4e0d\u662f\u7279\u522b\u663e\u800c\u6613\u89c1\u3002 The differences between class-based and object-based languange \u00b6 \u57fa\u4e8eclass\u7684\u8bed\u8a00\u6e05\u695a\u7684\u533a\u5206\u7c7b\u4e0e\u5b9e\u4f8b\u3002 class \u5c31\u662f\u67d0\u4e00\u7c7b\u7269\u4f53\u7684\u62bd\u8c61\uff0c\u5305\u62ec\u5c5e\u6027\uff0c\u65b9\u6cd5\u3002 instance \u5c31\u662f\u67d0\u4e2a\u7c7b\u4e00\u4e2a\u5177\u4f53\u7684\u5b9e\u4f8b\u3002 \u57fa\u4e8eobject\u7684\u8bed\u8a00\uff0c\u4e0d\u533a\u5206 class \u4e0e instance , \u4f46\u662f\u6709\u539f\u578b\u5bf9\u8c61( prototypical object )\u7684\u6982\u5ff5\u3002\u4efb\u4f55\u4e00\u4e2a\u5bf9\u8c61\u53ef\u4ee5\u62e5\u6709\u81ea\u5df1\u7684\u5c5e\u6027\uff0c\u4e5f\u53ef\u4ee5\u5728runtime\u7684\u65f6\u5019\u521b\u5efa\u81ea\u5df1\u7684\u5c5e\u6027\u3002\u4efb\u4f55\u4e00\u4e2a\u5bf9\u8c61A\u90fd\u53ef\u4ee5\u4f5c\u4e3a\u53e6\u5916\u4e00\u4e2a\u5bf9\u8c61B\u7684prototype\uff0c\u5728B\u5bf9\u8c61\u4e2d\u53ef\u4ee5\u5171\u4eabA\u7684\u5c5e\u6027\u3002 JavaScript\u4f7f\u7528 Function \u5173\u952e\u5b57\u5b9a\u4e49\u4e00\u4e2a\u7c7b\uff0c\u901a\u8fc7\u4f7f\u7528 new \u5173\u952e\u5b57\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5bf9\u8c61\u3002 Javascript\u4f7f\u7528 prototypical object \u5b9e\u73b0\u7ee7\u627f\u3002 \u57fa\u4e8e class \u7684\u8bed\u8a00\u5728\u521b\u5efa\u7c7b\u4e4b\u540e\u4e0d\u80fd\u6539\u53d8\u7c7b\u7684\u5c5e\u6027\u3002\u57fa\u4e8e object \u7684\u8bed\u8a00\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u4e3a\u4e00\u4e2a\u5bf9\u8c61\u6dfb\u52a0\u6216\u8005\u5220\u9664\u5c5e\u6027\u3002\u5982\u679c\u4e3a\u4e00\u4e2a\u7236\u7c7b\u6dfb\u52a0\u5c5e\u6027\uff0c\u5b50\u7c7b\u4e5f\u4f1a\u62e5\u6709\u76f8\u540c\u7684\u5c5e\u6027\u3002 The employee example \u00b6 Simple constructors \u00b6 //define Employee function Employee () { this . name = '' ; this . dept = 'general' ; }; //define Manager function Manager () { Employee . call ( this ); //\u6216\u8005\u4f7f\u7528\u4ee5\u4e0b\u5f62\u5f0f //this.base = Employee; this . reports = []; this . dept = \"sale\" ; this . team = \"QQ\" ; }; Manager . prototype = Object . create ( Employee . prototype ); //\u6216\u8005\u4f7f\u7528\u4ee5\u4e0b\u5f62\u5f0f //Manager.prototype = new Employee; var manager = new Manager ; var m = new Manager ; console . log ( m . dept ); //sale console . log ( m . reports ); // [] console . log ( m . team ); // QQ More flexible constructors \u00b6 function Employee ( name , dept ) { this . name = name || '' ; this . dept = dept || 'general' ; } function WorkerBee ( name , dept , projs ) { //\u6307\u5b9a\u7236\u7c7b this . base = Employee ; //\u8c03\u7528\u7236\u7c7b\u6784\u9020\u65b9\u6cd5 this . base ( name , dept ); this . projects = projs || []; } WorkerBee . prototype = new Employee ; function Engineer ( name , project , mach ) { this . base = WorkerBee ; this . base ( name , 'engineering' , project ); this . dept = 'engineering' ; this . machine = mach || '' ; } Engineer . prototype = new WorkerBee ; var engine = new Engineer ( 'Jack' , [ 'python' , 'perl' ], 'belau' ); console . log ( engine . name , engine . dept , engine . projects , engine . machine ); //Jack engineering [ 'python', 'perl' ] belau Prototype Chain \u00b6 //\u539f\u578b\u94fe\u5c31\u662f\u5bf9\u8c61\u7684\u7ee7\u627f\u94fe\uff0c\u67e5\u627e\u5c5e\u6027\u7684\u65f6\u5019\u6cbf\u7740\u8fd9\u4e2a\u94fe\u6761\u5411\u4e0a\u67e5\u627e var chris = new Engineer ( 'Jack' , [ 'python' , 'perl' ], 'belau' ); // engine\u7684\u539f\u578b\u94fe\u5982\u4e0b: chris . __proto__ == Engineer . prototype ; chris . __proto__ . __proto__ == WorkerBee . prototype ; chris . __proto__ . __proto__ . __proto__ == Employee . prototype ; chris . __proto__ . __proto__ . __proto__ . __proto__ == Object . prototype ; chris . __proto__ . __proto__ . __proto__ . __proto__ . __proto__ == null ; //instance of \u51fd\u6570 function instanceOf ( object , constructor ) { object = object . __proto__ ; while ( object != null ) { if ( object == constructor . prototype ) return true ; if ( typeof object == 'xml' ) { return constructor . prototype == XML . prototype ; } object = object . __proto__ ; } return false ; } instanceOf ( chris , Engineer ); //true instanceOf ( chris , WorkerBee ); //true instanceOf ( chris , Employee ); //true instanceOf ( chris , Object ); //true Local or Inherited values \u00b6 \u5982\u679c\u9700\u8981\u5728\u8fd0\u884c\u65f6\u4fee\u6539\u4e00\u4e2a\u5bf9\u8c61\u7684\u5c5e\u6027\uff0c\u5e76\u4e14\u60f3\u8ba9\u8fd9\u4e2a\u4fee\u6539\u5f71\u54cd\u5230\u8fd9\u4e2a\u5bf9\u8c61\u7684\u5b50\u7c7b\uff0c\u4f7f\u7528inherited \u7684\u503c\u3002\u53cd\u4e4b\uff0c\u4f7f\u7528local\u503c\u3002 function Employee ( name , dept ) { // name and dept are local values this . name = name || '' ; this . dept = dept || 'general' ; } // type is a inherited value Employee . prototype . type = 'none' ;","title":"Details of the object model"},{"location":"JavaScript/2018-07-02-objectmodel-javascript/#details-of-the-object-model","text":"JavaScript\u4e0d\u662f\u57fa\u4e8eclass\uff0c\u800c\u662f\u57fa\u4e8eobject\u7684\u8bed\u8a00\u3002\u7531\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0c\u521b\u5efa\u4e00\u4e2a\u7ee7\u627f\u5173\u7cfb\u5c31\u53d8\u5f97\u4e0d\u662f\u7279\u522b\u663e\u800c\u6613\u89c1\u3002","title":"Details of the object model"},{"location":"JavaScript/2018-07-02-objectmodel-javascript/#the-differences-between-class-based-and-object-based-languange","text":"\u57fa\u4e8eclass\u7684\u8bed\u8a00\u6e05\u695a\u7684\u533a\u5206\u7c7b\u4e0e\u5b9e\u4f8b\u3002 class \u5c31\u662f\u67d0\u4e00\u7c7b\u7269\u4f53\u7684\u62bd\u8c61\uff0c\u5305\u62ec\u5c5e\u6027\uff0c\u65b9\u6cd5\u3002 instance \u5c31\u662f\u67d0\u4e2a\u7c7b\u4e00\u4e2a\u5177\u4f53\u7684\u5b9e\u4f8b\u3002 \u57fa\u4e8eobject\u7684\u8bed\u8a00\uff0c\u4e0d\u533a\u5206 class \u4e0e instance , \u4f46\u662f\u6709\u539f\u578b\u5bf9\u8c61( prototypical object )\u7684\u6982\u5ff5\u3002\u4efb\u4f55\u4e00\u4e2a\u5bf9\u8c61\u53ef\u4ee5\u62e5\u6709\u81ea\u5df1\u7684\u5c5e\u6027\uff0c\u4e5f\u53ef\u4ee5\u5728runtime\u7684\u65f6\u5019\u521b\u5efa\u81ea\u5df1\u7684\u5c5e\u6027\u3002\u4efb\u4f55\u4e00\u4e2a\u5bf9\u8c61A\u90fd\u53ef\u4ee5\u4f5c\u4e3a\u53e6\u5916\u4e00\u4e2a\u5bf9\u8c61B\u7684prototype\uff0c\u5728B\u5bf9\u8c61\u4e2d\u53ef\u4ee5\u5171\u4eabA\u7684\u5c5e\u6027\u3002 JavaScript\u4f7f\u7528 Function \u5173\u952e\u5b57\u5b9a\u4e49\u4e00\u4e2a\u7c7b\uff0c\u901a\u8fc7\u4f7f\u7528 new \u5173\u952e\u5b57\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5bf9\u8c61\u3002 Javascript\u4f7f\u7528 prototypical object \u5b9e\u73b0\u7ee7\u627f\u3002 \u57fa\u4e8e class \u7684\u8bed\u8a00\u5728\u521b\u5efa\u7c7b\u4e4b\u540e\u4e0d\u80fd\u6539\u53d8\u7c7b\u7684\u5c5e\u6027\u3002\u57fa\u4e8e object \u7684\u8bed\u8a00\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u4e3a\u4e00\u4e2a\u5bf9\u8c61\u6dfb\u52a0\u6216\u8005\u5220\u9664\u5c5e\u6027\u3002\u5982\u679c\u4e3a\u4e00\u4e2a\u7236\u7c7b\u6dfb\u52a0\u5c5e\u6027\uff0c\u5b50\u7c7b\u4e5f\u4f1a\u62e5\u6709\u76f8\u540c\u7684\u5c5e\u6027\u3002","title":"The differences between class-based and object-based languange"},{"location":"JavaScript/2018-07-02-objectmodel-javascript/#the-employee-example","text":"","title":"The employee example"},{"location":"JavaScript/2018-07-02-objectmodel-javascript/#simple-constructors","text":"//define Employee function Employee () { this . name = '' ; this . dept = 'general' ; }; //define Manager function Manager () { Employee . call ( this ); //\u6216\u8005\u4f7f\u7528\u4ee5\u4e0b\u5f62\u5f0f //this.base = Employee; this . reports = []; this . dept = \"sale\" ; this . team = \"QQ\" ; }; Manager . prototype = Object . create ( Employee . prototype ); //\u6216\u8005\u4f7f\u7528\u4ee5\u4e0b\u5f62\u5f0f //Manager.prototype = new Employee; var manager = new Manager ; var m = new Manager ; console . log ( m . dept ); //sale console . log ( m . reports ); // [] console . log ( m . team ); // QQ","title":"Simple constructors"},{"location":"JavaScript/2018-07-02-objectmodel-javascript/#more-flexible-constructors","text":"function Employee ( name , dept ) { this . name = name || '' ; this . dept = dept || 'general' ; } function WorkerBee ( name , dept , projs ) { //\u6307\u5b9a\u7236\u7c7b this . base = Employee ; //\u8c03\u7528\u7236\u7c7b\u6784\u9020\u65b9\u6cd5 this . base ( name , dept ); this . projects = projs || []; } WorkerBee . prototype = new Employee ; function Engineer ( name , project , mach ) { this . base = WorkerBee ; this . base ( name , 'engineering' , project ); this . dept = 'engineering' ; this . machine = mach || '' ; } Engineer . prototype = new WorkerBee ; var engine = new Engineer ( 'Jack' , [ 'python' , 'perl' ], 'belau' ); console . log ( engine . name , engine . dept , engine . projects , engine . machine ); //Jack engineering [ 'python', 'perl' ] belau","title":"More flexible constructors"},{"location":"JavaScript/2018-07-02-objectmodel-javascript/#prototype-chain","text":"//\u539f\u578b\u94fe\u5c31\u662f\u5bf9\u8c61\u7684\u7ee7\u627f\u94fe\uff0c\u67e5\u627e\u5c5e\u6027\u7684\u65f6\u5019\u6cbf\u7740\u8fd9\u4e2a\u94fe\u6761\u5411\u4e0a\u67e5\u627e var chris = new Engineer ( 'Jack' , [ 'python' , 'perl' ], 'belau' ); // engine\u7684\u539f\u578b\u94fe\u5982\u4e0b: chris . __proto__ == Engineer . prototype ; chris . __proto__ . __proto__ == WorkerBee . prototype ; chris . __proto__ . __proto__ . __proto__ == Employee . prototype ; chris . __proto__ . __proto__ . __proto__ . __proto__ == Object . prototype ; chris . __proto__ . __proto__ . __proto__ . __proto__ . __proto__ == null ; //instance of \u51fd\u6570 function instanceOf ( object , constructor ) { object = object . __proto__ ; while ( object != null ) { if ( object == constructor . prototype ) return true ; if ( typeof object == 'xml' ) { return constructor . prototype == XML . prototype ; } object = object . __proto__ ; } return false ; } instanceOf ( chris , Engineer ); //true instanceOf ( chris , WorkerBee ); //true instanceOf ( chris , Employee ); //true instanceOf ( chris , Object ); //true","title":"Prototype Chain"},{"location":"JavaScript/2018-07-02-objectmodel-javascript/#local-or-inherited-values","text":"\u5982\u679c\u9700\u8981\u5728\u8fd0\u884c\u65f6\u4fee\u6539\u4e00\u4e2a\u5bf9\u8c61\u7684\u5c5e\u6027\uff0c\u5e76\u4e14\u60f3\u8ba9\u8fd9\u4e2a\u4fee\u6539\u5f71\u54cd\u5230\u8fd9\u4e2a\u5bf9\u8c61\u7684\u5b50\u7c7b\uff0c\u4f7f\u7528inherited \u7684\u503c\u3002\u53cd\u4e4b\uff0c\u4f7f\u7528local\u503c\u3002 function Employee ( name , dept ) { // name and dept are local values this . name = name || '' ; this . dept = dept || 'general' ; } // type is a inherited value Employee . prototype . type = 'none' ;","title":"Local or Inherited values"},{"location":"Kubernetes/2018-04-08-installation-istio/","text":"1. Minikube Installation \u00b6 Environment: Ubuntu 16.04.4 LTS X86_64bit 1.1 Install Kubectl \u00b6 version v1.10.0 curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/v1.10.0/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/ 1.2 Install Minikube \u00b6 version v0.25.2 curl -Lo minikube https://storage.googleapis.com/minikube/releases/v0.25.2/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/ 1.3 Start Minikube \u00b6 Runs the Kubernetes components on the host and not in a VM with --vm-driver=none export MINIKUBE_WANTUPDATENOTIFICATION = false export MINIKUBE_WANTREPORTERRORPROMPT = false export MINIKUBE_HOME = $HOME export CHANGE_MINIKUBE_NONE_USER = true mkdir $HOME /.kube || true touch $HOME /.kube/config export KUBECONFIG = $HOME /.kube/config minikube start --vm-driver = none \\ --extra-config = controller-manager.ClusterSigningCertFile = \"/var/lib/localkube/certs/ca.crt\" \\ --extra-config = controller-manager.ClusterSigningKeyFile = \"/var/lib/localkube/certs/ca.key\" \\ --extra-config = apiserver.Admission.PluginNames = NamespaceLifecycle,LimitRanger,ServiceAccount,PersistentVolumeLabel,DefaultStorageClass,DefaultTolerationSeconds,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota \\ --kubernetes-version = v1.10.0 1.4 Enabling shell autocompletion (optional) \u00b6 source < ( kubectl completion bash ) echo \"source <(kubectl completion bash)\" >> ~/.bashrc 1.5 Stop Minikube \u00b6 rm -rf .minikube miniube status 2. Istio Installation \u00b6 2.1 Download istion \u00b6 curl -L https://git.io/getLatestIstio | sh - 2.2 Add the istioctl client to your PATH \u00b6 cd istio-0.7 export PATH = $PWD /bin: $PATH 2.3 Install Istio's core components. \u00b6 kubectl apply -f install/kubernetes/istio.yaml 2.4 verify your installation \u00b6 Note: If your cluster is running in an environment that does not support an external load balancer (e.g., minikube), the EXTERNAL-IP of istio-ingress says . You must access the application using the service NodePort, or use port-forwarding instead. kubectl get svc -n istio-system kubectl get pods -n istio-system Reference \u00b6 Install Minikube Install Istio","title":"Istio Installation"},{"location":"Kubernetes/2018-04-08-installation-istio/#1-minikube-installation","text":"Environment: Ubuntu 16.04.4 LTS X86_64bit","title":"1. Minikube Installation"},{"location":"Kubernetes/2018-04-08-installation-istio/#11-install-kubectl","text":"version v1.10.0 curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/v1.10.0/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/","title":"1.1 Install Kubectl"},{"location":"Kubernetes/2018-04-08-installation-istio/#12-install-minikube","text":"version v0.25.2 curl -Lo minikube https://storage.googleapis.com/minikube/releases/v0.25.2/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/","title":"1.2 Install Minikube"},{"location":"Kubernetes/2018-04-08-installation-istio/#13-start-minikube","text":"Runs the Kubernetes components on the host and not in a VM with --vm-driver=none export MINIKUBE_WANTUPDATENOTIFICATION = false export MINIKUBE_WANTREPORTERRORPROMPT = false export MINIKUBE_HOME = $HOME export CHANGE_MINIKUBE_NONE_USER = true mkdir $HOME /.kube || true touch $HOME /.kube/config export KUBECONFIG = $HOME /.kube/config minikube start --vm-driver = none \\ --extra-config = controller-manager.ClusterSigningCertFile = \"/var/lib/localkube/certs/ca.crt\" \\ --extra-config = controller-manager.ClusterSigningKeyFile = \"/var/lib/localkube/certs/ca.key\" \\ --extra-config = apiserver.Admission.PluginNames = NamespaceLifecycle,LimitRanger,ServiceAccount,PersistentVolumeLabel,DefaultStorageClass,DefaultTolerationSeconds,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota \\ --kubernetes-version = v1.10.0","title":"1.3 Start Minikube"},{"location":"Kubernetes/2018-04-08-installation-istio/#14-enabling-shell-autocompletion-optional","text":"source < ( kubectl completion bash ) echo \"source <(kubectl completion bash)\" >> ~/.bashrc","title":"1.4 Enabling shell autocompletion (optional)"},{"location":"Kubernetes/2018-04-08-installation-istio/#15-stop-minikube","text":"rm -rf .minikube miniube status","title":"1.5 Stop Minikube"},{"location":"Kubernetes/2018-04-08-installation-istio/#2-istio-installation","text":"","title":"2. Istio Installation"},{"location":"Kubernetes/2018-04-08-installation-istio/#21-download-istion","text":"curl -L https://git.io/getLatestIstio | sh -","title":"2.1 Download istion"},{"location":"Kubernetes/2018-04-08-installation-istio/#22-add-the-istioctl-client-to-your-path","text":"cd istio-0.7 export PATH = $PWD /bin: $PATH","title":"2.2 Add the istioctl client to your PATH"},{"location":"Kubernetes/2018-04-08-installation-istio/#23-install-istios-core-components","text":"kubectl apply -f install/kubernetes/istio.yaml","title":"2.3 Install Istio's core components."},{"location":"Kubernetes/2018-04-08-installation-istio/#24-verify-your-installation","text":"Note: If your cluster is running in an environment that does not support an external load balancer (e.g., minikube), the EXTERNAL-IP of istio-ingress says . You must access the application using the service NodePort, or use port-forwarding instead. kubectl get svc -n istio-system kubectl get pods -n istio-system","title":"2.4 verify your installation"},{"location":"Kubernetes/2018-04-08-installation-istio/#reference","text":"Install Minikube Install Istio","title":"Reference"},{"location":"Kubernetes/2018-04-08-installation-kubernete/","text":"k8s Single node installation with kubeadmin \u00b6 Install kubeadmin \u00b6 apt-get update && apt-get install -y apt-transport-https curl curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - cat <<EOF >/etc/apt/sources.list.d/kubernetes.list deb https://apt.kubernetes.io/ kubernetes-xenial main EOF apt-get update apt-get install -y kubelet kubeadm kubectl apt-mark hold kubelet kubeadm kubectl Setup network and network policy \u00b6 # Setup calico curl https://docs.projectcalico.org/v3.7/manifests/calico.yaml -O POD_CIDR=\"<your-pod-cidr>\" \\ sed -i -e \"s?192.168.0.0/16?$POD_CIDR?g\" calico.yaml # Init master kubeadm init --cri-socket /var/run/dockershim.sock # As regular user mkdir -p $HOME/.kube sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config sudo chown $(id -u):$(id -g) $HOME/.kube/config # As root export KUBECONFIG=/etc/kubernetes/admin.conf # You should now deploy a pod network to the cluster. kubectl apply -f https://docs.projectcalico.org/v3.7/manifests/calico.yaml # Enable schedule pods on the master kubectl taint nodes --all node-role.kubernetes.io/master- # Enbale K8s Dashboard kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0-beta1/aio/deploy/recommended.yaml # Accessing the Dashboard UI https://github.com/kubernetes/dashboard/wiki/Creating-sample-user # Get Token kubectl -n kube-system describe secret $(kubectl -n kube-system get secret | grep admin-user | awk '{print $1}') http://9.30.246.163:8001/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy/ Enable Dashboard \u00b6 kubectl get svc -n kubernetes-dashboard type [ClusterIP --> NodePort] [Creating sample user] (https://github.com/kubernetes/dashboard/wiki/Creating-sample-user) 1. Create Service Account 2. Create ClusterRoleBinding 3. Bearer Token Reset \u00b6 kubectl drain aledo1.fyre.ibm.com --delete-local-data --force --ignore-daemonsets kubectl delete node aledo1.fyre.ibm.com kubeadm reset Restart \u00b6 //\u67e5\u770bkubectl\u670d\u52a1\u72b6\u6001 systemctl status kubelet //\u5355\u8282\u70b9\u5b89\u88c5\uff0c\u5173\u95edswap swapoff -a //\u5237\u65b0\u670d\u52a1 systemctl daemon-reload systemctl restart kubelet Install Istio on k8s \u00b6 curl -L https://git.io/getLatestIstio | ISTIO_VERSION=1.1.7 sh - cd istio-1.1.7 export PATH=$PWD/bin:$PATH for i in install/kubernetes/helm/istio-init/files/crd*yaml; do kubectl apply -f $i; done kubectl apply -f install/kubernetes/istio-demo.yaml Q&A Q A kubeadm [ERROR Swap]: running with swap on is not supported. Please disable swap swapoff -a Minikube Installation \u00b6 Environment: Ubuntu 16.04.4 LTS X86_64bit 1.1 Install Kubectl \u00b6 version v1.10.0 curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/v1.10.0/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/ 1.2 Install Minikube \u00b6 version v0.25.2 curl -Lo minikube https://storage.googleapis.com/minikube/releases/v0.25.2/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/ 1.3 Start Minikube \u00b6 Runs the Kubernetes components on the host and not in a VM with --vm-driver=none export MINIKUBE_WANTUPDATENOTIFICATION = false export MINIKUBE_WANTREPORTERRORPROMPT = false export MINIKUBE_HOME = $HOME export CHANGE_MINIKUBE_NONE_USER = true mkdir $HOME /.kube || true touch $HOME /.kube/config export KUBECONFIG = $HOME /.kube/config minikube start --vm-driver = none 1.4 Enabling shell autocompletion (optional) \u00b6 source < ( kubectl completion bash ) echo \"source <(kubectl completion bash)\" >> ~/.bashrc 1.5 Stop Minikube \u00b6 rm -rf .minikube minikube status Reference \u00b6 Install Minikube Kubernete\u6280\u672f\u5165\u95e8\u4e0e\u5b9e\u8df5","title":"kubernetes Installation"},{"location":"Kubernetes/2018-04-08-installation-kubernete/#k8s-single-node-installation-with-kubeadmin","text":"","title":"k8s Single node installation with kubeadmin"},{"location":"Kubernetes/2018-04-08-installation-kubernete/#install-kubeadmin","text":"apt-get update && apt-get install -y apt-transport-https curl curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - cat <<EOF >/etc/apt/sources.list.d/kubernetes.list deb https://apt.kubernetes.io/ kubernetes-xenial main EOF apt-get update apt-get install -y kubelet kubeadm kubectl apt-mark hold kubelet kubeadm kubectl","title":"Install kubeadmin"},{"location":"Kubernetes/2018-04-08-installation-kubernete/#setup-network-and-network-policy","text":"# Setup calico curl https://docs.projectcalico.org/v3.7/manifests/calico.yaml -O POD_CIDR=\"<your-pod-cidr>\" \\ sed -i -e \"s?192.168.0.0/16?$POD_CIDR?g\" calico.yaml # Init master kubeadm init --cri-socket /var/run/dockershim.sock # As regular user mkdir -p $HOME/.kube sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config sudo chown $(id -u):$(id -g) $HOME/.kube/config # As root export KUBECONFIG=/etc/kubernetes/admin.conf # You should now deploy a pod network to the cluster. kubectl apply -f https://docs.projectcalico.org/v3.7/manifests/calico.yaml # Enable schedule pods on the master kubectl taint nodes --all node-role.kubernetes.io/master- # Enbale K8s Dashboard kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0-beta1/aio/deploy/recommended.yaml # Accessing the Dashboard UI https://github.com/kubernetes/dashboard/wiki/Creating-sample-user # Get Token kubectl -n kube-system describe secret $(kubectl -n kube-system get secret | grep admin-user | awk '{print $1}') http://9.30.246.163:8001/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy/","title":"Setup network and network policy"},{"location":"Kubernetes/2018-04-08-installation-kubernete/#enable-dashboard","text":"kubectl get svc -n kubernetes-dashboard type [ClusterIP --> NodePort] [Creating sample user] (https://github.com/kubernetes/dashboard/wiki/Creating-sample-user) 1. Create Service Account 2. Create ClusterRoleBinding 3. Bearer Token","title":"Enable Dashboard"},{"location":"Kubernetes/2018-04-08-installation-kubernete/#reset","text":"kubectl drain aledo1.fyre.ibm.com --delete-local-data --force --ignore-daemonsets kubectl delete node aledo1.fyre.ibm.com kubeadm reset","title":"Reset"},{"location":"Kubernetes/2018-04-08-installation-kubernete/#restart","text":"//\u67e5\u770bkubectl\u670d\u52a1\u72b6\u6001 systemctl status kubelet //\u5355\u8282\u70b9\u5b89\u88c5\uff0c\u5173\u95edswap swapoff -a //\u5237\u65b0\u670d\u52a1 systemctl daemon-reload systemctl restart kubelet","title":"Restart"},{"location":"Kubernetes/2018-04-08-installation-kubernete/#install-istio-on-k8s","text":"curl -L https://git.io/getLatestIstio | ISTIO_VERSION=1.1.7 sh - cd istio-1.1.7 export PATH=$PWD/bin:$PATH for i in install/kubernetes/helm/istio-init/files/crd*yaml; do kubectl apply -f $i; done kubectl apply -f install/kubernetes/istio-demo.yaml Q&A Q A kubeadm [ERROR Swap]: running with swap on is not supported. Please disable swap swapoff -a","title":"Install Istio on k8s"},{"location":"Kubernetes/2018-04-08-installation-kubernete/#minikube-installation","text":"Environment: Ubuntu 16.04.4 LTS X86_64bit","title":"Minikube Installation"},{"location":"Kubernetes/2018-04-08-installation-kubernete/#11-install-kubectl","text":"version v1.10.0 curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/v1.10.0/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/","title":"1.1 Install Kubectl"},{"location":"Kubernetes/2018-04-08-installation-kubernete/#12-install-minikube","text":"version v0.25.2 curl -Lo minikube https://storage.googleapis.com/minikube/releases/v0.25.2/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/","title":"1.2 Install Minikube"},{"location":"Kubernetes/2018-04-08-installation-kubernete/#13-start-minikube","text":"Runs the Kubernetes components on the host and not in a VM with --vm-driver=none export MINIKUBE_WANTUPDATENOTIFICATION = false export MINIKUBE_WANTREPORTERRORPROMPT = false export MINIKUBE_HOME = $HOME export CHANGE_MINIKUBE_NONE_USER = true mkdir $HOME /.kube || true touch $HOME /.kube/config export KUBECONFIG = $HOME /.kube/config minikube start --vm-driver = none","title":"1.3 Start Minikube"},{"location":"Kubernetes/2018-04-08-installation-kubernete/#14-enabling-shell-autocompletion-optional","text":"source < ( kubectl completion bash ) echo \"source <(kubectl completion bash)\" >> ~/.bashrc","title":"1.4 Enabling shell autocompletion (optional)"},{"location":"Kubernetes/2018-04-08-installation-kubernete/#15-stop-minikube","text":"rm -rf .minikube minikube status","title":"1.5 Stop Minikube"},{"location":"Kubernetes/2018-04-08-installation-kubernete/#reference","text":"Install Minikube Kubernete\u6280\u672f\u5165\u95e8\u4e0e\u5b9e\u8df5","title":"Reference"},{"location":"Kubernetes/2018-04-08-knowledge-kubernete/","text":"Kubernetes Volume \u00b6 Volume \u662fPod\u4e2d\u80fd\u591f\u88ab\u591a\u4e2a\u5bb9\u5668\u8bbf\u95ee\u7684\u5171\u4eab\u76ee\u5f55\u3002 - Kubernetes\u7684Volume\u5b9a\u4e49\u5728Pod\u4e0a\uff0c\u88abPod\u4e2d\u7684\u591a\u4e2a\u5bb9\u5668\u6302\u8f7d\u5230\u5177\u4f53\u7684\u6587\u4ef6\u76ee\u5f55\u4e0b\u3002 - Kubernete Volume\u7684\u751f\u547d\u5468\u671f\u4e0ePod\u76f8\u540c\u3002\u4e0e\u5bb9\u5668\u65e0\u5173\uff0c\u4e5f\u5c31\u662f\u8bf4\u5bb9\u5668\u505c\u6b62\u6216\u8005\u91cd\u542f\uff0cVolume\u4e2d\u7684\u6570\u636e\u4e0d\u4f1a\u4e22\u5931\u3002 Kubernetes\u652f\u6301\u591a\u79cd\u7c7b\u578b\u7684Volume\uff0c\u4f8b\u5982:ClusterFS,Ceph\u7b49\u5206\u5e03\u5f0f\u6587\u4ef6\u7cfb\u7edf\u3002 Persistent Volume \u00b6 NFS, AWS, GlusterFS, GCE persistent Disks, RBD Kubernetes Service \u00b6 Kubernetes\u7684service\u5b9a\u4e49\u4e86\u4e00\u4e2a\u670d\u52a1\u7684\u8bbf\u95ee\u5730\u5740\uff0c\u524d\u7aef\u7684\u5e94\u7528Pod\u901a\u8fc7\u8fd9\u4e2a\u5165\u53e3\u8bbf\u95ee\u5730\u5740\u8bbf\u95ee\u80cc\u540e\u7684\u4e00\u7ec4\u7531Pod\u526f\u672c\u7ec4\u6210\u7684\u670d\u52a1\u96c6\u7fa4\uff0cService\u4e0e\u5176\u540e\u7aef\u7684Pod\u526f\u672c\u96c6\u7fa4\u4e4b\u95f4\u901a\u8fc7Label Selector\u5173\u8054\u5728\u4e00\u8d77\u3002RC\u7684\u4f5c\u7528\u662f\u4fdd\u8bc1service\u7684\u670d\u52a1\u80fd\u529b\u4e0e\u670d\u52a1\u8d28\u91cf\u8fbe\u5230\u9884\u671f\u7684\u6807\u51c6\u3002kube-proxy\u5c06\u5bf9service\u7684\u8bf7\u6c42\u8d1f\u8f7d\u5747\u8861\u5230\u540e\u7aef\u7684pod\u4e0a\u3002kube-proxy\u63d0\u4f9b\u5185\u90e8\u7684\u8d1f\u8f7d\u5747\u8861\u80fd\u529b\u3002 Service \u4e00\u65e6\u521b\u5efa\uff0cKubernete\u4f1a\u4e3a\u5b83\u521b\u5efa\u4e00\u4e2a\u5168\u5c40\u552f\u4e00\u7684\u865a\u62dfIP\uff0c\u5373ClusterIP\u3002 spec.ports\u4e2d port \u6307\u5b9aService\u7684\u865a\u62df\u7aef\u53e3\u53f7\uff0c targetPort \u6307\u5b9a\u5bb9\u5668\u5411\u5916\u754c\u63d0\u4f9b\u670d\u52a1\u6240EXPOSE\u7684\u7aef\u53e3\u53f7\uff0c\u5982\u679c\u4e0d\u6307\u5b9a\uff0c\u8868\u793a\u548cport\u7684\u503c\u4e00\u6837\u3002 nodePort \u548c type: NodePort \u4e00\u8d77\u4f7f\u7528\uff0c\u5c06\u670d\u52a1\u63d0\u4f9b\u7ed9Kubernete\u96c6\u7fa4\u5916\u90e8\u7684\u5e94\u7528\u4f7f\u7528\u3002 ... spec: type: NodePort ports: - port: 8080 targetPort: 8080 nodePort: 10086 Types of IP \u00b6 NodeIP: Node\u8282\u70b9\u7684IP Pod IP\uff1aPOD\u7684IP Cluster IP\uff1a Service\u7684IP\u3002\u4ec5\u4ec5\u4f5c\u7528\u4e8eKubernetes Service\u8fd9\u4e2a\u5bf9\u8c61\uff0c\u7531Kubernetes\u7ba1\u7406\u548c\u5206\u914d\u3002\u65e0\u6cd5\u88abping\u3002\u53ea\u80fd\u4e0eService Port\u7ec4\u5408\u8d77\u6765\u4f7f\u7528\u3002","title":"Basic of Kubernetes"},{"location":"Kubernetes/2018-04-08-knowledge-kubernete/#kubernetes-volume","text":"Volume \u662fPod\u4e2d\u80fd\u591f\u88ab\u591a\u4e2a\u5bb9\u5668\u8bbf\u95ee\u7684\u5171\u4eab\u76ee\u5f55\u3002 - Kubernetes\u7684Volume\u5b9a\u4e49\u5728Pod\u4e0a\uff0c\u88abPod\u4e2d\u7684\u591a\u4e2a\u5bb9\u5668\u6302\u8f7d\u5230\u5177\u4f53\u7684\u6587\u4ef6\u76ee\u5f55\u4e0b\u3002 - Kubernete Volume\u7684\u751f\u547d\u5468\u671f\u4e0ePod\u76f8\u540c\u3002\u4e0e\u5bb9\u5668\u65e0\u5173\uff0c\u4e5f\u5c31\u662f\u8bf4\u5bb9\u5668\u505c\u6b62\u6216\u8005\u91cd\u542f\uff0cVolume\u4e2d\u7684\u6570\u636e\u4e0d\u4f1a\u4e22\u5931\u3002 Kubernetes\u652f\u6301\u591a\u79cd\u7c7b\u578b\u7684Volume\uff0c\u4f8b\u5982:ClusterFS,Ceph\u7b49\u5206\u5e03\u5f0f\u6587\u4ef6\u7cfb\u7edf\u3002","title":"Kubernetes Volume"},{"location":"Kubernetes/2018-04-08-knowledge-kubernete/#persistent-volume","text":"NFS, AWS, GlusterFS, GCE persistent Disks, RBD","title":"Persistent Volume"},{"location":"Kubernetes/2018-04-08-knowledge-kubernete/#kubernetes-service","text":"Kubernetes\u7684service\u5b9a\u4e49\u4e86\u4e00\u4e2a\u670d\u52a1\u7684\u8bbf\u95ee\u5730\u5740\uff0c\u524d\u7aef\u7684\u5e94\u7528Pod\u901a\u8fc7\u8fd9\u4e2a\u5165\u53e3\u8bbf\u95ee\u5730\u5740\u8bbf\u95ee\u80cc\u540e\u7684\u4e00\u7ec4\u7531Pod\u526f\u672c\u7ec4\u6210\u7684\u670d\u52a1\u96c6\u7fa4\uff0cService\u4e0e\u5176\u540e\u7aef\u7684Pod\u526f\u672c\u96c6\u7fa4\u4e4b\u95f4\u901a\u8fc7Label Selector\u5173\u8054\u5728\u4e00\u8d77\u3002RC\u7684\u4f5c\u7528\u662f\u4fdd\u8bc1service\u7684\u670d\u52a1\u80fd\u529b\u4e0e\u670d\u52a1\u8d28\u91cf\u8fbe\u5230\u9884\u671f\u7684\u6807\u51c6\u3002kube-proxy\u5c06\u5bf9service\u7684\u8bf7\u6c42\u8d1f\u8f7d\u5747\u8861\u5230\u540e\u7aef\u7684pod\u4e0a\u3002kube-proxy\u63d0\u4f9b\u5185\u90e8\u7684\u8d1f\u8f7d\u5747\u8861\u80fd\u529b\u3002 Service \u4e00\u65e6\u521b\u5efa\uff0cKubernete\u4f1a\u4e3a\u5b83\u521b\u5efa\u4e00\u4e2a\u5168\u5c40\u552f\u4e00\u7684\u865a\u62dfIP\uff0c\u5373ClusterIP\u3002 spec.ports\u4e2d port \u6307\u5b9aService\u7684\u865a\u62df\u7aef\u53e3\u53f7\uff0c targetPort \u6307\u5b9a\u5bb9\u5668\u5411\u5916\u754c\u63d0\u4f9b\u670d\u52a1\u6240EXPOSE\u7684\u7aef\u53e3\u53f7\uff0c\u5982\u679c\u4e0d\u6307\u5b9a\uff0c\u8868\u793a\u548cport\u7684\u503c\u4e00\u6837\u3002 nodePort \u548c type: NodePort \u4e00\u8d77\u4f7f\u7528\uff0c\u5c06\u670d\u52a1\u63d0\u4f9b\u7ed9Kubernete\u96c6\u7fa4\u5916\u90e8\u7684\u5e94\u7528\u4f7f\u7528\u3002 ... spec: type: NodePort ports: - port: 8080 targetPort: 8080 nodePort: 10086","title":"Kubernetes Service"},{"location":"Kubernetes/2018-04-08-knowledge-kubernete/#types-of-ip","text":"NodeIP: Node\u8282\u70b9\u7684IP Pod IP\uff1aPOD\u7684IP Cluster IP\uff1a Service\u7684IP\u3002\u4ec5\u4ec5\u4f5c\u7528\u4e8eKubernetes Service\u8fd9\u4e2a\u5bf9\u8c61\uff0c\u7531Kubernetes\u7ba1\u7406\u548c\u5206\u914d\u3002\u65e0\u6cd5\u88abping\u3002\u53ea\u80fd\u4e0eService Port\u7ec4\u5408\u8d77\u6765\u4f7f\u7528\u3002","title":"Types of IP"},{"location":"Linux/2018-01-21-cmd-linux/","text":"lsof \u67e5\u770b\u7aef\u53e3\u4f7f\u7528\u60c5\u51b5 \u00b6 lsof -i: \u7aef\u53e3 Screen \u547d\u4ee4 \u00b6 # \u65b0\u5efa\u4e00\u4e2ascreen \u5e76\u4ee5screenName\u547d\u540d screen -S screenName # Ctrl + a d \u9000\u51fa\u5f53\u524d\u7684screen\u4f1a\u8bdd # list screen screen -ls # \u9000\u51fa\u4f1a\u8bdd exit # \u6062\u590d\u4f1a\u8bdd screen -r screenId # \u5220\u9664dead\u4f1a\u8bdd screen -wipe Vi\u547d\u4ee4 \u00b6 \u79fb\u52a8\u5149\u6807 \u00b6 \u6309\u952e \u79fb\u52a8\u5149\u6807 h\u6216\u8005\u2190 \u5411\u5de6\u79fb\u52a8\u4e00\u4e2a\u5b57\u7b26 j\u6216\u8005\u2193 \u5411\u4e0b\u79fb\u52a8\u4e00\u4e2a\u5b57\u7b26 k\u6216\u8005\u2191 \u5411\u4e0a\u79fb\u52a8\u4e00\u4e2a\u5b57\u7b26 l\u6216\u8005\u2192 \u5411\u53f3\u79fb\u52a8\u4e00\u4e2a\u5b57\u7b26 ^ \u79fb\u52a8\u5230\u5f53\u524d\u884c\u7684\u7b2c\u4e00\u4e2a\u975e\u7a7a\u5b57\u7b26 $ \u79fb\u52a8\u5230\u5f53\u524d\u884c\u7684\u672b\u5c3e Ctrl-f \u5411\u4e0b\u7ffb\u4e00\u9875 Ctrl-b \u5411\u4e0a\u7ffb\u4e00\u9875 numberG \u79fb\u52a8\u5230\u7b2c number \u884c \u57fa\u672c\u7f16\u8f91 \u00b6 \u547d\u4ee4 \u6267\u884c\u7684\u64cd\u4f5c i \u5728\u5149\u6807\u6240\u5728\u5b57\u7b26\u7684\u524d\u9762\u5f00\u59cb\u63d2\u5165\u65b0\u5b57\u7b26 a \u5728\u5149\u6807\u6240\u5728\u5b57\u7b26\u7684\u540e\u9762\u5f00\u59cb\u63d2\u5165\u65b0\u5b57\u7b26 o \u5728\u5149\u6807\u6240\u5728\u884c\u7684\u4e0b\u9762\u63d2\u5165\u65b0\u884c O \u5728\u5149\u6807\u6240\u5728\u884c\u7684\u4e0a\u9762\u63d2\u5165\u65b0\u884c x \u5220\u9664\u5f53\u524d\u5b57\u7b26 3x \u5220\u9664\u5f53\u524d\u5b57\u7b26\u4ee5\u53ca\u540e\u9762\u7684\u4e24\u4e2a\u5b57\u7b26 dd \u5220\u9664\u5f53\u524d\u884c 3dd \u5220\u9664\u5f53\u524d\u884c\u4ee5\u53ca\u968f\u540e\u7684\u4e24\u884c d$ \u5220\u9664\u4ece\u5149\u6807\u4f4d\u7f6e\u5230\u884c\u672b\u7684\u6240\u6709\u5b57\u7b26 d0(zero) \u5220\u9664\u4ece\u5149\u6807\u4f4d\u7f6e\u5230\u884c\u9996\u7684\u6240\u6709\u5b57\u7b26 d^ \u5220\u9664\u4ece\u5149\u6807\u4f4d\u7f6e\u5230\u884c\u9996\u7684\u7b2c\u4e00\u4e2a\u975e\u7a7a\u5b57\u7b26 dG \u5220\u9664\u5f53\u524d\u884c\u5230\u6587\u4ef6\u7684\u672b\u5c3e d3G \u5220\u9664\u4ece\u5f53\u524d\u884c\u5230\u6587\u4ef6\u7684\u7b2c3\u884c yy \u590d\u5236\u5f53\u524d\u884c 3yy \u590d\u5236\u5f53\u524d\u884c\u4ee5\u53ca\u968f\u540e\u76842\u884c p \u5c06\u590d\u5236\u7684\u5185\u5bb9\u7c98\u8d34\u5230\u5f53\u524d\u884c\u7684\u4e0b\u9762 P \u5c06\u590d\u5236\u7684\u5185\u5bb9\u7c98\u8d34\u5230\u5f53\u524d\u884c\u7684\u4e0a\u9762 \u67e5\u627e\u548c\u66ff\u6362 \u00b6 \u547d\u4ee4 \u6267\u884c\u7684\u64cd\u4f5c : \u5192\u53f7\u5b57\u7b26\u8fd0\u884c\u4e00\u4e2a ex \u547d\u4ee4 % % \u662f\u4e00\u4e2a\u5feb\u6377\u65b9\u5f0f\uff0c\u8868\u793a\u4ece\u7b2c\u4e00\u884c\u5230\u6700\u540e\u4e00\u884c, \u6216\u8005\u7528 1,$ \u6765\u4ee3\u66ff\uff0c\u610f\u601d\u662f\u4ece\u7b2c\u4e00\u884c\u5230\u6587\u4ef6\u7684\u6700\u540e\u4e00\u884c s \u6307\u5b9a\u64cd\u4f5c,\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u662f\uff0c\u66ff\u6362(\u67e5\u627e\u4e0e\u66ff\u4ee3) /old char/new char \u67e5\u627e\u7c7b\u578b\u4e0e\u66ff\u4ee3\u6587\u672c g \u5168\u5c40\u66ff\u6362\uff0c\u5982\u679c\u7701\u7565\uff0c\u5219\u53ea\u66ff\u6362\u6bcf\u4e2a\u6587\u672c\u884c\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26 //\u5c06\u7b2c1\u884c\u5230\u7b2c5\u884c\u4e2d\u7b2c\u4e00\u4e2a\u7684hello\u66ff\u6362\u4e3ahi 1 ,5s/hello/hi //\u5c06\u6587\u4e2d\u6240\u6709\u7684hello\u66ff\u6362\u4e3ahi %s/hello/hi/g \u641c\u7d22\u547d\u4ee4 \u00b6 locate \u67e5\u627e\u6587\u4ef6\u7684\u7b80\u5355\u65b9\u5f0f \u00b6 locate \u7a0b\u5e8f\u4f1a\u6267\u884c\u4e00\u6b21\u5feb\u901f\u7684\u8def\u5f84\u540d\u6570\u636e\u5e93\u641c\u7d22\uff0c\u5e76\u4e14\u8f93\u51fa\u6bcf\u4e2a\u4e0e\u7ed9\u5b9a\u5b50\u5b57\u7b26\u4e32\u76f8\u5339\u914d\u7684\u8def\u5f84\u540d locate redis | grep download //\u5c06\u641c\u7d22\u7684\u7ed3\u679c\u91cd\u5b9a\u4f4d\u8f93\u51fa\u5230resut\u6587\u4ef6 locate redis | grep download > result find \u67e5\u627e\u6587\u4ef6\u7684\u590d\u6742\u65b9\u5f0f \u00b6 /**\u5728home\u76ee\u5f55\u4e2d\u67e5\u627e\u4ee5foo\u5f00\u5934\u7684\u6587\u4ef6 * -type \u6307\u5b9a\u67e5\u627e\u6587\u4ef6\u7684\u7c7b\u578b -f:\u666e\u901a\u6587\u4ef6 -d:\u76ee\u5f55 -l:\u7b26\u53f7\u94fe\u63a5 -b:\u5757\u7279\u6b8a\u8bbe\u5907\u6587\u4ef6 -c:\u5b57\u7b26\u7279\u6b8a\u8bbe\u5907\u6587\u4ef6 */ find ~ -type f -name 'foo*' \u5f52\u6863\u4e0e\u5907\u4efd \u00b6 gzip\u547d\u4ee4 \u00b6 //\u521b\u5efa\u4e00\u4e2a\u538b\u7f29\u6587\u4ef6 ls -l . | gzip > test.txt.gz //\u89e3\u538b\u7f29\u4e00\u4e2a\u6587\u4ef6 gzip -d test.txt.gz tar\u547d\u4ee4 \u00b6 //\u521b\u5efa\u4e00\u4e2atar\u6587\u4ef6 tar cf xxx.tar playground //\u62bd\u53d6\u4e00\u4e2atar\u6587\u4ef6 tar xf ../playground.tar zip\u547d\u4ee4 \u00b6 //\u521b\u5efa\u4e00\u4e2a\u538b\u7f29\u6587\u4ef6 zip -r xxx.zip testfolder //\u89e3\u538b\u7f29\u6587\u4ef6 unzip xxx.zip . \u8fdb\u7a0b\u67e5\u770b\u547d\u4ee4 \u00b6 //\u67e5\u770b\u6240\u6709\u7684java\u8fdb\u7a0b ps -ef | grep java \u5f15\u7528 \u00b6 \u53c2\u8003\u94fe\u63a5","title":"\u5e38\u7528\u7684linux\u547d\u4ee4"},{"location":"Linux/2018-01-21-cmd-linux/#lsof","text":"lsof -i: \u7aef\u53e3","title":"lsof  \u67e5\u770b\u7aef\u53e3\u4f7f\u7528\u60c5\u51b5"},{"location":"Linux/2018-01-21-cmd-linux/#screen","text":"# \u65b0\u5efa\u4e00\u4e2ascreen \u5e76\u4ee5screenName\u547d\u540d screen -S screenName # Ctrl + a d \u9000\u51fa\u5f53\u524d\u7684screen\u4f1a\u8bdd # list screen screen -ls # \u9000\u51fa\u4f1a\u8bdd exit # \u6062\u590d\u4f1a\u8bdd screen -r screenId # \u5220\u9664dead\u4f1a\u8bdd screen -wipe","title":"Screen \u547d\u4ee4"},{"location":"Linux/2018-01-21-cmd-linux/#vi","text":"","title":"Vi\u547d\u4ee4"},{"location":"Linux/2018-01-21-cmd-linux/#_1","text":"\u6309\u952e \u79fb\u52a8\u5149\u6807 h\u6216\u8005\u2190 \u5411\u5de6\u79fb\u52a8\u4e00\u4e2a\u5b57\u7b26 j\u6216\u8005\u2193 \u5411\u4e0b\u79fb\u52a8\u4e00\u4e2a\u5b57\u7b26 k\u6216\u8005\u2191 \u5411\u4e0a\u79fb\u52a8\u4e00\u4e2a\u5b57\u7b26 l\u6216\u8005\u2192 \u5411\u53f3\u79fb\u52a8\u4e00\u4e2a\u5b57\u7b26 ^ \u79fb\u52a8\u5230\u5f53\u524d\u884c\u7684\u7b2c\u4e00\u4e2a\u975e\u7a7a\u5b57\u7b26 $ \u79fb\u52a8\u5230\u5f53\u524d\u884c\u7684\u672b\u5c3e Ctrl-f \u5411\u4e0b\u7ffb\u4e00\u9875 Ctrl-b \u5411\u4e0a\u7ffb\u4e00\u9875 numberG \u79fb\u52a8\u5230\u7b2c number \u884c","title":"\u79fb\u52a8\u5149\u6807"},{"location":"Linux/2018-01-21-cmd-linux/#_2","text":"\u547d\u4ee4 \u6267\u884c\u7684\u64cd\u4f5c i \u5728\u5149\u6807\u6240\u5728\u5b57\u7b26\u7684\u524d\u9762\u5f00\u59cb\u63d2\u5165\u65b0\u5b57\u7b26 a \u5728\u5149\u6807\u6240\u5728\u5b57\u7b26\u7684\u540e\u9762\u5f00\u59cb\u63d2\u5165\u65b0\u5b57\u7b26 o \u5728\u5149\u6807\u6240\u5728\u884c\u7684\u4e0b\u9762\u63d2\u5165\u65b0\u884c O \u5728\u5149\u6807\u6240\u5728\u884c\u7684\u4e0a\u9762\u63d2\u5165\u65b0\u884c x \u5220\u9664\u5f53\u524d\u5b57\u7b26 3x \u5220\u9664\u5f53\u524d\u5b57\u7b26\u4ee5\u53ca\u540e\u9762\u7684\u4e24\u4e2a\u5b57\u7b26 dd \u5220\u9664\u5f53\u524d\u884c 3dd \u5220\u9664\u5f53\u524d\u884c\u4ee5\u53ca\u968f\u540e\u7684\u4e24\u884c d$ \u5220\u9664\u4ece\u5149\u6807\u4f4d\u7f6e\u5230\u884c\u672b\u7684\u6240\u6709\u5b57\u7b26 d0(zero) \u5220\u9664\u4ece\u5149\u6807\u4f4d\u7f6e\u5230\u884c\u9996\u7684\u6240\u6709\u5b57\u7b26 d^ \u5220\u9664\u4ece\u5149\u6807\u4f4d\u7f6e\u5230\u884c\u9996\u7684\u7b2c\u4e00\u4e2a\u975e\u7a7a\u5b57\u7b26 dG \u5220\u9664\u5f53\u524d\u884c\u5230\u6587\u4ef6\u7684\u672b\u5c3e d3G \u5220\u9664\u4ece\u5f53\u524d\u884c\u5230\u6587\u4ef6\u7684\u7b2c3\u884c yy \u590d\u5236\u5f53\u524d\u884c 3yy \u590d\u5236\u5f53\u524d\u884c\u4ee5\u53ca\u968f\u540e\u76842\u884c p \u5c06\u590d\u5236\u7684\u5185\u5bb9\u7c98\u8d34\u5230\u5f53\u524d\u884c\u7684\u4e0b\u9762 P \u5c06\u590d\u5236\u7684\u5185\u5bb9\u7c98\u8d34\u5230\u5f53\u524d\u884c\u7684\u4e0a\u9762","title":"\u57fa\u672c\u7f16\u8f91"},{"location":"Linux/2018-01-21-cmd-linux/#_3","text":"\u547d\u4ee4 \u6267\u884c\u7684\u64cd\u4f5c : \u5192\u53f7\u5b57\u7b26\u8fd0\u884c\u4e00\u4e2a ex \u547d\u4ee4 % % \u662f\u4e00\u4e2a\u5feb\u6377\u65b9\u5f0f\uff0c\u8868\u793a\u4ece\u7b2c\u4e00\u884c\u5230\u6700\u540e\u4e00\u884c, \u6216\u8005\u7528 1,$ \u6765\u4ee3\u66ff\uff0c\u610f\u601d\u662f\u4ece\u7b2c\u4e00\u884c\u5230\u6587\u4ef6\u7684\u6700\u540e\u4e00\u884c s \u6307\u5b9a\u64cd\u4f5c,\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u662f\uff0c\u66ff\u6362(\u67e5\u627e\u4e0e\u66ff\u4ee3) /old char/new char \u67e5\u627e\u7c7b\u578b\u4e0e\u66ff\u4ee3\u6587\u672c g \u5168\u5c40\u66ff\u6362\uff0c\u5982\u679c\u7701\u7565\uff0c\u5219\u53ea\u66ff\u6362\u6bcf\u4e2a\u6587\u672c\u884c\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26 //\u5c06\u7b2c1\u884c\u5230\u7b2c5\u884c\u4e2d\u7b2c\u4e00\u4e2a\u7684hello\u66ff\u6362\u4e3ahi 1 ,5s/hello/hi //\u5c06\u6587\u4e2d\u6240\u6709\u7684hello\u66ff\u6362\u4e3ahi %s/hello/hi/g","title":"\u67e5\u627e\u548c\u66ff\u6362"},{"location":"Linux/2018-01-21-cmd-linux/#_4","text":"","title":"\u641c\u7d22\u547d\u4ee4"},{"location":"Linux/2018-01-21-cmd-linux/#locate","text":"locate \u7a0b\u5e8f\u4f1a\u6267\u884c\u4e00\u6b21\u5feb\u901f\u7684\u8def\u5f84\u540d\u6570\u636e\u5e93\u641c\u7d22\uff0c\u5e76\u4e14\u8f93\u51fa\u6bcf\u4e2a\u4e0e\u7ed9\u5b9a\u5b50\u5b57\u7b26\u4e32\u76f8\u5339\u914d\u7684\u8def\u5f84\u540d locate redis | grep download //\u5c06\u641c\u7d22\u7684\u7ed3\u679c\u91cd\u5b9a\u4f4d\u8f93\u51fa\u5230resut\u6587\u4ef6 locate redis | grep download > result","title":"locate \u67e5\u627e\u6587\u4ef6\u7684\u7b80\u5355\u65b9\u5f0f"},{"location":"Linux/2018-01-21-cmd-linux/#find","text":"/**\u5728home\u76ee\u5f55\u4e2d\u67e5\u627e\u4ee5foo\u5f00\u5934\u7684\u6587\u4ef6 * -type \u6307\u5b9a\u67e5\u627e\u6587\u4ef6\u7684\u7c7b\u578b -f:\u666e\u901a\u6587\u4ef6 -d:\u76ee\u5f55 -l:\u7b26\u53f7\u94fe\u63a5 -b:\u5757\u7279\u6b8a\u8bbe\u5907\u6587\u4ef6 -c:\u5b57\u7b26\u7279\u6b8a\u8bbe\u5907\u6587\u4ef6 */ find ~ -type f -name 'foo*'","title":"find \u67e5\u627e\u6587\u4ef6\u7684\u590d\u6742\u65b9\u5f0f"},{"location":"Linux/2018-01-21-cmd-linux/#_5","text":"","title":"\u5f52\u6863\u4e0e\u5907\u4efd"},{"location":"Linux/2018-01-21-cmd-linux/#gzip","text":"//\u521b\u5efa\u4e00\u4e2a\u538b\u7f29\u6587\u4ef6 ls -l . | gzip > test.txt.gz //\u89e3\u538b\u7f29\u4e00\u4e2a\u6587\u4ef6 gzip -d test.txt.gz","title":"gzip\u547d\u4ee4"},{"location":"Linux/2018-01-21-cmd-linux/#tar","text":"//\u521b\u5efa\u4e00\u4e2atar\u6587\u4ef6 tar cf xxx.tar playground //\u62bd\u53d6\u4e00\u4e2atar\u6587\u4ef6 tar xf ../playground.tar","title":"tar\u547d\u4ee4"},{"location":"Linux/2018-01-21-cmd-linux/#zip","text":"//\u521b\u5efa\u4e00\u4e2a\u538b\u7f29\u6587\u4ef6 zip -r xxx.zip testfolder //\u89e3\u538b\u7f29\u6587\u4ef6 unzip xxx.zip .","title":"zip\u547d\u4ee4"},{"location":"Linux/2018-01-21-cmd-linux/#_6","text":"//\u67e5\u770b\u6240\u6709\u7684java\u8fdb\u7a0b ps -ef | grep java","title":"\u8fdb\u7a0b\u67e5\u770b\u547d\u4ee4"},{"location":"Linux/2018-01-21-cmd-linux/#_7","text":"\u53c2\u8003\u94fe\u63a5","title":"\u5f15\u7528"}]}